Motion Planning and Collision Avoidance using Navigation Vector Fields
Dimitra Panagou
Abstract— This paper presents a novel method on the motion
and path planning for unicycle robots in environments with
static circular obstacles. The method employs a family of 2-
dimensional analytic vector ﬁelds, which have singular points
of high-order type and whose integral curves exhibit various
patterns depending on the value of a parameter . More
speciﬁcally, for a known value of  the vector ﬁeld has a
unique singular point of dipole type and its integral curves
are suitable for steering the unicycle to a goal conﬁguration.
Furthermore, for the value of  that the vector ﬁeld has
a continuum of singular points, the integral curves can be
used to deﬁne ﬂows around circular obstacles. An almost
global feedback motion plan is then constructed by suitably
blending attractive and repulsive vector ﬁelds in a static obstacle
environment. The proposed motion planning and control design
is also extended to the multi-agent case, where each agent needs
to converge to a desired conﬁguration while avoiding collisions
with other agents. The efﬁcacy of the approach is demonstrated
via simulation results.
I. INTRODUCTION
Motion planning, coordination and control for robotic sys-
tems still remain an active research topic in many respects.
Research within the robotics community has attributed vari-
ous formulations and methodologies on the motion planning
problem, often specialized based on the control objectives
and the characteristics of the problems at hand. These
methodologies range from Lyapunov-based control methods,
to sampling-based planning, to combinatorial planning, see
for instance [1]–[3] and the references therein. Furthermore,
applications involving multi-robot systems have attracted the
interest of the control systems community as well. Emphasis
has been given in consensus (also called synchronization,
rendezvous or agreement), ﬂocking and formation control
problems for multiple agents, see [4] for a very recent survey.
Plausibly, collision avoidance with respect to (w.r.t.) static
(stationary) or dynamic (moving) obstacles/agents is a re-
quirement of highest priority in motion planning and coordi-
nation problems. One of the most popular ways to formulate
and tackle such problems is based on Lyapunov-like scalar
functions, see for instance the Avoidance Functions in [5]
and the Artiﬁcial Potential Fields (APF) in [6]. A very recent
survey on addressing multi-agent problems with potential
functions’ methods is given in [7]. Scalar functions offer the
merit of using Lyapunov-based control design and analysis,
which not only yield solutions in closed-form, but also offer
certain guarantees regarding speciﬁed objectives [8].
A drawback of potential functions’ methods is the possible
appearance of local minima away from the goal point, i.e. of
The author is with the Coordinated Science Laboratory, College of
Engineering, University of Illinois at Urbana-Champaign, Urbana, IL, USA
dpanagou@illinois.edu
points in the state space other than the desired equilibrium
at which the gradient vector vanishes. This in principle may
result in system trajectories that get stuck away from the
goal. Certain forms of potential functions may overcome this
limitation; namely, navigation functions [9] and harmonic
functions [10]. The caveat in the former case is that the
Morse property (which guarantees the non-existence of local
minima) is rendered after a tuning parameter exceeds a
lower bound, which is not a priori known. In the latter
case, harmonic functions may be constructed with either
discrete or continuous approaches. The computational cost of
discrete methods is quite demanding though, yet continuous
approaches which employ the analogies of Laplace equation
with ﬂuid mechanics may yield closed-form solutions for
certain dynamic environments [11]. A recent overview on
harmonic potential methods can be found in [12]. Stream
functions [13] combine the local-minima-free property of
harmonic functions along with hydrodynamic concepts to
yield streamlines that are smoother and possibly preferable
for second order systems. The method of vortex ﬁelds [14]
is also relevant to the context, since it uses the anti-gradient
of a scalar function to deﬁne ﬂows around obstacles.
Attempting now to keep a unifying viewpoint regarding
on the use of scalar functions in motion planning and
coordination problems, one may argue that a common ground
is the resulting gradient vector ﬁeld which, either directly
or indirectly, is employed in the control synthesis. More
speciﬁcally, a single (or multiple) scalar function is deﬁned to
encode the environment (e.g. physical obstacles, neighboring
agents etc), yielding a gradient vector ﬁeld which can be used
as feedback motion plan. In this sense, it may be plausible
as well to pursue to directly deﬁne vector ﬁelds encoding
the desired objectives, such as obstacle or collision avoid-
ance. Yet, to the best of our knowledge, there is not much
work addressing such problems with vector ﬁeld approaches,
compared to the extent to which scalar functions have been
used. A notable exception is the recent work by Lindemann
and LaValle [15], in which simple smooth vector ﬁelds are
locally constructed in given convex cell decompositions of
polygonal environments, so that their integral curves are by
construction collision-free and, in a sequential composition
spirit, convergent to a goal point. The method presumes
the existence of a high-level discrete motion plan which
determines the successive order of the cells from an initial
to a ﬁnal conﬁguration. Recent work employing vector ﬁelds
for vehicles’ navigation is presented also in [16], which is
based on the virtual force ﬁeld method [17], and in [18].
This paper is in part motivated by [15] and presents a novel
method on the motion planning and collision avoidance in
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 2513
environments with static and/or dynamic obstacles, yielding
feedback motion plans for kinematic nonholonomic agents.
The method employs a family of two-dimensional analytic
vector ﬁelds, which have high-order singular points. It is
shown that, except for a known value of a parameter , the
vector ﬁeld has a unique singular point onR
2
, and moreover
that the pattern of the integral curves is suitable for steering
a unicycle to a goal conﬁguration. Moreover, for the value
of the parameter  which results in a continuum of singular
points, the vector ﬁeld can be used to deﬁne tangential ﬂows
around circular obstacles. Consequently, one may deﬁne
almost global feedback motion plans (i.e. convergent to the
goal conﬁguration except for a set of initial conditions of
Lebesgue measure zero and collision-free by construction)
by blending attractive and repulsive vector ﬁelds. This in
turn results in simple feedback control laws which force the
system to ﬂow along the vector ﬁeld. The integral curves in
the vicinity of the (unavoidable) undesired singularities are
similar to those of saddle points, i.e., of unstable equilibria.
We furthermore illustrate how the analytic construction of
a feedback motion plan and the control design for a single
agent can be extended to the collision avoidance and dis-
tributed control for multiple nonholonomic agents.
The proposed method does not require to deﬁne Lyapunov-
like or potential functions encoding the collision avoidance
objective and does not suffer from the appearance of sinks
(stable nodes) away from goal point. Compared to potential
functions that are by construction free of local minima, the
approach presented here does not require any parameter
tuning to render the desired (almost global) convergence
properties; the values of the parameter  involved in the
deﬁnition of the vector ﬁeld are known a priori. Compared to
methods that rely on vector ﬁelds, such as [15], the proposed
method does not require any cell decomposition of the free
space or the existence of a high-level discrete motion plan,
and as thus, it is free of any computational complexity issues.
Furthermore, it addresses the motion planning and collision
avoidance for multiple agents in dynamic environments, and
is scalable as the number of agents increases. Note also that
the construction presented here is not the same with the one
used in earlier work of the author’s [19], while it extends the
method originally presented in [20] to obstacle environments.
The paper is organized as follows: Section II characterizes
the singular points of our vector ﬁelds w.r.t. the parameter
, while Section III presents the construction of the almost
global feedback motion plans and the underlying control
design. Section IV includes simulations for the static (sin-
gle agent among obstacles) and the dynamic case (colli-
sion avoidance in multi-robot system). Our conclusions and
thoughts on future work are summarized in Section V.
II. ROBOT NAVIGATION VIA VECTOR FIELDS
Consider the motion of a robot with unicycle kinematics
in an environmentW withN static obstacles. The equations
of motion read:
_ q =

cos sin 0

T
u+

0 0 1

T
!; (1)
whereq =

x y 

T
is the conﬁguration vector compris-
ing the position r =

x y

T
and the orientation  of the
robot w.r.t. a global cartesian coordinate frameG, u is the
linear velocity and! is the angular velocity of the robot w.r.t.
the body-ﬁxed frameB. The robot is modeled as a circular
disk of radius, and each obstacleO
i
is modeled as a disk of
radius 
oi
centered at r
oi
=

x
oi
y
oi

T
, i2f1;:::;Ng.
We are interested in constructing a feedback motion plan
for steering the robot from (almost) any initial collision-free
conﬁgurationq
0
to a ﬁnal conﬁgurationq
f
.
A. A family of vector ﬁelds for robot navigation
In earlier work of ours’ [20] we introduced the class of
vector ﬁelds F :R
2
!R
2
given by:
F(r) =(p
T
r)r p(r
T
r); (2)
where 2 R is a parameter to be speciﬁed later on, r =

x y

T
the position vector w.r.t. the global frameG and
p =

p
x
p
y

T
, p6= 0. The analytical form of the vector
ﬁeld components F
x
, F
y
is:
F
x
= ( 1)p
x
x
2
+p
y
xy p
x
y
2
; (3a)
F
y
= ( 1)p
y
y
2
+p
x
xy p
y
x
2
: (3b)
Theorem 1: The originr =0 is the unique singular point
of the vector ﬁeld F given by (2) if and only if 6= 1.
Proof: It is straightforward to verify that r = 0 is a
singular point ofF. Let us write the vector ﬁeld components
(3) of F in matrix form as:

F
x
F
y

=

( 1)x
2
 y
2
xy
xy ( 1)y
2
 x
2

| {z }
A(;r)

p
x
p
y

: (4)
One has thatdet(A(;r)) = ( 1)(x
2
+y
2
)
2
, i.e.A(;r)
is nonsingular away from the originx =y = 0 if and only if
6= 1. Then, for6= 1 andr6=0, one has thatF =0 if and
only ifp =0. Sincep6=0 by deﬁnition, we conclude that
the vector ﬁeldF given by (2) is nonsingular everywhere but
the originr =0, as long as 6= 1.
The Jacobian matrix of F is singular at r = 0, which
implies thatr =0 is a high-order (nonlinear) singularity.
B. Attractive vector ﬁelds
In order to visualize the behavior of the integral curves of
F around the singular pointr =0, we ﬁrst consider the case
for = 2. Let us take the vectorp =

1 0

T
and write the
vector ﬁeld components as:
F
x
=x
2
 y
2
; (5a)
F
y
= 2xy: (5b)
Following [21], the critical point r = 0 of (5) is a dipole.
Dipoles fall into the class of critical points with only elliptic
sectors in their neighborhoods; this implies that all integral
curves begin at, and end at, the critical point. Furthermore,
one may verify out of the phase portrait of the vector ﬁeld
(2) that the integral curves are symmetric w.r.t. the axis of
2514
-1.0 -0.5 0.0 0.5 1.0
-1.0
-0.5
0.0
0.5
1.0
(a)  = 2, px = 1, py = 1.
-1.0 -0.5 0.0 0.5 1.0
-1.0
-0.5
0.0
0.5
1.0
(b)  = 1, px = 1, py = 0.
Fig. 1. The vector ﬁeld F for  = 2 and  = 1.
the vectorp2R
2
, see in Fig. 1(a) the integral curves of (2)
for  = 2,p =

1 1

T
. The proofs are available in [22].
In that sense, any of the integral curves ofF offers a path
tor =0, while the vectorp dictates the orientation of the
integral curves w.r.t. the global frameG. Thus, constructing
a feedback motion plan for steering the unicycle to the origin
has been based on the following simple idea: PickF out of
(2) with = 2 andp =

p
x
p
y

T
such that the orientation
of the vectorp is zero:'
p
, atan2(p
y
;p
x
) = 0. In this way,
the integral curves serve as a reference to steer the orientation
trajectories (t) to zero.
In the sequel, we call the class of vector ﬁelds (2) for
 = 2 as attractive vector ﬁelds (or ﬂows) to a conﬁguration
q2R
2
S.
C. Repulsive vector ﬁelds
Let us now investigate the case  = 1, i.e. the case when
the vector ﬁeld (2) has multiple singular points. The vector
ﬁeld components read:
F
x
=p
y
xy p
x
y
2
; (6a)
F
y
=p
x
xy p
y
x
2
: (6b)
To visualize the behavior of the integral curves, let us take
p =

1 0

T
to get the vector ﬁeld depicted in Fig. 1(b).
One has out of (6) that F vanishes on the setV =fr2
R
2
jy = 0;x2Rg. The equation of the integral curves can
be computed for y6= 0 (i.e. away from the singularity set)
as:
dx
dy
=
y
2
 xy
=
y
 x
)x
2
+y
2
=c
2
for somec2R, which
implies that the integral curves are circular arcs centered
at the origin r = 0. The phase portrait of F furthermore
indicates that the integral curves are symmetric w.r.t. the
axis y = 0, i.e., w.r.t. the singularity setV, and also that
the singularity set is dictated by the orientation '
p
= 0 of
the vectorp. The proofs on the symmetric properties of the
vector ﬁelds are available online in [22].
What is of main interest in this case is that the signum ofx
dictates whether the integral curves escape the singularity set
V (see the half-plane x > 0) or converge to the singularity
setV (see the half-plane x < 0). We say that the singular
point r = 0 of the vector ﬁeld (6) is of center type; this
means that no integral curve reaches the singular point.
1
1
This is slightly inconsistent with standard notation, since the critical
point r =0 is not isolated.
One may also note that the departing behavior of the
integral curves away from the singularity setV resembles
the pattern of a ﬂuid ﬂow around a cylinder. This actually
motivates us to employ (6) in order to deﬁne tangential vector
ﬁelds locally around circular obstacles.
In the sequel we call the class of vector ﬁelds (2) for = 1
as repulsive vector ﬁelds (or ﬂows) around a pointr2R
2
.
III. ALMOST GLOBAL FEEDBACK MOTION PLANS
Given the class of attractive and repulsive vector ﬁelds,
the idea on deﬁning an almost global feedback motion plan
F
?
on the collision-free spaceF is now simple: we pursue to
combine an attractive-to-the-goal vector ﬁeldF
g
with (local)
repulsive vector ﬁelds F
oi
around each obstacleO
i
, so that
the integral curves of F
?
: 1) converge to the goal q
g
, and
2) point into the interior of F on the boundaries of the
obstaclesO
i
. The vector ﬁeld F
?
can then serve as a safe
feedback motion plan inW. Blending the vector ﬁelds F
g
,
F
oi
should be done in a careful way, so that F
?
does not
have any undesired singularities onF.
Remark 1: In the sequel, when we refer to F
g
, F
oi
we
assume the corresponding normalized unit vector ﬁelds, i.e.,
the vector ﬁelds
Fg
kFgk
,
Foi
kFoik
, withkk denoting the standard
Euclidean norm.
We assume without loss of generality that the goal con-
ﬁguration is the origin, q
g
= 0. The attractive-to-the-goal
vector ﬁeld F
g
may then be taken out of (2) for  = 2,
p
g
=

1 0

T
, so that '
p
= 0, yielding the vector ﬁeld (5).
Let us now deﬁne a repulsive vector ﬁeldF
oi
in a region
Z
i
around an obstacleO
i
. The regionZ
i
is deﬁned as a
circular disk centered atr
oi
with radius
Zi
=
oi
+
"
+,
where 
"
 0; this parameter is the minimum distance that
the robot will keep w.r.t. the boundary of the obstacleO
i
,
see Fig. 2. A repulsive vector ﬁeld w.r.t. the point r
oi
can
then be deﬁned out of (6) for  = 1 as:
F
oxi
=p
yi
(x x
oi
)(y y
oi
) p
xi
(y y
oi
)
2
; (7a)
F
oyi
=p
xi
(x x
oi
)(y y
oi
) p
yi
(x x
oi
)
2
; (7b)
wherep
xi
, cos
i
,p
yi
, sin
i
,
i
, atan2( y
oi
; x
oi
)+
. Note that the vector p
i
is picked to lie on the line
connecting the center (x
oi
;y
oi
) of the obstacle with the goal
point (0;0). By doing so, we impose the set of singular
points of (7) to lie on this line. Furthermore, the integral
curves of (7) depart from the singularity set in the region
A
i
=fr2R
2
jp
T
i
(r r
oi
) 0g (see also the red vectors
around the setV
i
in Fig. 2), and converge to the singularity
set in the regionB
i
=fr 2 R
2
jp
T
i
(r r
oi
) < 0g (the
corresponding vectors have not been drawn in Fig. 2).
The pattern of the (departing) integral curves in the neigh-
borhood of the singularity setV
i
in regionA
i
is desirable,
since it renders safe, tangential reference paths around the
obstacle O
i
. However, the pattern of the integral curves
around the singularity set in regionB
i
is undesirable, since it
may trap the system trajectoriesr(t) away from the origin.
This limitation is overcome by deﬁning a vector ﬁeld (2) for
 = 0 andp
i
as before, in regionB
i
; the resulting integral
2515
o i
?
i
p
?
i
O
?
?
g
x
B
i
A
i
? = 1
? = 0
?
i
? = 2
V
i
g
y
Fig. 2. Deﬁning a repulsive vector ﬁeldF
oi
around the obstacleO
i
. Take
the vector ﬁeld (2) with = 1 in regionA
i
and with = 0 in regionB
i
.
curves for  = 0 are co-linear with, while pointing to the
opposite direction w.r.t.p
i
, see Fig. 2.
In summary, the vector ﬁeldF
oi
around an obstacleO
i
is
picked out of the family of vector ﬁelds (2) as:
F
oi
=

F


=1
(r
i
); for p
T
i
(r
i
) 0;
F


=0
(r
i
); for p
T
i
(r
i
)< 0;
(8)
wherep
i
=

cos
i
sin
i

T
,
i
, atan2( y
oi
; x
oi
)+,
r
i
,r r
oi
. Note that the transition of the integral curves
between regionsA
i
,B
i
is smooth, since the vectors at the
pointsp
T
i
(r r
oi
) = 0 coincide.
The effect of the repulsive vector ﬁeld F
oi
(8) should be
restricted into the regionZ
i
, while away fromZ
i
the effect
of the attractive vector ﬁeldF
g
should drive the robot to the
goal. To encode this requirement, we ﬁrst deﬁne the obstacle
function 
i
() :R
2
!R as:

i
=
2
oi
 (x x
oi
)
2
 (y y
oi
)
2
; (9)
which is positive in the interior of the obstacleO
i
, zero on
the boundary of the obstacle, and negative everywhere else.
The value of the constraint function
i
on the boundary ofZ
i
is:
iZ
= 2
oi
(+
"
) (+
"
)
2
. Thus, one equivalently
has:Z
i
=fr2R
2
j
iZ

i
(r) 0g.
Consequently, the repulsive vector ﬁeld F
oi
should be
deﬁned for 
i
(r) 
iZ
, while the effect of the attractive
vector ﬁeld F
g
should be restricted in the region exterior
toZ
i
, i.e. for 
i
(r) < 
iZ
. To encode this, we deﬁne the
smooth bump function 
i
() :R
2
! [0;1] as:

i
=
8
<
:
1; for 
i
(r)
iF
;
a
i
3
+b
i
2
+c
i
+d; for 
iF
<
i
(r)<
iZ
;
0; for 
iZ

i
(r);
(10)
where
iZ
is the value of the constraint (9) on the boundary
ofZ
i
,
iF
is the value of the constraint (9) at some distance

Fi
> 
Zi
, and the coefﬁcients a, b, c and d have been
computed as: a =
2
(
iZ
 
iF
)
3
, b =  
3(
iZ
+
iF
)
(
iZ
 
iF
)
3
, c =
6
iZ

iF
(
iZ
 
iF
)
3
,d =

2
iZ
(
iZ
 3
iF
)
(
iZ
 
iF
)
3
, so that (10) is aC
2
function.
Having this at hand, and inspired by [15], one may now
deﬁne the vector ﬁeld:
F =
i
F
g
+(1 
i
)F
oi
; (11)
which is: (i) attractive to the goal q
g
sufﬁciently away
from O
i
via the effect of F
g
(i.e. for 
i
 
Fi
, where
one has 
i
= 1), and (ii) repulsive w.r.t. the obstacle
O
i
in the region Z
i
via the effect of F
oi
(i.e. for

Zi
 
i
, where one has 
i
= 0). To check whether
singularities occur in the region where 
Zi
< 
i
< 
Fi
,
let us consider the blending of F
g
with F
oi
in the
exterior of the regionB
i
. The norm of F reads:kFk =
s

2
i
kFgk
2
+(1 1)
2
kFoik
2
+2i(1 i)[Fx Fy]

Foxi
Foyi

. Given
that we consider the normalized unit vector ﬁelds this further
reads: kFk =
p
 2
i
(1 
i
)+1+2
i
(1 
i
)cos,
where the angle between the vectorsF
g
,F
oi
at some point
(x;y). After some more algebra, we have that the normkFk
vanishes at the pointsr2R
2
where
i
is the solution of the
quadratic equation: 2(cos 1)
2
i
 2(cos 1)
i
 1 = 0;
yet, this equation does not have any real solutions. The
same procedure can be done for the blending of F
g
, F
oi
in the exterior of the regionA
i
, with the caveat that here
the vector ﬁeld F
oi
has by construction a singularity set.
Then, away from the singularities of F
oi
one eventually
gets the same result as above, while for the points where
F
oi
=0 one eventually has:kFk = 
i
6= 0. Consequently,
the blending of F
g
, F
oi
does not result in any singularities
in the blending region 
Zi
<
i
<
Fi
.
It is now easy to extend the proposed vector ﬁeld design
in the case ofN static obstacles and deﬁne an almost global
feedback motion plan inF as:
F
?
=
N
Y
i=1

i
F
g
+
N
X
i=1
(1 
i
)F
oi
; (12)
whereF
g
is the attractive vector ﬁeld (5),F
oi
is the repulsive
vector ﬁeld (8) around an obstacleO
i
, i2f1;:::;Ng, and

i
is the bump function (10) deﬁned in terms of the obstacle
function
i
(9). The ﬁrst term in (12) cancels the effect of the
attractive vector ﬁeldF
g
everywhere that at least one of the
bump functions 
i
= 0, i.e. in the corresponding regionZ
i
around the obstacleO
i
, while at the same time the second
term shapes the corresponding vector ﬁeld F
oi
inZ
i
. In
other words, the attractive vector ﬁeldF
g
is activated through
(12) only when 
i
< 
Zi
8i2f1;:::;Ng, i.e. outside the
regionsZ
i
.
For F
?
being an everywhere collision-free feedback mo-
tion plan, the clearance among obstacles should be sufﬁ-
ciently large so that the repulsive ﬂows do not overlap. This
means that the distance d
ij
= kr
oi
 r
oj
k among every
pair of obstacles O
i
, O
j
should be at least 
Zi
+ 
Zj
,
2516
or equivalently, that the minimum distance between the
boundaries of two obstacles should be at least 2( +
"
).
Note that this clearance is not conservative or restrictive in
practice, since the parameter 
"
can be chosen arbitrarily
close to zero, or even equal to zero, assuming that the robot
is allowed to touch the obstacle. In this case the minimum
clearance is equal to 2, i.e., to the diameter of the robot.
The sets of singular pointsV
i
,i2f1;:::;Ng are located
in the regionsA
i
around the obstaclesO
i
, as shown in Fig.
2. Take the singular point inV
i
which lies on the boundary
ofZ
i
, and let us consider the pattern of the integral curves
around this point. The integral curves aroundV
i
are departing
the set, except for one integral curve that may converge to
V
i
; it is easy to see that this may happen in the case when the
goal orientation 
g
is co-linear with the line the singularity
setV
i
lies on. This in turn happens only if the obstacle is
positioned such that the direction of the vectorp
i
coincides
with the direction of the vector p
g
. In this case, the set of
initial conditions that converge to the singularity sets of F
?
is of Lebesgue measure zero. In any other case, then: 1) if

"
6= 0, then the singular points are conﬁned in the region
Z
i
on a line segment of length 
"
, and correspond to the
initial conditions from which solutions are not deﬁned, 2) if

"
= 0, then the (unique) singular point lies on the boundary
ofZ
i
and is reached by no integral curve.
With this at hand, the control design for the unicycle (1)
is now straightforward. We use the control law:
u =k
u
tanh(x
2
+y
2
); (13a)
! = k
!
( ')+ _ '; (13b)
where ', arctan(F
?
y
;F
?
x
) is the orientation of the vector
ﬁeld F
?
at a point (x;y), and k
!
; k
u
> 0, so that the
orientation  of the unicycle is globally exponentially stable
to the orientation'. Then, the vehicle ﬂows along the integral
curves of F
?
, until converging to the goal pointq
g
=0.
IV. SIMULATION RESULTS
The efﬁcacy of the proposed motion planning and control
design in environments with static obstacles, as well as for
the collision avoidance in multi-agent systems, is demon-
strated via simulation results.
The vector ﬁeld F
?
in an environment populated with
N = 10 static obstacles is depicted in Fig. 3 with the goal
point being the origin, q
g
= 0. The resulting path under
the control law (13), with the control gains picked equal
to k
u
= 0:1, k
!
= 1, is depicted in red color. Note that
the pattern of the integral curves of F
oi
in the regionsA
i
around obstacles forces the robot to approach close to the
obstacles and then perform a sharp maneuver in order to
follow the tangential direction and avoid collision. Although
this in practice is plausible for unicycle-type vehicles (e.g.
differentially driven mobile robots), it might not be desir-
able for input-constrained vehicles, such as car-like vehicles
and aircrafts. Thus, our current work focuses in encoding
curvature constraints via the family of vector ﬁelds (2).
Following the same spirit the proposed control design (13)
can be employed for avoiding collisions in the multi-agent
?0.6 ?0.5 ?0.4 ?0.3 ?0.2 ?0.1 0
?0.4
?0.2
0
0.2
1
2
3
4
5 6
7
8 9
10
Fig. 3. Collision-free motion of a unicycle in a obstacle environment.
case as well. Let us consider the case ofN circular agentsi
that have to move to goal conﬁgurationsq
gi
while avoiding
collisions among them. Clearly, each agent j6= i serves as
an obstacle to agent i. A vector ﬁeldF
?
i
can be constructed
for each agenti, where the repulsive termF
oj
around agent
j is replaced with a repelling node. This is to ensure that the
repelling vector ﬁeld always points into the interior of the
free spaceF
i
of each agent i.
In the scenario depicted in Fig. 4 four agents are moving
towards their goal destinations, while avoiding collisions.
Here we have assumed that there is bidirectional communi-
cation and information exchange among every pair of agents
(i;j), to argue that each agent i always knows the positions
of all other agents j6= i. Nevertheless, this assumption is
not restrictive regarding on the proposed control design, as
illustrated in [22]; the same vector ﬁeld construction and
control design can be used in the cases of limited sensing or
given communication topologies for each agent.
V. CONCLUSIONS
This paper presented a novel methodology for the path
and motion planning of nonholonomic (unicycle) systems in
environments with obstacles, with extensions to the collision
avoidance in multi-agent systems. The method is based on
a family of vector ﬁelds whose integral curves exhibit either
attractive or repulsive behavior, depending on the value
of a parameter . It was shown that attractive-to-the-goal
and repulsive-around-obstacles vector ﬁelds can be suitably
blended in order to yield almost global feedback motion
plans in environments with circular obstacles. The case of
collision avoidance in multi-agent scenarios can be treated
with the same logic as well. Thus, seeking for Lyapunov-like
functions encoding the avoidance objective is not required,
while no parameter tuning is needed in order to avoid
local minima (stable nodes). Current work focuses on the
deﬁnition of vector ﬁelds encoding input constraints, such
as curvature bounds, which may be more appropriate for
aircraft and car-like vehicles.
2517
?0.75 ?0.7 ?0.65 ?0.6 ?0.55 ?0.5 ?0.45 ?0.4 ?0.35 ?0.3 ?0.25
?0.15
?0.1
?0.05
0
0.05
0.1
0.15
0.2 1 2 3
4
1 2 3
4
1
2
3
4
1
2
3
4
1
2
3
4
1
2
3
4
1 2 3
4
1
2
3
4
1
2
3
4
1
2
3
4
1
2
3
4
?0.7 ?0.65 ?0.6 ?0.55 ?0.5 ?0.45 ?0.4 ?0.35 ?0.3
?0.15
?0.1
?0.05
0
0.05
0.1
0.15
0.2 1 2 3
4
1
2
3
4
1
2
3
4
1
2
3
4
1
2
3
4
1
2
3
4
1
2
3
4
1
2
3
4
1
2
3
4
1
2
3
4
1
2
3
4
?0.7 ?0.65 ?0.6 ?0.55 ?0.5 ?0.45 ?0.4 ?0.35 ?0.3
?0.15
?0.1
?0.05
0
0.05
0.1
0.15
0.2 1 2 3
4
1
2
3
4
1
2
3
4
1
2
3
4
1
2
3
4
1
2
3
4
1
2
3
4
1
2
3
4
1
2
3
4
1
2
3
4
1
2
3
4
?0.7 ?0.65 ?0.6 ?0.55 ?0.5 ?0.45 ?0.4 ?0.35 ?0.3
?0.15
?0.1
?0.05
0
0.05
0.1
0.15
0.2 1 2 3
4
1
2
3
4
1
2
3
4
1
2
3
4
1
2
3 4
1
2
3
4
1
2
3
4
1
2
3
4
1
2
3
4
1
2
3
4
1
2
3
4
?0.7 ?0.65 ?0.6 ?0.55 ?0.5 ?0.45 ?0.4 ?0.35 ?0.3
?0.15
?0.1
?0.05
0
0.05
0.1
0.15
0.2 1 2 3
4
1
2
3
4
1
2
3
4
1
2
3
4
1
2
3
4
1
2
3
4
1
2
3
4
1
2
3
4
1
2
3
4
1
2
3
4
1
2
3
4
?0.7 ?0.65 ?0.6 ?0.55 ?0.5 ?0.45 ?0.4 ?0.35 ?0.3
?0.15
?0.1
?0.05
0
0.05
0.1
0.15
0.2 1 2 3
4
1
2 3
4
1
2 3
4
1 2 3
4
1 2 3
4
1 2
3
4
1 2
3
4
1 2
3
4
1 2 3
4
1 2 3
4
1 2 3
4
1 2 3
4
1 2 3
4
1 2 3
4
1 2 3
4
1 2 3
4
1 2 3
4
1 2 3
4
Fig. 4. Collision-free motion of 4 nonholonomic agents under the proposed control strategy.
REFERENCES
[1] H. Choset, K. Lynch, S. Hutchinson, G. Kantor, W. Burgard,
L. Kavraki, and S. Thrun, Principles of Robot Motion. Theory,
Algorithms and Implementation. MIT Press, 2005.
[2] S. M. LaValle, Planning Algorithms. Cambridge University Press,
2006.
[3] L. E. Parker, “Path planning and motion coordination in multiple
mobile robot teams,” in Encyclopedia of Complexity and System
Science, R. A. Meyers, Ed. Springer, 2009.
[4] W. Ren and Y . Cao, “Overview of recent research in distributed
multi-agent coordination,” in Distributed Coordination of Multi-agent
Networks, ser. Communications and Control Engineering. Springer-
Verlag London Limited, 2011, ch. 2, pp. 23–41.
[5] G. Leitmann and J. Skowronski, “Avoidance control,” Journal of
Optimization Theory and Applications, vol. 23, pp. 581–591, Dec.
1977.
[6] O. Khatib, “Real-time obstacle avoidance for manipulators and mobile
robots,” The International Journal of Robotic Research, vol. 5, no. 1,
pp. 90–98, Spring, 1986.
[7] E. G. Hernandez-Martinez and E. Aranda-Bricaire, “Convergence and
collision avoidance in formation control: A survey of the artiﬁcial
potential functions approach,” in Multi-Agent Systems - Modeling,
Control, Programming, Simulations and Applications, ser. Robotics.
Multiagent Systems, F. Alkhateeb, E. A. Maghayreh, and I. A. Doush,
Eds. InTech, 2011, ch. 6, pp. 103–126.
[8] D. M. Stipanovi´ c, C. J. Tomlin, and G. Leitmann, “Monotone ap-
proximations of minimum and maximum functions and multi-objective
problems,” Applied Mathematics and Optimization, vol. 66, pp. 455–
473, 2012.
[9] E. Rimon and D. Koditschek, “Exact robot navigation using artiﬁcial
potential functions,” IEEE Transactions on Robotics and Automation,
vol. 8, no. 5, pp. 501–518, Oct. 1992.
[10] C. I. Connolly, J. B. Burns, and R. Weiss, “Path planning using
Laplace’s equation,” in Proc. of the 1990 IEEE International Con-
ference on Robotics and Automation, May 1990, pp. 2102–2106.
[11] H. J. S. Feder and J.-J. E. Slotine, “Real-time path planning using har-
monic potentials in dynamic environments,” in Proc. of the 1997 IEEE
International Conference on Robotics and Automation, Albuquerque,
New Mexico, Apr. 1997, pp. 874–881.
[12] P. Szulczy´ nski, D. Pazderski, and K. Koz?owski, “Real-time obstacle
avoidance using harmonic potential functions,” Journal of Automation,
Mobile Robotics and Intelligent Systems, vol. 5, no. 3, pp. 59–66, 2011.
[13] S. Waydo and R. M. Murray, “Vehicle motion planning using stream
functions,” in Proc. of the 2003 IEEE International Conference on
Robotics and Automation, Taipei, Taiwan, Sep. 2003, pp. 2484–2491.
[14] A. D. Luca and G. Oriolo, “Local incremental planning for non-
holonomic mobile robots,” in Proc. of the 1994 IEEE International
Conference on Robotics and Automation, May 1994, pp. 104–110.
[15] S. R. Lindemann and S. M. LaValle, “Simple and efﬁcient algorithms
for computing smooth, collision-free feedback laws over given cell
decompositions,” The International Journal of Robotics Research,
vol. 28, no. 5, pp. 600–621, 2009.
[16] T. Liddy, T.-F. Lu, P. Lozo, and D. Harvey, “Obstacle avoidance using
complex vector ﬁelds,” in Proc. of the 2008 Australasian Conference
on Robotics and Automation, Canberra, Australia, Dec. 2008.
[17] J. Borenstein and Y . Koren, “Real-time obstacle avoidance for fast
mobile robots,” IEEE Transactions on Systems, Man, and Cybernetics,
vol. 19, no. 5, pp. 1179–1187, Sep. 1989.
[18] E. G. Hern´ andez-Mart´ ınez and E. Aranda-Bricaire, “Multi-agent for-
mation control with collision avoidance based on discontinuous vector
ﬁelds,” in Proc. of the 35th Annual Conference of IEEE Industrial
Electronics, Nov. 2009, pp. 2283 –2288.
[19] D. Panagou and V . Kumar, “Maintaining visibility for leader-follower
formations in obstacle environments,” in Proc. of the 2012 IEEE Inter-
national Conference on Robotics and Automation, St. Paul, Minnesota,
USA, May 2012, pp. 1811–1816.
[20] D. Panagou, H. G. Tanner, and K. J. Kyriakopoulos, “Control of
nonholonomic systems using reference vector ﬁelds,” in Proc. of the
50th IEEE Conference on Decision and Control and European Control
Conference, Orlando, Florida, Dec. 2011, pp. 2831–2836.
[21] M. Henle, A Combinatorial Introduction to Topology. Dover Publi-
cations, 1994.
[22] D. Panagou, “Feedback motion planning and col-
lision avoidance using non-gradient navigation vec-
tor ﬁelds. Technical Report.” [Online]. Available:
https://uoﬁ.box.com/shared/static/o86ri581vjwl46dpos1g.pdf
2518
