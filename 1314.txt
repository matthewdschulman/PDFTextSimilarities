Towards Consistent Visual-Inertial Navigation
Guoquan Huang, Michael Kaess, and John J. Leonard
Abstract—Visual-inertial navigation systems (VINS) have
prevailed in various applications, in part because of the
complementary sensing capabilities and decreasing costs as
well as sizes. While many of the current VINS algorithms
undergo inconsistent estimation, in this paper we introduce
a new extended Kalman ﬁlter (EKF)-based approach towards
consistentestimates.Tothisend,weimposebothstate-transition
and obervability constraints in computing EKF Jacobians so
that the resulting linearized system can best approximate
the underlying nonlinear system. Speciﬁcally, we enforce the
propagation Jacobian to obey the semigroup property, thus
being an appropriate state-transition matrix. This is achieved
by parametrizing the orientation error state in the global,
instead of local, frame of reference, and then evaluating the
Jacobian at the propagated, instead of the updated, state
estimates. Moreover, the EKF linearized system ensures correct
observability by projecting the most-accurate measurement
Jacobian onto the observable subspace so that no spurious
information is gained. The proposed algorithm is validated by
bothMonte-Carlosimulationandreal-worldexperimentaltests.
I. INTRODUCTION
Over the past decades, inertial navigation systems
(INS) [1] have been extensively used for estimating the 6
degrees-of-freedom (d.o.f.) poses of sensing platforms (a.k.a.
robots) in GPS-denied environments, such as underwater,
indoor, in the urban canyon, and on other planets. Most INS
relyonaninertialmeasurementunit(IMU)thatmeasuresthe
3 d.o.f. rotational velocity and 3 d.o.f. linear acceleration
of the sensing platform on which it is rigidly attached.
Unfortunately, simple integration of IMU measurements that
are corrupted by noise and bias, often results in pose esti-
matesunreliableforlong-termnavigation.Ontheotherhand,
a camera is small, light-weight, inexpensive, and energy
efﬁcient while providing rich information. We hence aid an
INS with a monocular camera whose measurements are used
to provide motion information of the sensor pair, i.e., visual-
inertial navigation system (VINS). In this paper, we aim to
develop a consistent estimation algorithm for this problem.
Various algorithms are available for VINS problems in-
cluding visual-inertial simultaneous localization and map-
ping (SLAM) [2] and visual-inertial odometry (VIO) [3],
such as the extended Kalman ﬁlter (EKF) [2], [4], [5],
the unscented Kalman ﬁlter (UKF) [6], and the batch or
incremental smoothers [7], [8], among which the EKF-based
approach remains arguably the most popular because of
This work was partially supported by the ONR grants N00014-12-1-
0093, N00014-10-1-0936, N00014-11-1-0688 and N00014-13-1-0588, and
the NSF grant IIS-1318392, which we gratefully acknowledge.
G. Huang and J. Leonard are with the Computer Science and Artiﬁcial
Intelligence Laboratory, Massachusetts Institute of Technology, Cambridge,
MA 02139, USA. Email: fgqhuangjjleonardg@mit.edu
M. Kaess is with the Robotics Institute, Carnegie Mellon University,
Pittsburgh, PA 15213, USA. Email: kaess@cmu.edu
its efﬁciency. However, similar to 2D SLAM [9]–[11], the
standard EKF produces inconsistent estimates when applied
to VINS problems, primarily due to the mismatch of ob-
servability properties between the EKF linearized VINS and
the underlying nonlinear system [3], [12]–[16]. This signif-
icantly limits a long-term deployment of VINS in critical
scenarios. As deﬁned in [17], a state estimator is consistent
if the estimation errors are zero-mean, and the estimated
covariance is equal to the true covariance. Consistency is
one of the primary criteria for evaluating the performance
of any estimator; if an estimator is inconsistent, then the
accuracy of the computed state estimates is unknown, which
in turn makes the estimator unreliable. In this paper, we
also study the VINS problem within the EKF framework,
while focusing on improving the ﬁlter consistency from
the perspective of both state-transition and observability
properties of the EKF linearized system.
In particular, as shown in [3], [12]–[16], the standard
EKF-based VINS where the propagation and measurement
Jacobians are evaluated at the latest state estimates, has
differentobservabilitypropertiesfromtheunderlyingnonlin-
ear system (or the ideal linearized system where Jacobians
are computed using the true states). This was shown to be
one of main causes for the ﬁlter inconsistency. Furthermore,
we analytically show for the ﬁrst time that the propaga-
tion Jacobian in the standard EKF-based VINS violates
the semigroup property of a state-transition matrix [18]. If
such a Jacobian is used as the “state-transition” matrix to
represent the underlying dynamical system, the produced
stateestimatesconceivablymaydriftawayfromthesolutions
of the system, and thus become inconsistent or even diverge.
To address the aforementioned two (observability and state-
transition) issues, in the proposed algorithm, termed state-
transition and observability constrained (STOC)-VINS, we
ﬁrst impose correct observability constraints as in [12]–
[15]; and moreover, we explicitly enforce the propagation
Jacobian to obey the semigroup property. This is achieved by
parametrizingtheorientationerrorstateinthe global,instead
of local, frame of reference, and then directly evaluating
the propagation Jacobian at the propagated, instead of the
updated, state estimates. In addition, since in many practical
cases the camera-IMU extrinsic calibration is not known
perfectly, we include this 6 d.o.f. relative transformation as a
part of the state vector and perform online calibration, which
in effect contributes to improving consistency [16].
The remainder of the paper is organized as follows: After
an overview of related work in the next section, the EKF-
based VINS and its observability properties are described in
Section III. In Section IV, we present the proposed STOC-
VINS to improve ﬁlter consistency by enforcing appropriate
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 4926
state-transition and observability constraints. In Sections V
and VI, the proposed approach is validated on both Monte-
Carlo simulations and real-world experiments. Finally, Sec-
tion VII outlines the main conclusions of this work, as well
as possible future research directions.
II. RELATED WORK
Visual-inertial navigation has recently prevailed in robot
localization in 3D (e.g., [2]–[8], [12]–[16], [19]–[26]), which
can be broadly categorized into loosely-coupled and tightly-
coupled approaches. The former processes the IMU mea-
surements and/or images separately in a front end, and
subsequently fuses them in a back end (e.g., [8], [23]).
However, although this type of methods have advantage
of computational efﬁciency, the decoupling results in in-
formation loss [16]. The latter seamlessly fuses the visual
and inertial measurements by processing them in a single
estimation thread (e.g., [3], [5], [12]–[16], [25], [26]). The
approach proposed in this paper falls into the latter category,
aiming at consistent VINS.
As system observability plays an important role in the
proposed approach, we note that some work has recently
studied the VINS observability properties under different
scenarios. In particular, in [26], [27], nonlinear observability
of IMU-camera extrinsic calibration was analyzed based
on Lie derivatives and the conditions under which the
IMU-camera transformation is observable were determined.
In[25],theVINSobservabilitywasstudiedbyexaminingthe
system’s indistinguishable trajectories [28] under different
sensor conﬁgurations. Similarly, Martinelli [21] employed
the concept of continuous symmetries [28] to show that in
VINS, the IMU biases, 3D velocity, and absolute roll and
pitch angles are observable.
Recently, similar to robot localization in 2D [9]–[11],
consistencyofEKF-basedVINShasbeeninvestigatedin[3],
[12]–[16] from the perspective of observability. Speciﬁcally,
Li and Mourikis [3], [16] studied the impact of ﬁlter incon-
sistency due to the VINS observability properties, and lever-
agedtheﬁrst-estimates-Jacobianmethodology[9]tomitigate
the inconsistency. In [12]–[15], following the observability-
based methodology proposed in [11], [29], the observability-
constrained (OC)-VINS was introduced, which can employ
any linearization method to ensure correct observability
of the linearized system. While the same observability-
based idea is used in the proposed STOC-VINS, we further
explicitly enforce the propagation Jacobian to satisfy the
semigroup property and thus to be a valid state transition
matrix, which results in an alternative way of computing
propagation Jacobians to that of the OC-VINS.
III. VISUAL-INERTIAL NAVIGATION
In this section, we ﬁrst describe the IMU propagation
andcamerameasurementmodelswithintheEKFframework,
which govern the VINS. In the sequel, we brieﬂy overview
the observability properties of the linearized VINS, which
will be useful for the design of our approach. For concise
presentation of the analysis, we hereafter consider the case
where only a single feature is included in the state vector,
while the results can be easily generalized to the case of
multiple features.
A. IMU propagation model
The EKF uses the IMU (gyroscope and accelerometer)
measurements for state propagation, and the state vector
consists of the IMU statesx
I
and the feature position
G
p
f
:
1
x =

x
T
I
G
p
T
f

T
=

I
G
 q
T
b
T
g
G
v
T
b
T
a
G
p
T G
p
T
f

T
(1)
where
I
G
 q is the unit quaternion that represents the rotation
from the global frame of reference fGg to the IMU frame
fIg (i.e., different parametrization of the rotation matrix
C(
I
G
 q) =:
I
G
C);
G
p and
G
v are the IMU position and
velocity in the global frame; and b
g
and b
a
denote the
gyroscope and accelerometer biases, respectively.
By noting that the feature is static (with trivial dynam-
ics), as well as using the IMU motion dynamics [30], the
continuous-time dynamics of the state (1) is given by:
I
G
_
 q(t) =
1
2


 
I
!(t)

I
G
 q(t);
G
_ p(t) =
G
v(t);
G
_ v(t) =
G
a(t)
_
b
g
(t) =n
wg
(t);
_
b
a
(t) =n
wa
(t);
G
_ p
f
(t) =0
31
(2)
where
I
! =

!
1
!
2
!
3

T
is the rotational velocity of the
IMU, expressed in fIg,
G
a is the IMU acceleration in fGg,
n
wg
and n
wa
are the white Gaussian noise processes that
drive the IMU biases, and
(!) is deﬁned by:

(!) =

 b!c !
 !
T
0

; b!c =
2
4
0  !
3
!
2
!
3
0  !
1
 !
2
!
1
0
3
5
A typical IMU provides gyroscope and accelerometer
measurements, !
m
and a
m
, both of which are expressed
in the IMU local frame fIg and given by:
!
m
(t) =
I
!(t)+b
g
(t)+n
g
(t) (3)
a
m
(t) =C(
I
G
 q(t))
 
G
a(t) 
G
g

+b
a
(t)+n
a
(t) (4)
where
G
g is the gravitational acceleration expressed infGg,
andn
g
andn
a
are zero-mean, white Gaussian noise.
Linearization of (2) at the current state estimate yields the
continuous-time state-estimate propagation model [5]:
I
G
_
^
 q(t) =
1
2


 
I
^ !(t)

I
G
^
 q(t);
G
_
^ p(t) =
G
^ v(t);
G
_
^ v(t) =
G
^ a(t)
_
^
b
g
(t) =0
31
;
_
^
b
a
(t) =0
31
;
G
_
^ p
f
(t) =0
31
(5)
where ^ a =a
m
 
^
b
a
and ^ ! =!
m
 
^
b
g
. The error state of
dimension 181 is hence deﬁned as follows [see (1)]:
e x(t) =
h
Ie

T
(t)
e
b
T
g
(t)
G
e v
T
(t)
e
b
T
a
(t)
G
e p
T
(t)
G
e p
T
f
(t)
i
T
(6)
where we have employed the multiplicative error model for
a quaternion [30]. That is, the error between the quaternion
 q and its estimate
^
 q is the 3  1 angle-error vector,
Ie
,
1
Throughout this paper the subscript `jj refers to the estimate of a
quantity at time-step `, after all measurements up to time-step j have been
processed. ^ x is used to denote the estimate of a random variable x, while
~ x= x ^ x is the error in this estimate. I
n
and 0
n
are the nn identity and
zero matrices, respectively. Finally, the left superscript denotes the frame of
reference with respect to which the vector is expressed.
4927
implicitly deﬁned by the error quaternion:  q =  q

^
 q '

1
2
Ie

1

, where  q describes the small rotation that causes
the true and estimated attitude to coincide. The advantage of
this parametrization permits a minimal representation, 33
covariance matrix E
h
Ie

Ie

T
i
, for the attitude uncertainty.
It is important to note that the orientation error,
Ie
, satisﬁes
the following rotation-matrix relation [30]:
C(
I
G
 q)'

I
3
 b
I
e
c

C(
I
G
^
 q) (7)
Now the continuous-time error-state propagation is:
_
e x(t) =F
c
(t)e x(t)+G
c
(t)n(t) (8)
wheren =

n
T
g
n
T
wg
n
T
a
n
T
wa

T
isthesystem noise,F
c
is the continuous-time error-state transition matrix, and G
c
is the input noise matrix, which are given by (see [30]):
F
c
=
2
6
6
6
6
6
6
4
 b^ !c  I
3
0
3
0
3
0
3
0
3
0
3
0
3
0
3
0
3
0
3
0
3
 C
T
(
I
G
^
 q)b^ ac 0
3
0
3
 C
T
(
I
G
^
 q) 0
3
0
3
0
3
0
3
0
3
0
3
0
3
0
3
0
3
0
3
I
3
0
3
0
3
0
3
0
3
0
3
0
3
0
3
0
3
0
3
3
7
7
7
7
7
7
5
(9)
G
c
=
2
6
6
6
6
6
6
4
 I
3
0
3
0
3
0
3
 0
3
I
3
0
3
0
3
 I
3
0
3
 C
T
(
I
G
^
 q) 0
3
 I
3
0
3
0
3
I
3
 I
3
0
3
0
3
0
3
0
3
0
3
0
3
0
3
3
7
7
7
7
7
7
5
(10)
The system noise is modelled as zero-mean white Gaussian
process with autocorrelation E

n(t)n()
T

= Q
c
(t  ),
which depends on the IMU noise characteristics.
Wehavedescribed the continuous-time propagationmodel
using IMU measurements. However, in any practical EKF
implementation, the discrete-time state-transition matrix,
(t
k+1
;t
k
), is required in order to propagate the error
covariance from time t
k
to t
k+1
. Typically it is found by
solving the following matrix differential equation:
_
(t
k+1
;t
k
) =F
c
(t
k+1
)(t
k+1
;t
k
) (11)
with the initial condition (t
k
;t
k
) = I
18
. Its solution has
the following structure:

k
:=(t
k+1
;t
k
) =
2
6
6
6
6
6
6
4

k;11

k;12
0
3
0
3
0
3
0
3
0
3
I
3
0
3
0
3
0
3
0
3

k;31

k;32
I
3

k;34
0
3
0
3
0
3
0
3
0
3
I
3
0
3
0
3

k;51

k;52
t
k
I
3

k;54
I
3
0
3
0
3
0
3
0
3
0
3
0
3
I
3
3
7
7
7
7
7
7
5
(12)
where t
k
= t
k+1
 t
k
. This matrix (12) can be found either
numerically [5], [30] or analytically [3], [13], [14], [16].
Onceitiscomputed,theEKFpropagatestheerrorcovariance
in a standard way [31]:
P
k+1jk
=
k
P
kjk

T
k
+Q
d;k
(13)
where Q
d;k
is the discrete-time system noise covariance
matrix computed as follows:
Q
d;k
=
Z
t
k+1
t
k
(t
k+1
;)G
c
()Q
c
G
T
c
()
T
(t
k+1
;)d
B. Camera measurement model
The camera observes visual corner features, which are
used to concurrently estimate the ego-motion of the sensing
platform. Assuming a calibrated perspective camera, the
measurement of the feature at time-step k is the perspective
projection of the 3D point,
C
k
p
f
, expressed in the current
camera frame fC
k
g, onto the image plane, i.e.,
z
k
=
1
z
k

x
k
y
k

+v
k
(14)
2
4
x
k
y
k
z
k
3
5
=
Ck
p
f
=C(
C
I
 q)C(
I
G
 q
k
)
 
G
p
f
 
G
p
k

+
C
p
I
(15)
where v
k
is the zero-mean, white Gaussian measurement
noise with covarianceR
k
. In (15),f
C
I
 q;
C
p
I
g is the rotation
and translation between the camera and the IMU. This
transformation can be obtained, for example, by performing
camera-IMU extrinsic calibration ofﬂine [27]. However, in
practice when the perfect calibration is unavailable, it is
beneﬁcial to VINS consistency to include these calibration
parametersinthestatevectorandconcurrentlyestimatethem
along with the IMU/camera poses [16]. For this reason,
we perform online camera-IMU calibration in the proposed
STOC-VINS (see Section IV).
For the use of EKF, linearization of (14) yields the
following measurement residual [see (6)]:
e z
k
=H
k
e x
kjk 1
+v
k
=H
Ik
e x
I
kjk 1
+H
fk
G
e p
f
kjk 1
+v
k
(16)
where the measurement JacobianH
k
is computed as:
H
k
=

H
Ik
H
fk

(17)
=H
proj
C(
C
I
 q)

H
k
0
39
H
pk
C(
I
G
^
 q
k
)

H
proj
=
1
^ z
2
k

^ z
k
0  ^ x
k
0 ^ z
k
 ^ y
k

(18)
H
k
=bC(
I
G
^
 q
k
)
 
G
^ p
f
 
G
^ p
k

c ; H
pk
= C(
I
G
^
 q
k
) (19)
Once the measurement Jacobian and residual are computed,
we can apply the standard EKF update equations to update
the state estimates and error covariance [31].
C. Observability properties
Observability analysis has recently been performed for
both nonlinear and linearized VINS [3], [13]. In particular,
the observability matrix for the EKF linearized system over
the time interval [k
o
k] is deﬁned by [31]:
M =
2
6
6
6
4
H
ko
H
ko+1

ko
.
.
.
H
k

k 1

ko
3
7
7
7
5
(20)
It has been shown in [3], [13] that the nullspace of M
(i.e., unobservable subspace) for the VINS ideally spans the
following four directions:
MN =0 ) N =
2
6
6
6
6
6
6
4
0
3
C(
I
G
 q
k
)
G
g
0
3
0
3
0
3
 b
G
v
k
c
G
g
0
3
0
3
I
3
 b
G
p
k
c
G
g
I
3
 b
G
p
f
c
G
g
3
7
7
7
7
7
7
5
(21)
4928
Note that the ﬁrst block column ofN in (21) corresponds
to the global translation while the second block column
corresponds to the global rotation about the gravity vec-
tor
G
g. When designing a nonlinear estimator for VINS, we
would like the system model employed by the estimator to
have an unobservable subspace spanned by these directions.
However, this is not the case for the standard EKF as shown
in [3], [13]–[16]. In particular, the standard EKF linearized
system, which linearizes system and measurement functions
at the current state estimate, has an unobservable subspace
of three, instead of four, d.o.f. This implies that the ﬁlter
gains non-existent information from available measurements,
which may lead to ﬁlter inconsistency.
IV. STATE-TRANSITION-AND-OBSERVABILITY
CONSTRAINED (STOC)-VINS
As discussed in the preceding section, the standard EKF-
based VINS where the propagation and measurement Jaco-
bians are evaluated at the latest state estimates, has different
observability properties from the ideal linearized system
where the Jacobians are computed using the true states.
This was shown to be one of the main causes for ﬁlter
inconsistency [3], [12]–[16]. In this section, we revisit this
inconsistency problem and further ﬁnd that the propagation
Jacobian of the standard EKF-based VINS violates the
semigrouppropertyofastate-transitionmatrix[18].Ifsucha
Jacobianisusedasthestate-transitionmatrixtorepresentthe
underlying dynamical system, the produced state estimates
conceivably may deviate from the solutions of the dynam-
ical system, and thus become inconsistent or even diverge.
Therefore, when designing consistent VINS algorithms, be-
sidesimposingcorrectobservabilityconstraintsincomputing
Jacobians, we explicitly enforce the propagation Jacobian to
obey the semigroup property and thus to be a valid state-
transition matrix. The resulting method is thus termed as
state-transition and observability constrained (STOC)-VINS.
A. Computing propagation Jacobians
We know from control theory that a state-transition matrix
must have the following properties [18]:
_
(t
1
;t
0
) =F
c
(t
1
)(t
1
;t
0
) (22)
(t
0
;t
0
) =I
dim(x)
(23)
(t
1
;t
0
) =
 1
(t
0
;t
1
) (24)
(t
2
;t
0
) =(t
2
;t
1
)(t
1
;t
0
) (25)
which hold for any t
0
;t
1
and t
2
. Note that in VINS we have
derived the analytical state-transition matrix by solving the
matrixdifferentialequation(11)withtheself-mappinginitial
condition, which is identical to (22) and (23). Note also that
given (25) and (23), the identity of (24) immediately holds.
Therefore, we hereafter focus on examining (25) which is
theso-called semigroupproperty[18].However,weshowfor
the ﬁrst time that the propagation Jacobian of the standard
EKF-based VINS is not a valid state-transition matrix:
Lemma 4.1: The propagation Jacobian (12) of the stan-
dard EKF-based VINS, computed using the current state
estimates, violates the semigroup property (25) for being a
state-transition matrix, i.e., for some t
k 1
;t
k
, and t
k+1
,
(t
k+1
;t
k 1
)6=(t
k+1
;t
k
)(t
k
;t
k 1
) (26)
Proof: See Appendix I.
Asastate-transitionmatrixisusedtoconstructthegeneral
solution of the corresponding linear dynamical systems, an
invalid state-transition matrix can result in an erroneous
solution. Therefore, using the propagation Jacobian as the
incorrect “transition” matrix for the EKF linearized VINS
system conceivably may cause the ﬁlter producing inaccu-
rate, or even inconsistent, estimates. To address this issue,
we aim to construct the propagation Jacobian in such a
way that enforces this Jacobian to be a valid state-transition
matrix for the EKF linearized system, and in particular, to
possess the semigroup property (25). The key idea of our
approach is that we parametrize the IMU orientation error in
the global, instead of local (as commonly used in the regular
VINS formulation [5], [12], [13]), frame of reference; and
then analyticallycomputethepropagationJacobianusingthe
propagated, instead of updated, state estimates.
In particular, we ﬁrst notice that [in contrast to (7)]:
C
 
I
G
 q

'C
 
I
G
^
 q


I
3
 b
G
e
c

(27)
which results in the global orientation error state,
Ge
 =
C
T
 
I
G
^
 q

Ie
. With this parametrization, the error states ex-
cept the biases are all in the global frame, which will be
useful for our ensuing derivations [see (6)]:
e x
0
:=
2
6
6
6
6
6
6
4
Ge

e
b
g
G
e v
e
b
a
G
e p
G
e p
f
3
7
7
7
7
7
7
5
=Diag
 
C
T
(
I
G
^
 q);I
15

2
6
6
6
6
6
6
4
Ie

e
b
g
G
e v
e
b
a
G
e p
G
e p
f
3
7
7
7
7
7
7
5
=:
T
e x (28)
Now the new error-state propagation can be written as:
e x
0
k+1jk
=
T
k+1
e x
k+1jk
=
T
k+1

k

k
e x
0
kjk
=:
0
k
e x
0
kjk
(29)
wherewehaveusedthefactthat
 1
=
T
[see(28)].Note
that 
0
k
:=
T
k+1

k

k
is the propagation Jacobian for the
newparametrization,andcanbecomputedanalyticallybased
on the analytical expression of
k
(see (12) and [13]):

0
k
:=
0
(t
k+1
;t
k
) = (30)
2
6
6
6
6
6
6
4
C
T
(
I
G
^
 q
k+1
)
k;11
C(
I
G
^
 q
k
) C
T
(
I
G
^
 q
k+1
)
k;12
0
3
0
3
0
3
0
3
0
3
I
3
0
3
0
3
0
3
0
3

k;31
C(
I
G
^
 q
k
) 
k;32
I
3

k;34
0
3
0
3
0
3
0
3
0
3
I
3
0
3
0
3

k;51
C(
I
G
^
 q
k
) 
k;52
t
k
I
3

k;54
I
3
0
3
0
3
0
3
0
3
0
3
0
3
I
3
3
7
7
7
7
7
7
5
In particular, as compared to (t
k+1
;t
k
), the only blocks
changed are 
0
k;11
, 
0
k;12
, 
0
k;31
, and 
0
k;51
, which are
computed in closed form as follows (also see [3], [13]):

0
k;11
=C
T
(
I
G
^
 q
k+1
)C

I(k+1)
I(k)
^
 q

C(
I
G
^
 q
k
) =I
3
(31)

0
k;12
= 
Z
t
k+1
t
k
C
T
(
I
G
^
 q(t

))d (32)

0
k;31
= b
 
G
^ v
k+1
 
G
^ v
k
 
G
gt
k

c (33)

0
k;51
= 

G
^ p
k+1
 
G
^ p
k
 
G
^ v
k
t
k
 
1
2
G
gt
2
k



(34)
4929
We now show that the propagation Jacobian,
0
(t
k+1
;t
k
),
can be constructed analytically so as to satisfy the semigroup
property (25) for being a valid state-transition matrix.
Lemma 4.2: If the propagation Jacobian 
0
(t
`+1
;t
`
) is
evaluated at the propagated state estimates, ^ x
`+1j`
and
^ x
`j` 1
, then it satisﬁes the semigroup property (25), i.e.,

0
(t
k+1
;t
k 1
) =
0
(t
k+1
;t
k
)
0
(t
k
;t
k 1
) (35)
Proof: See Appendix II.
B. Computing measurement Jacobians
The measurement Jacobian with respect to the new error
state (28) is calculated as follows [see (14) and (17)-(19)]:
H
0
k
=

H
0
Ik
H
0
fk

(36)
=H
proj
C(
C
I
 q)

H
0
k
0
39
H
0
pk
C(
I
G
^
 q
k
)

H
0
k
=b
 
G
^ p
f
 
G
^ p
k

c ; H
0
pk
= I
3
(37)
Note that by performing observability analysis similar
to [13], the ideal linearized error-state system (i.e., Jaco-
bians are computed using the true states) with the global
orientation-errorparametrizationhasthefollowingunobserv-
able subspace of 4 d.o.f. [see (21)]:
N
0
=
2
6
6
6
6
6
6
4
0
3
G
g
0
3
0
3
0
3
 b
G
v
k
c
G
g
0
3
0
3
I
3
 b
G
p
k
c
G
g
I
3
 b
G
p
f
c
G
g
3
7
7
7
7
7
7
5
(38)
However, in analogy to the case of standard EKF-based
VINS (see Sectioin III-C), it is not difﬁcult to show that if
wecomputethemeasurementJacobianusingthecurrentbest
state estimates as for the standard EKF, while computing the
propagation Jacobian using the propagated state estimates as
devised in the previous section, the resulting linearized error-
state system has an unobservable subspace of only 3 (instead
of 4) d.o.f. This may result in inconsistent estimates.
To address this issue, we impose appropriate observabil-
ity constraints when computing measurement Jacobians, by
following our prior observability-constrained methodology
for designing consistent SLAM estimators [11], which was
alsoexploitedin[12]–[15].Speciﬁcally,whencomputingthe
measurementJacobian,weenforcethateachblockrowofthe
observability matrix (20) has the same nullspace, i.e.,
min
H
0
k
jjH
0
k
 H
k
jj
2
F
(39)
subject to H
0
k

0
k 1

0
ko
N
0
=0 (40)
where jj  jj
F
denotes the Frobenius norm. Ideally, H
k
in (39) is the measurement Jacobian computed using the true
states, which, however, is not realizable in practice. Hence,
we employ the latest, and thus the best, state estimates
to compute this Jacobian as for the standard EKF, i.e.,
H
k
= H
k
(^ x
kjk 1
). On the other hand, N
0
in (40) deﬁnes
the desired nullspace. Although we would like to have the
same one as in (38) computed using the true states (which
is not realizable in practice), we select the nullspace that has
the same structure as in (38) while computing it with the
ﬁrst available state estimates, i.e.,N
0
=N
0
(^ x
kojko
).
Once the choice of the nullspaceN
0
is made, we ﬁnd the
optimal solution to the above problem (39)-(40) in closed
form based on the following lemma:
Lemma 4.3: The optimal solution to the constrained min-
imization problem (39)-(40) is given by:
H
0
k
=H
k
 
I
dim(x)
 U(U
T
U)
 1
U
T

(41)
whereU =
0
k 1

0
ko
N
0
.
Proof: See [32].
It is interesting to note thatU in the above lemma is the
propagatedunobservablesubspace(nullspace)attime-stepk,
and
 
I
dim(x)
 U(U
T
U)
 1
U
T

is the subspace orthogonal
toU,i.e.,theobservablesubspace.Hence,asseenfrom(41),
the measurement Jacobian of the proposed STOC-VINS is
the projection of the most accurate measurement Jacobian
onto the observable subspace.
C. Application to MSCKF
The multi-state constraint Kalman ﬁlter (MSCKF) [5],
[33] is a well-known VINS algorithm that performs tightly-
coupled VIO over a sliding window of m poses, and has
complexity only linear in the number of observed features.
TheMSCKFutilizesallfeatureobservationsavailablewithin
the sliding window to impose probabilistic constraints be-
tween poses, without building a map. In what follows, we
apply the proposed STOC-VINS to the MSCKF framework
to address the VIO problem [16], while our methodology is
applicable to other VINS problems including SLAM.
The MSCKF state vector at time-step k augments the
current IMU state by the past m poses where the images
were taken (i.e., stochastic cloning [34]):
x
A
k
=

x
T
I
k
y
T
k 1
 y
T
k m

T
(42)
wherey
T
`
=

I
G
 q
T
`
G
p
T
`

is the IMU pose (quaternion and
position) where the image is recorded at time-step `. Since
thenullspace,N
0
,isrequiredforcomputingtheSTOC-VINS
measurement Jacobian [see (41)], we accordingly augment
the nullspace with the ones corresponding to the cloning
states as follows:
N
0
A
=
2
6
6
6
4
N
0
N
0
clone;1
.
.
.
N
0
clone;m
3
7
7
7
5
=
2
6
6
6
6
6
6
6
4
N
0
0
3
G
g
I
3
 b
G
^ p
k 1jk 2
c
G
g
.
.
.
0
3
G
g
I
3
 b
G
^ p
k mjk m 1
c
G
g
3
7
7
7
7
7
7
7
5
(43)
During the MSCKF propagation, the current state esti-
mates evolve forward in time by integrating (2), while the
cloning-state estimates remain static. On the other hand, the
augmented covariance is propagated as follows [see (13)]:
P
A
k+1jk
=Diag(
0
k
;I
6m
)P
A
kjk
Diag


0
k
T
;I
6m

+Diag(Q
d;k
;0
6m
) (44)
where the propagation Jacobian 
0
k
is computed using the
propagated state estimates as devised in Section IV-A.
During the MSCKF update, we stack together all the fea-
ture measurements within the sliding window, and linearize
4930
0 50 100 150 200 250 300
0
1
2
3
4
5
6
7
8
9
10
Orientation RMSE (deg)
Time (s)
 
 
Std?VINS
STOC?VINS
(a) Orientation RMSE
0 50 100 150 200 250 300
0
0.2
0.4
0.6
0.8
1
1.2
1.4
Position RMSE (m)
Time (s)
 
 
Std?VINS
STOC?VINS
(b) Position RMSE
0 50 100 150 200 250 300
0
2
4
6
8
10
12
14
16
18
20
Orientation NEES
Time (s)
 
 
Std?VINS
STOC?VINS
(c) Orientation NEES
0 50 100 150 200 250 300
0
10
20
30
40
50
60
Position NEES
Time (s)
 
 
Std?VINS
STOC?VINS
(d) Position NEES
Fig. 1. Monte-Carlo simulation results for a VIO scenario. In these plots, the dash-dotted lines correspond to the standard VINS, the solid lines to the
STOC-VINS. It is clear that the proposed STOC-VINS performs signiﬁcantly better than the standard VINS, in terms of both NEES and RMSE.
them with respected to the augmented IMU states as well as
the feature position [see (16)]:
2
6
4
e z
k
.
.
.
e z
k m
3
7
5 =
2
6
4
H
0
k
.
.
.
H
0
k m
3
7
5

e x
A
kjk 1
G
e p
f

+
2
6
4
v
k
.
.
.
v
k m
3
7
5
=:H
0
x
e x
A
kjk 1
+H
0
f
G
e p
f
+v (45)
where the measurement Jacobian H
0
k
is computed as (41).
Note that the feature position is not included in the MSCKF
state vector (42), while we want to utilize the information
contained in its measurements, we hence project (45) onto
the left nullspace ofH
0
f
(i.e.,W
T
H
0
f
=0) and have:
W
T
e z =W
T
H
0
x
e x
A
kjk 1
+W
T
v (46)
, e z
00
=H
00
x
e x
A
kjk 1
+v
00
(47)
The EKF uses the above residual equation to update the state
estimates and covariance [33].
As mentioned before, we include the camera-IMU extrin-
sic calibration parameters, f
C
I
 q;
C
p
I
g, in the state vector so
as to perform this calibration online. As shown in [16], it is
often unrealistic to assume the 6 d.o.f. camera-IMU transfor-
mation perfectly known, while using imperfect (known with
ﬁnite precision) calibration as if it underestimates the un-
certainty and thus harms the ﬁlter consistency. Interestingly,
the inclusion of the calibration parameters in the state vector
incurs minimal modiﬁcations to the MSCKF [16]. Since this
transformation is static, it is easy to propagate over time
(in a similar way as for the static feature). Linearization of
the stacked measurements renders new Jacobian terms with
respect to these parameters [see (45) and (36)], which can
be easily used in the standard EKF update equations.
V. SIMULATION RESULTS
We conducted a series of Monte-Carlo simulations under
realisticconditionstovalidatethetheproposedSTOC-VINS.
The metrics used to evaluate ﬁlter performance are: (i)
the root mean square error (RMSE), and (ii) the average
normalized(state)estimationerrorsquared(NEES)[17].The
RMSE provides us with a concise metric of the accuracy of
a given ﬁlter, while the NEES is a standard criterion for
evaluating the ﬁlter’s consistency. By studying both metrics
of the given ﬁlter, we obtain a comprehensive picture of the
ﬁlter’s performance.
In this simulation, we consider a VIO scenario [12], [16],
where a robot equipped with a camera-IMU pair moves on
Fig.2. Sampleimageswithtrackedfeatures(redcrosses)intheexperiment.
a circular trajectory with radius 5 m at an average speed
0:6 m/sec. The camera with 45 deg ﬁeld of view observes
point features randomly distributed inside a circumscribing
cylinder.Thestandarddeviationofimagenoisewassetto 1:5
pixels,whileIMUmeasurementsweremodelledwithMEMS
sensor quality. We performed 50 Monte-Carlo simulations
and compared our proposed STOC-VINS to the standard
MSCK-based VINS [33]. Both ﬁlters use a sliding window
with size of 10 camera poses, and during each run, process
the same data to ensure a fair comparison.
The comparative Monte-Carlo results are presented in
Fig. 1. As evident, the proposed STOC-VINS performs
substantially better than that of the standard VINS, in
terms of both RMSE (accuracy) and NEES (consistency).
This is attributed to the fact that the proposed ﬁlter (i)
by construction employs the linearized system models of
correct observability properties, and (ii) explicitly enforces
the semigroup property of the state transition matrix in the
direct analytical computation of the propagation Jacobian.
VI. EXPERIMENTAL RESULTS
We further tested the proposed STOC-VINS in a real-
world experiment, in which a hand-held camera/IMU plat-
form travelled over two ﬂoors in the Stata Center at MIT.
In this experiment, we were using a PointGrey Bumblebee2
stereo pair that records images of resolution 640480 pixels
at 30 Hz (only the right camera’s images were used), and a
MicroStrain IMU (3DM-GX3-25) which operates at 100 Hz.
We employed the Shi-Tomasi corner detector [35] to extract
point features from the ﬁrst available image and track them
over the subsequent images using the KLT tracking algo-
rithm [36] (e.g., see Fig. 2). On average, approximately 100
featuresweretrackedperimage,whileweinitializeanewset
of features when the number of successfully tracked features
falls under a certain threshold. To remove outliers from the
4931
(t
k+1
;t
k
)(t
k
;t
k 1
) = (48)
2
6
6
6
6
6
6
4

k;11

k 1;11

k;11

k 1;12
+
k;12
0
3
0
3
0
3
0
3
0
3
I
3
0
3
0
3
0
3
0
3

k;31

k 1;11
+
k 1;31

k;31

k 1;12
+
k;32
+
k 1;32
I
3

k;34
+
k 1;34
0
3
0
3
0
3
0
3
0
3
I
3
0
3
0
3

k;51

k 1;11
+t
k

k 1;31
+
k 1;51

k;51

k 1;12
+
k;52
+t
k

k 1;32
+
k 1;52
(t
k
+t
k 1
)I
3
t
k

k 1;34
+
k;54
+
k 1;54
I
3
0
3
0
3
0
3
0
3
0
3
0
3
I
3
3
7
7
7
7
7
7
5
?10
?5
0
5
?8 ?6 ?4 ?2 0 2 4 6 8
?1
0
1
2
3
4
5
6
x (m)
 
y (m)
 
z (m)
Std?VINS
STOC?VINS
Fig. 3. The estimated trajectories of the two compared VINS algorithms
in the real-world experiment conducted in the Stata Center at MIT. In this
plot,4 denotes the starting position, while the estimated ending points are
denoted by. The dash-dotted lines correspond to the standard VINS, the
solidlinestotheSTOC-VINS.Notethatthetwoalgorithmsperformcloseto
each other in some portions along the path, which makes the corresponding
lines difﬁcult to distinguish.
resulting tracks, which is a necessary step in practice, we
used the RANSAC with ﬁve-point algorithm [37].
In this test, the same two MSCKF-based VINS algorithms
as in the preceding simulation were compared, and Fig. 3
shows the estimated trajectories. Note that in this test, the
camera-IMU platform traversed about 140 m and returned
to its starting position. At the end of the trajectory, the
standard VINS has a position error of 1.6111 m, while the
positionerroroftheproposedSTOC-VINSisonly1.0975m.
These errors respectively account for approximately 1.13%
(standard VINS), and 0.79% (STOC-VINS) of the total
distance travelled. It becomes clear from these results that
the proposed STOC-VINS performs better than the standard
VINS which agrees with the previous simulation results.
VII. CONCLUSIONS AND FUTURE WORK
In this paper, we have introduced a new EKF-based VINS
algorithm, termed STOC-VINS, which ensures appropriate
state-transition and observability properties of the linearized
system so as to improve consistency and accuracy. In partic-
ular, we use the global, instead of local, parametrization for
the orientation error state, which enables the direct analytical
computation of the propagation Jacobian that fulﬁls the
semigroup property of an appropriate state-transition matrix.
Moreover,byadoptingtheobservability-constrainedmethod-
ology,we projectthe mostaccurate(canonical) measurement
Jacobian – computed using the latest, and thus best, state
estimates – onto the observable subspace so that no spurious
information is gained by the ﬁlter. As a result, the proposed
STOC-VINS was shown to outperform the standard VINS
algorithms, in terms of both consistency and accuracy. In the
future, we will focusing on further improving VINS perfor-
mance (including accuracy, consistency, and efﬁciency), e.g.,
how to efﬁciently integrate loop closure to enable long-term
navigation while attaining bounded errors.
APPENDIX I
PROOF OF LEMMA 4.1
Note ﬁrst that the standard EKF computes the propagation
Jacobian,(t
k
;t
`
), using the current state estimates, ^ x
kjk 1
and ^ x
`j`
. In order to verify the semigroup property (25),
we substitute the pertinent state estimates to the analytical
expressions of the IMU propagation Jacobians found in [13].
In particular, the multiplication of the two propagation Jaco-
bians,(t
k+1
;t
k
) and(t
k
;t
k 1
), does not alter the matrix
structure as shown in (48).
Consider (1;1) entry of the above multiplication (48).
Substitution of the current state estimates into the analytical
expressions of(t
k+1
;t
k
) and(t
k
;t
k 1
) [13] yields:

k;11

k 1;11
=C

I(k+1jk)
I(kjk)
^
 q

C
T

I(k 1jk 1)
I(kjk 1)
^
 q

6=C

I(k+1jk)
I(k 1jk 1)
^
 q

=
11
(t
k+1
;t
k 1
) (49)
where we have employed the fact that the propagated es-
timate of the IMU orientation generally is different from
its updated estimate, i.e., C
 
I
G
^
 q
kjk 1

6= C
 
I
G
^
 q
kjk

. The
above inequality (49) immediately completes the proof.
APPENDIX II
PROOF OF LEMMA 4.2
Due to the space constraint, we here prove only for the
case without biases, while the proof for the general case with
biases can be found in [32]. In this case, by removing the
entries corresponding to the biases from (30), we have the
propagation Jacobian
0
(t
k+1
;t
k
) as follows:

0
(t
k+1
;t
k
) =
2
6
6
4
I
3
0
3
0
3
0
3

0
k;31
I
3
0
3
0
3

0
k;51
t
k
I
3
I
3
0
3
0
3
0
3
0
3
I
3
3
7
7
5
(50)
The product of the two consecutive propagation Jacobians
assumes the following form [see (31)-(34)]:
  :=
0
(t
k+1
;t
k
)
0
(t
k
;t
k 1
) = (51)
2
6
6
4
I
3
0
3
0
3
0
3

0
k;31
+
0
k 1;31
I
3
0
3
0
3

0
k;51
+t
k

0
k 1;31
+
0
k 1;51
(t
k 1
+t
k
)I
3
I
3
0
3
0
3
0
3
0
3
I
3
3
7
7
5
4932
where
 
21
=
0
k;31
+
0
k 1;31
= b
 
G
^ v
k+1jk
 
G
^ v
k 1jk 2
 
G
g(t
k 1
+t
k
)

c
=
0
31
(t
k+1
;t
k 1
) (52)
 
31
=
0
k;51
+t
k

0
k 1;31
+
0
k 1;51
= 

G
^ p
k+1jk
 
G
^ p
kjk 1
 
G
^ v
kjk 1
t
k
 
1
2
G
gt
2
k



 t
k
b
 
G
^ v
kjk 1
 
G
^ v
k 1jk 2
 
G
gt
k 1

c
 

G
^ p
kjk 1
 
G
^ p
k 1jk 2
 
G
^ v
k 1jk 2
t
k 1
 
1
2
G
gt
2
k 1



= 
j
 
G
^ p
k+1jk
 
G
^ p
k 1jk 2
 
G
^ v
k 1jk 2
(t
k
+t
k 1
)
 
1
2
G
g(t
k
+t
k 1
)
2


k
=
0
51
(t
k+1
;t
k 1
) (53)
Note that the other (trivial) entries are easy to verify. Thus,
this completes the proof for the case of no bias.
REFERENCES
[1] D. Titterton and J. Weston, Strapdown Inertial Navigation Technology,
2nd ed. The Institution of Engineering and Technology, 2005.
[2] J. Kim and S. Sukkarieh, “Real-time implementation of airborne
inertial-SLAM,” Robotics and Autonomous Systems, vol. 55, no. 1,
pp. 62–71, Jan. 2007.
[3] M. Li and A. I. Mourikis, “Improving the accuracy of EKF-based
visual-inertial odometry,” in Proc. of the IEEE International Confer-
ence on Robotics and Automation, Minneapolis, MN, May 2012, pp.
828–835.
[4] M.BrysonandS.Sukkarieh,“Observabilityanalysisandactivecontrol
for airborne SLAM,” IEEE Transactions on Aerospace and Electronic
Systems, vol. 44, no. 1, pp. 261–280, Jan. 2008.
[5] A. Mourikis, N. Trawny, S. Roumeliotis, A. Johnson, A. Ansar, and
L. Matthies, “Vision-aided inertial navigation for spacecraft entry,
descent, and landing,” IEEE Transactions on Robotics, vol. 25, no. 2,
pp. 264 –280, Apr. 2009.
[6] S. Ebcin and M. Veth, “Tightly-coupled image-aided inertial nav-
igation using the unscented Kalman ﬁlter,” Air Force Institute of
Technology, Dayton, OH, Tech. Rep., 2007.
[7] D. Strelow, “Motion estimation from image and inertial measure-
ments,” Ph.D. dissertation, Carnegie Mellon University, 2004.
[8] V. Indelman, S. Williams, M. Kaess, and F. Dellaert, “Information
fusion in navigation systems via factor graph based incremental
smoothing,” Robotics and Autonomous Systems, vol. 61, no. 8, pp.
721–738, Aug. 2013.
[9] G. P. Huang, A. I. Mourikis, and S. I. Roumeliotis, “Analysis and
improvement of the consistency of extended Kalman ﬁlter-based
SLAM,” in Proc. of the IEEE International Conference on Robotics
and Automation, Pasadena, CA, May 19–23, 2008, pp. 473–479.
[10] ——, “Observability-based rules for designing consistent EKF SLAM
estimators,” International Journal of Robotics Research,vol.29, no. 5,
pp. 502–528, Apr. 2010.
[11] G. Huang, “Improving the consistency of nonlinear estimators: Anal-
ysis, algorithms, and applications,” Ph.D. dissertation, University of
Minnesota, Dept. of Computer Science and Engineering, 2012.
[12] D. G. Kottas, J. A. Hesch, S. L. Bowman, and S. I. Roumeliotis,
“On the consistency of vision-aided inertial navigation,” in Proc. of
the 13th International Symposium on Experimental Robotics, Quebec
City, Canada, Jun. 17–20, 2012.
[13] J. Hesch, D. Kottas, S. Bowman, and S. Roumeliotis, “Towards
consistent vision-aided inertial navigation,” in Algorithmic Founda-
tions of Robotics X, ser. Springer Tracts in Advanced Robotics,
E. Frazzoli, T. Lozano-Perez, N. Roy, and D. Rus, Eds. Springer
Berlin Heidelberg, 2013, vol. 86, pp. 559–574.
[14] ——, “Consistency analysis and improvement of vision-aided inertial
navigation,” IEEE Transactions on Robotics, vol. 30, no. 1, pp. 158–
176, Feb. 2013.
[15] ——, “Camera-IMU-based localization: Observability analysis and
consistency improvement,” International Journal of Robotics Re-
search, vol. 33, pp. 182–201, 2014.
[16] M. Li and A. I. Mourikis, “High-precision, consistent EKF-based
visual-inertial odometry,” International Journal of Robotics Research,
vol. 32, no. 6, pp. 690–711, Jun. 2013.
[17] Y. Bar-Shalom, X. R. Li, and T. Kirubarajan, Estimation with appli-
cations to tracking and navigation. New York: Wiley, 2001.
[18] W. L. Brogan, Modern Control Theory. Upper Saddle River, NJ:
Prentice Hall, 1991.
[19] P. Corke, J. Lobo, and J. Dias, “An introduction to inertial and visual
sensing,” International Journal of Robotics Research, vol. 26, no. 6,
pp. 519–535, Jun. 2007.
[20] T.LuptonandS.Sukkarieh,“Visual-inertial-aidednavigationforhigh-
dynamic motion in built environments without initial conditions,”
IEEE Transactions on Robotics, vol. 28, no. 1, pp. 61 –76, Feb. 2012.
[21] A. Martinelli, “Vision and IMU data fusion: Closed-form solutions
for attitude, speed, absolute scale, and bias determination,” IEEE
Transactions on Robotics, vol. 28, no. 1, pp. 44–60, 2012.
[22] S. Shen, Y. Mulgaonkar, N. Michael, and V. Kumar, “Vision-based
state estimation for autonomous rotorcraft mavs in complex environ-
ments,”inProc.oftheIEEEInternationalConferenceonRoboticsand
Automation, Karlsruhe, Germany, May 6–10, 2013, pp. 1750–1756.
[23] S. Weiss and R. Siegwart, “Real-time metric state estimation for
modular vision-inertial systems,” in Proc. of the IEEE International
Conference on Robotics and Automation, 2011, pp. 4531–4537.
[24] D. Kottas and S. Roumeliotis, “Exploiting urban scenes for vision-
aided inertial navigation,” in Proc. of the Robotics: Science and
Systems Conference, Berlin, Germany, Jun. 24–28, 2013.
[25] E. S. Jones and S. Soatto, “Visual-inertial navigation, mapping and
localization:Ascalablereal-timecausalapproach,”InternationalJour-
nal of Robotics Research, vol. 30, no. 4, pp. 407–430, Apr. 2011.
[26] J. Kelly and G. S. Sukhatme, “Visual-inertial sensor fusion: Local-
ization, mapping and sensor-to-sensor self-calibration,” International
Journal of Robotics Research, vol. 30, no. 1, pp. 56–79, Jan. 2011.
[27] F. M. Mirzaei and S. I. Roumeliotis, “A Kalman ﬁlter-based algorithm
for IMU-camera calibration: Observability analysis and performance
evaluation,” IEEE Transactions on Robotics, vol. 24, no. 5, pp. 1143–
1156, Oct. 2008.
[28] A. Isidori, Nonlinear Control Systems. Springer, 1995.
[29] G. P. Huang, A. I. Mourikis, and S. I. Roumeliotis, “A quadratic-
complexity observability-constrained unscented Kalman ﬁlter for
SLAM,” IEEE Transactions on Robotics, vol. 29, no. 5, pp. 1226–
1243, Oct. 2013.
[30] N. Trawny and S. I. Roumeliotis, “Indirect Kalman ﬁlter for 3D
attitude estimation,” University of Minnesota, Dept. of Comp. Sci.
& Eng., Tech. Rep., Mar. 2005.
[31] P. S. Maybeck, Stochastic Models, Estimation, and Control, ser.
Mathematics in Science and Engineering. London: Academic Press,
1979, vol. 141-1.
[32] G. Huang, “Towards consistent visual-inertial navigation,” Computer
Science and Artiﬁcial Intelligence Laboratory, Massachusetts Institute
of Technology, Cambridge, MA, Tech. Rep., 2013. [Online].
Available: http://people.csail.mit.edu/ghuang/paper/tr/stocvins.pdf
[33] A. I. Mourikis and S. I. Roumeliotis, “A multi-state constraint Kalman
ﬁlter for vision-aided inertial navigation,” in Proceedings of the IEEE
International Conference on Robotics and Automation, Rome, Italy,
Apr. 10–14, 2007, pp. 3565–3572.
[34] S.I.RoumeliotisandJ.W.Burdick,“Stochasticcloning:Ageneralized
frameworkforprocessingrelativestatemeasurements,”in Proceedings
of the IEEE International Conference on Robotics and Automation,
Washington, DC, May 11-15 2002, pp. 1788–1795.
[35] J. Shi and C. Tomasi, “Good features to track,” in Proc. of IEEE Com-
puterSocietyConferenceonComputerVisionandPatternRecognition,
Jun. 21–23, 1994, pp. 593–600.
[36] B. Lucas and T. Kanade, “An iterative image registration technique
withanapplicationtostereovision,”in Proc. of the International Joint
Conference on Artiﬁcial Intelligence, Vancouver, BC, Aug. 1981, pp.
674–679.
[37] D. Nister, “An efﬁcient solution to the ﬁve-point relative pose prob-
lem,” IEEE Transactions on Pattern Analysis and Machine Intelli-
gence, vol. 26, no. 6, pp. 756–770, Jun. 2004.
4933
