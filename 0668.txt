The bio-inspired chaotic robot
I÷ naki Ra÷ n« o
AbstractÑ Chaos is an interesting phenomenon displayed by
non-linear systems that has been used in robotics and found
empirically on real robotsÕ behaviour. This paper presents
a formal proof that Braitenberg vehicle 2b, a bio-inspired
control mechanism for unicycle robots, behaves as a mass in a
potential well. This provides a powerful analogy to understand
Braitenberg vehicle 2b as a mechanical system and it implies
that its behaviour can be chaotic. Implementing a Braitenberg
vehicle in robotics entails deÞning a stimulus function in
the environment. Inspired by previous works and using the
obtained theoretical results, this paper proposes the free area
perceived by a robot as a stimulus to generate collision free
continuous chaotic motion on a bounded space. In non-linear
systems chaos appears when a parameter is changed in a
family of dynamical systems. Similarly, our implementation on
a real robot demonstrates that both, chaotic and non chaotic
trajectories can be obtained depending on the stimulus function
built. The behaviour is explained through the analogy with the
mass in the potential well.
I. INTRODUCTION
Chaos is an interesting phenomenon displayed by non-
linear dynamical systems, but is not thought as a positive
feature since it involves instability and lack of long term
predictability. Sometimes it is even mistaken by randomness
but, contrary to randomness, chaotic behaviour can be pre-
dicted and shows properties that have been exploited for
cryptography [1] or communications [2], and many other
applications are investigated under the general area of control
of chaos [3].
Chaos has been used in robotics too as a technique for
coverage, since the trajectories generated by chaotic systems
are dense. This means that the robot trajectory will pass
arbitrarily close to any point in the state space. In [4] the
Arnold equation, a chaotic system found in ßuid dynamics,
is used to control a wheeled robot to cover a work-space
using for the Þrst time chaos in robotics. They demonstrate
and justify how their chaotic controller outperforms random
based control for coverage. A different approach is used in
[5] for a patrolling task, where a chaotic system is used
to generate random points for a planner. They achieve fast
coverage, but in this case chaos is just used as a random
number generator. In an empirical work [6], evidences of
chaos have been identiÞed in the behaviour of a wheeled
robot by computing the correlation dimension of the percep-
tual signals of the robot. Other experimental works [7] [8]
identiÞed positive values for the Lyapunov exponents in the
trajectory described by a mobile robot, which can be clearly
interpreted as deterministic chaos. Despite these Þndings, to
the best knowledge of the author, no theoretical work shows
I÷ naki Ra÷ n« o is with the Intelligent Systems Research Centre, University
of Ulster, UK. i.rano@ulster.ac.uk
chaos appears on mobile robots under a deterministic control
mechanism. In this paper, we show that a bio-inspired con-
troller, a Braitenberg vehicle, can generate chaotic behaviour
on a mobile robot.
Braitenberg vehicles are qualitative models of animal
tropotaxis behaviour [9] and have been used for decades
in robotics on an empirical basis. According to the thought
experiment presented in [10], each vehicle displays a dif-
ferent behaviour. This paper focuses on Braitenberg vehicle
2b, which consists on a dual-drive wheeled vehicle with
two sensors symmetrically arranged as shown in Figure 1.
The vehicle is immersed in a stimulus Þeld. Each sensor is
linked through an increasing connection (represented on the
Þgure by the the Ô+Õ sign) to the motor on the opposite side.
Since the connection between the sensors and the motors is
increasing, the more intense the stimulus gets the faster the
opposite wheel turns. The overall effect is to make the robot
turn towards high values of the stimulus and to speed up.
In the original work [10], this behaviour is called aggression
since, for a stimulus source, the vehicle acts like trying to
hit the source, but in biological terms is just a taxis model.
V
+ +
S(x,y)
V
R L
S
L R
S
d
?
Fig. 1. Internal structure of the Braitenberg vehicle 2b.
Multiple applications of this vehicle can be found in the
literature providing robots with different abilities. Obstacle
avoidance and target acquisition are achieved in [11] using
Braitenberg vehicle 2b and 3a respectively. Vehicle 2b is used
with infra-red sensors and 3a with light sensors to implement
phototaxis. Braitenberg vehicles are also used in [12] for
local navigation, where vehicle 2b is used for goal seeking,
and vehicles 3b and 2a are used to avoid obstacles in the
front and back of the robot respectively. This Braitenberg
control system uses a set of fuzzy rules that generate an
offset velocity for each wheel instead of the velocity itself.
The Þrst underwater robotic implementation of rheotaxis is
presented in [13], where a Þsh robot provided with pressure
sensors can keep its orientation relative to a laminar ßow.
Even though the forward speed is kept Þxed, the turning
rate of the robotic Þsh is computed following the principles
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 304
of Braitenberg vehicles. This is not the only application of
these vehicles to underwater robotics, since a robotic electric
Þsh using a similar approach is presented in [14]. In this
case the steering control is performed using the difference
between the currents, perceived through electrodes, on the
sides of the robot. The resulting trajectories approach con-
ductive objects in a pond while avoiding isolating ones.
As we have seen, Braitenberg vehicles are widely used to
implement bio-inspired robotic behaviours, specially when
the motion relies on unconventional sensors, sensors not
providing distance readings. Other types of these vehicles
are used in the literature to implement target seeking or
avoidance behaviours, but in this review we focused on 2b
type.
The main contribution of this paper is to present a proof
that the controller implemented by Braitenberg vehicle 2b
can show chaotic behaviour In nature chaos is the norm
rather than the exception [15]. The same occurs for the
controller presented in this paper. Despite non chaotic dy-
namics can be found, it is restricted to a set of simple
conditions. On the other hand, chaotic behaviour generates
dense trajectories, which makes this mechanism suitable for
a wide range of applications like coverage, surveillance or
exploration. Therefore, a second contribution of this paper,
relevant to robotics, is the implication that these vehicles
can be used for such applications. Probably the most advan-
tageous feature of the presented controller is its simplicity of
implementation, since it is based on sensorial readings from
any proximity sensor. Finally, our last contribution is the de-
sign, implementation and test on a real robot of a Braitenberg
controller which ensures collision avoidance with obstacles
while continuously moving. The rest of the paper is organised
as follows. Section II reviews the mathematical model of
the vehicle and shows some mathematical properties of their
trajectories, and its equivalence to a mass in a potential
well. Section III proposes a novel way of implementing the
Braitenberg vehicle 2b on a robot with standard range sensors
and shows how experimental results match the theory. The
paper ends with some conclusions and guidelines for further
work in Section IV.
II. A CHAOTIC BRAITENBERG VEHICLE CONTROLLER
A. The Braitenberg vehicle 2b controller
This section states our working assumptions and reviews
the controller of Braitenberg vehicle 2b (see [16] for a
complete derivation of the mathematical equations). We will
assume a scalar stimulus or potentialS(x) exists in a simply
connected and compact (closed and bounded) set as shown
in Þgure 2. For convenience we will separate its interior
and its boundary D[@D2<
2
, where @D could represent
the boundaries of the workspace and the obstacles. Without
loss of generality, we will assume the boundary @D deÞnes
the limit of the inßuence of the stimulus, i.e. S(x) = 0
for all x 2 @D, while the stimulus function in D is
positive and smooth, at least C
2
. Therefore the contour of
the work-space is a level set of the stimulus. We consider
stimuli as functions S : D[@D !<
+
[f0g such that
?
0
¶D=?
0
??
1
??
2
D
?
1
?
2
Fig. 2. Domain where the stimulus is deÞned. The connected domain
can be deÞned as the area enclosed by a set of curves  
i
, and it must be
bounded.
S(x)> 0 iffx2D. According to [10], there is an increasing
connection between the sensors and the motors which we will
assume of a functional nature. Therefore, the connection for
vehicle 2b can be modelled as an increasing C
2
function
F(s) : <
+
[f0g ! <
+
[f0g, which means it has a
positive derivative, i.e
dF(s)
dS
> 08s2<
+
[f0g. SinceF(s)
represents the turning velocity of each wheel, the vehicle
does not move backwards, and we will further assume that
F(0) = 0, but neither the derivative of F(s) is zero at
s = 0 nor the gradient of S(x) vanishes at points x2@D.
We will denote the Cartesian coordinates of the vehicle as
x = (x;y) and its heading as , therefore the state will be
(x;) = (x;y;) and it belongs to D[@DS
1
, where S
1
represents the unit circle.
Under these assumptions, the state of the differential-drive
vehicle 2b immersed in S(x) and with a wheel velocity
control F(s) evolves according to the following system of
differential equations:
_ x = F(S(x))cos (1)
_ y = F(S(x))sin (2)
_
 =

d
rF(S(x))^ e
p
(3)
whererF(S(x)) is the gradient of the composite func-
tion, ^ e
p
= [ sincos]
T
is a unitary vector orthogonal
to the vehicleÕs head direction pointing to its left,  is the
distance between the sensors and d is the wheelbase of the
vehicle [16]. To simplify the notation we will write F(x)
instead of F(S(x)).
Since the linear velocity of the vehicle is v = F(x), the
differential equation governing its acceleration (_ v =rF(x)
_ x) can be written, using equations (1) and (2), as:
_ v = vrF(x)^ e (4)
where ^ e = [cossin] is the unit vector in the heading
direction of the vehicle, and we used the fact thatv =F(x).
On the other hand, assuming

d
= 1, we can write equation
(3) in the more convenient form:
_
 =
F(x)
v
rF(x)^ e (5)
This mathematical model of Braitenberg vehicle 2b allows
305
us to drive conclusions about its trajectories and select
adequate stimulus and connection function to obtain a desired
behaviour.
B. Some results on the behaviour of the vehicle
It is worth noting that, given our choices for S(x) and
F(s), the dynamical system describing the behaviour of the
vehicle has no equilibrium points in D, since equations (1)
and (2) never vanish simultaneously.
We will Þrst see that, under the assumptions of section II,
the solution of the Cauchy problem (1), (2), (3),x
0
2D and

0
2 ( ;] stays in D for all t, i.e. DS
1
is a positive
invariant set. Since the right hand side of the dynamical
system is continuous, for one solution to go outside the
surface of the state space deÞned by @D S
1
, the ßow
should have a component pointing outside it. By construction
of F(x) the Þrst two components of the ßow are zero at
the boundary, F(x) = 0 for all x2 @D, while the normal
vector (rS(x);0) pointing outside the surface @D S
1
has no angular component. Therefore, the dot product of
the ßow and the normal vector to @DS
1
is zero. This is
because, either the ßow is tangent to the surface@DS
1
or it
completely vanishes (when equation (3) becomes zero). This
result justiÞes our choice ofF(x) to vanish at the boundary
@D, for the vehicle not to escape from the work-space D.
Another important result about the dynamical system at
hand is that no equilibrium point of equations (1), (2)
and (3) is stable. Since F(x) only vanishes for x 2 @D
the only possible equilibria lay at the boundary of D. We
assumed that the gradient is not zero at the boundary and,
therefore, the only points where the whole ßow vanishes are
(x
0
;
0
)2 @DS
1
such thatrF(x
0
) ^ e
p
= 0, when the
vehicle direction coincides with the direction of the gradient
ofF(x). If we linearise the ßow (1), (2) and (3), and compute
the Jacobian matrix to perform a linear stability test we get:
J(x
0
;
0
) =

rF(x
0
)^ e
T
0

d
rF
xjy
(x
0
)
T
^ e
p
 

d
@
^ e
F(x
0
)

(6)
whererF
xjy
(x
0
)
T
^ e
p
is a 12 row sub-matrix containing
the partial derivatives of the gradient w.r.t. x and y, and
@
^ e
F(x) =rF(x) ^ e
0
is the directional derivative of F(x)
along the direction of the vehicle ^ e
0
= [cos
0
sin
0
]
T
.
The eigenvalues of the Jacobian matrix indicate the stability
of each equilibrium point. These eigenvalues are  =

0;rF(x
0
)^ e
0
; 

d
rF(x
0
)^ e
0
	
, and since they have opposite
signs one is always positive, which means the equilibrium
is a saddle point. The eigenvector corresponding to the zero
eigenvalue has the direction orthogonal to the vehicle head-
ing, and therefore accounts for the non-holonomic motion
constraints. Since one of the eigenvalues is always negative a
one dimensional stable manifold exists for each equilibrium
point. However, for a real implementation on a robot this
means the equilibrium will never be reached because of the
inherent noise on real sensors which drives the trajectory
away of the unidimensional stable manifold. Therefore, all
the equilibria in the dynamical system describing Braitenberg
vehicle 2b are saddle points. These two results together,
D being an positive invariant set and @D having only
saddle points, imply that the vehicle will never collide with
obstacles in the environment, but will move continuously
in the work-space. Limit cycles could appear but, Þnding
the limit cycles of non-linear dynamical systems is an open
research problem. Some results [16] for circularly symmetric
stimulus S(x) =S(r) indicate that periodic orbits exist but
they are not limit cycles.
C. Equivalence with a mass in a potential well
In this section we will prove that the motion equations of a
Braitenberg vehicle 2b are equivalent to the motion of a parti-
cle in a potential well. Moreover, we will identify the relation
between the stimulus function and the potential function.
The notion of potential based methods was established long
ago in robotics to design controllers [17]. The interesting
point in this work is that, despite Braitenberg vehicles
being biologically inspired, a mathematical equivalence to
a mechanical system can be made. The motion equations in
Cartesian coordinates of a friction-less particle of unit mass
in a 2D potential well V(x) can be stated as:
_ x = v (7)
_ v =  rV(x) (8)
where x2<
2
and v2<
2
are, respectively, the position
and velocity of the particle. These equations can be easily
derived using, for instance, Lagrangian mechanics. For this
system, instead of Cartesian coordinates, the velocity can be
expressed as its modulus (v) and direction ( ), and their
relation to the Cartesian velocities is given by v = v^ u
where ^ u = (cos sin )
T
. If we express equations (7) and
(8) in terms of v and using the coordinate transform, i.e.
substituting v =v^ u into (7) and (8) and multiplying by the
inverse Jacobian of the transformation, we obtain:
_ x = v^ u (9)
_ v =  rV(x) ^ u (10)
_
 =  
1
v
rV(x) ^ u
p
(11)
where ^ u
p
= [ sincos]
T
is an unit vector orthogonal to
^ u. If we write the potential function asV(x) = 
1
2
[F(x)]
2
,
equations (9), (10) and (11) turn into:
_ x = v^ u (12)
_ v = F(x)rF(x) ^ u (13)
_
 =  
F(x)
v
rF(x) ^ u
p
(14)
which are equivalent equations to those of the Braitenberg
vehicle with

d
= 1. Therefore, the motion of a Braitenberg
vehicle 2b corresponds to the motion of a particle in a
potential well with potential function V(x) = 
1
2
[F(x)]
2
.
This has strong implications since it means that all the known
306
results about the motion of a particle in a potential well
also apply to the motion of a Braitenberg vehicle. We will
illustrate this in the experimental section III. It can be shown,
for instance, that a scalar deÞning the total energy can be
deÞned for the Braitenberg vehicle, and it remains constant
over time. It also applies the fact that for some potential
well or stimulus function, the motion of the vehicle could be
chaotic, but for simpler potentials (like a parabolic function)
chaos does not appear. Everything depends on the selection
of F(x); chaotic or non-chaotic behaviour can appear as
a function of a parameter selection. This implies that the
trajectory of a vehicle will be dense and arbitrarily close to
any point on the work-space.
III. A PRACTICAL IMPLEMENTATION FOR MOBILE
ROBOTS
We want to apply the theoretical results obtained to a
dual drive mobile robot. It seems reasonable that the domain
where the vehicle will move has to be the free space. This
free space should be bounded, and we want the objects, and
the boundary of the space, to deÞne the boundaries of the
work-space itself, i.e. @D, where F(x) will vanish. One
possibility to deÞne a scalar stimulus function S(x) that
vanishes at the boundary of the obstacles is selecting the
distance to the closest obstacle. However, this is not a good
choice since it is only a C
0
function, the derivative will be
discontinuous at the points where the distance to two objects
is the same (i.e. on the V oronoi diagram). The effect of this is
a discontinuity on the right hand side of equation (3), which
will only affect the turning rate.
More appropriate ideas to deÞne S(x) functions can be
found in the literature [18], like an estimate of the free area
around the robot. Figure 3 shows the area a point robot would
perceive with a range limited (r
M
) proximity sensor (like
a laser range scanner). The free area could be computed
through a local map from the intersection of the circle
around the robot and the obstacles. To keep the computation
simpler, we will instead use the free area perceived by
the vehicle which can be directly obtained from the sensor
readings. It has been shown that the area of overlapping
translating polygons is a continuous quadratic polynomial of
the translation [19], and so it will be the free area. Moreover,
since one of our polygons is a circle the overlapping area and
and the free area will be smoother as a function of the robot
position. As it can be seen in the Þgure, when the robot
touches the obstacle, the perceived free area drops to half
the size of the perceptual circle. We can deÞne a stimulus
function as the perceived area minus half of the area in the
perceptual circle. This function becomes zero at the boundary
of obstacles and is smooth enough to generate a continuous
equation (3).
Using the perceived free area to implement a Braitenberg
vehicle on a robot would require two proximity sensors
covering 360

around the robot. As our robots do not posses
such sensors, but a single laser scanner mounted on the front
of the robot, we approximated the perceived free area by the
free area on each half of the readings of the laser scanner.
Free Area
Obstacle
(a) Perceived free area
with a close obstacle.
Free Area
Obstacle
(b) Perceived free area
at the boundary of the
free space.
Fig. 3. DeÞnition of the stimulus function S(x) based on the free space
perceived by the robot.
Therefore, the laser scan was split into readings from left
and right sides, and the area of each side was computed
with the corresponding set. Since the robot is not a point,
we applied the Minkowski sum of the robot turning radius to
the laser scan to obtain the region where the robot is allowed
to move. An interesting side effect of using the Minkowski
sum is that obstacles with sharp edges become smooth, and
thus the function S(x) becomes smoother. In this case, we
select theF(s) to be a linear function of the normalised area
between zero and the maximum speed of the robot v
M
.
Lastly, robots have hardware limitations, and they cannot
reach arbitrarily low speeds, needed when the robot is close
to obstacles. To overcome this implementation problem, we
identiÞed the minimum reachable linear (v
m
) and angular
(!
m
) velocities and set the turning speed ! =sign(!)!
m
when both velocities were below these thresholds. The exper-
iments presented in the rest of this section were performed
using a MetraLab SCITOS G5 robot in a square environment
of 5:3 m side bounded by a fence. Accurate position infor-
mation of the robot was obtained from a VICON tracking
system mounted around the arena.
A. Simple Environment
This section illustrates the non chaotic behaviour of the
Braitenberg vehicle controlled by the perceived free area.
For the mass in the potential well, non chaotic behaviour
appears for instance in a smooth symmetric potential. We
designed the environment to be symmetric, as shown in
Þgure 4, with a square obstacle approximately in the centre
of the arena. The sides of the obstacle were parallel to the
fence and the robot run 27 laps around it. The trajectory
of the robot is also shown in Þgure 4 with the starting
position marked as x (though the correspondence of the
trajectory and the environment in the Þgure is approximate).
The vehicle turns continuously around the obstacle always
in the same direction, which depends on its initial pose.
This behaviour clearly compares to a particle in a potential
well since, for the symmetric case, the turning direction is
determined by the direction of the initial velocity. Periodic
trajectories appear in this situation, but if the particle velocity
is not properly aligned it will oscillate around them. The
existence of periodic and quasi-periodic trajectories with two
frequencies, has been identiÞed theoretically for symmetric
307
Fig. 4. Experiment with a symmetric stimulus.
stimuli in Braitenberg vehicle 2b [16]. This experiment
conÞrms these trajectories also appear on implementations
in real robots. This is a very special setting, since most of
the environments where mobile robots move do not present
such a strong symmetry.
B. Double potential well
In this experiment, as Þgure 5(a) shows, we created a free
area stimulus function with two peaks. Two objects were
placed on the middle of opposite sides of the arena, therefore
the perceived free area will have two maxima at the centre
of each of the sides and a local minimum between these
obstacles. Figure 5(a) also shows the trajectory of the robot
under these conditions, wherex indicates its starting position.
As the Þgure shows the variability on the trajectory increases
with respect to the one presented in Þgure 4, but it does
not display clear sings of chaotic behaviour. On the other
hand, this trajectory can be also understood in terms of the
mass in a double potential well analogy, as the particle will
cycle around both potential valleys and the velocity at the
intersection point will have different directions.
Chaotic behaviour is obtained in dynamical systems for
some parameter ranges. In our case if the shape of the
potential well is changed. One option is to make the potential
ßat on some regions making a particle behave as a billiard
ball on a pool table (where the potential is ßat and inÞnity at
the border). It is well know that ideal systems (friction-less
with elastic collisions) like billiard balls behave chaotically
[20] on these ßat potentials (billiard tables). In the case of the
perceived free area this can be achieved by simply cutting off
the range of the laser scanner, making the robot blind to far
obstacles. This generates areas in the environment where the
perceived free area is constant and, therefore, the robot will
follow a straight line, like a particle moving on a horizontal
ßat surface. Once an object enters the perceptual range, the
speed of the robot will decrease and it will start turning,
like a particle climbing a smooth slope. The corresponding
experiment is shown in Þgure 5(b), where the ÒnearsightedÓ
(a) Trajectory of the Braitenberg vehicle in a environment
generating a double peaked S(x)
(b) Chaotic trajectory of the Braitenberg vehicle
Fig. 5. Experiments with a double peaked stimulus.
robot ran for more than 30 min in the double peaked ßat
stimulus. The trajectory shows no clear pattern, it looks
random but it is generated by a deterministic controller in a
static environment. In the ideal case of a completely planar
stimulus with an zero value at the contour of the obstacles the
velocity component orthogonal to the surface would change
its direction, like a ball hitting the side of a pool table.
C. Complex environments
Our Þnal experiment illustrates the behaviour of the robot
on the same arena with four obstacles placed in a non
symmetric way. Figure 6 shows the environment and the
trajectory followed by the robot during the run. As it can
be deduced from the trajectory the robot does not hit any of
the obstacles or the fence around the arena. The trajectory
ÒbouncesÓ chaotically at the ends of the perceived free space,
and its velocity is higher in the less cluttered areas. Like in
the previous experiment, some areas are more often visited
than others, and when the passage is narrow (relative to the
robot turning radius) the trajectory followed maximises the
308
Fig. 6. Experiments in an environment with four obstacles.
distance to the obstacles on both sides.
IV. CONCLUSIONS AND FURTHER WORK
Previous works in chaotic behaviour of robots fall in two
categories: they sought chaos on an experimental basis or
used chaotic systems to directly control the robot motion.
This paper presents the Þrst proof of chaotic behaviour in
robotics by showing the equivalence between the equations
of Braitenberg vehicle 2b and those of a friction-less mass
in a potential well. We identiÞed the relation between the
stimulus of the vehicle and the potential function, a powerful
analogy which allows to understand how these vehicles be-
have for a given stimulus. Grounded on the theoretical model
of Braitenberg vehicle 2b, we build a stimulus function
based on the perceived free area around the robot, that
ensures collision free continuous motion within a bounded
environment. The trajectories of this controller, in the general
case, will be chaotic, and therefore suitable for coverage,
exploration or surveillance. This work creates a window of
opportunity to apply control of chaos techniques to robotic
systems, where the trajectory is Þltered through a stable
system to attenuate the unstable behaviour and the sensitivity
to initial conditions.
A limitation of the proposed implementation is the stim-
ulus function, the perceived free area. Since half of the area
the robot can sense is subtracted from the actual free area
the motion will be too ÒconservativeÓ if obstacles appear
on opposite sides of the vehicle. This means the speed of
the vehicle will be slower than necessary. It will also avoid
concave parts of objects since the perceived free area quickly
falls to zero. A solution for this problem would consist on
building the stimulus function based on the shortest distance
to obstacles, at the cost of introducing discontinuities on the
turning rate of the robot. A similar problem can occur in
potential Þeld approaches when the vehicle enters the area
of inßuence of an obstacle. An alternative would be to deÞne
the stimulus as the solution of a partial differential equation
with boundary conditions zero at the obstacles, but this
would increase dramatically the computational requirements.
Future work includes reÞning the perceived free area to
provide the robot with a less conservative behaviour while
keeping the stimulus smooth enough and to investigate the
effect of the parameters on the behaviour of the robot in
the environment. This would allow to design very simple
controllers for coverage, exploration. . .
V. ACKNOWLEDGEMENTS
The author would like to acknowledge the comments and
help of O. Akanyeti and E. Antoniewicz.
REFERENCES
[1] L. Kocarev, IEEE Circuits and Systems Magazine, vol. 1, no. 3, pp.
6Ð21, 2001.
[2] K. Cuomo, A. Oppenheim, and S. Strogatz, ÒSynchronization of
lorenz-based chaotic circuits with applications to communications,Ó
IEEE Trans. onCircuits and Systems II: Analog and Digital Signal
Processing, vol. 40, no. 10, 1993.
[3] A. Fradknow and R. Evans, ÒControl of chaos: survey 1997-2000,Ó in
Proc. of the 32nd IEEE Conf. on Decision and Control, vol. 1, 1993,
pp. 469Ð474.
[4] Y . Nakamura and A. Sekiguchi, ÒThe chaotic mobile robot,Ó IEEE
Transactions on Robotics and Automation, vol. 17, no. 6, pp. 898Ð
904, 2001.
[5] C. V olos, I. Kyprianidis, and I. Stouboulos, ÒA chaotic path planning
generator for autonomous mobile robots,Ó Robotics and Autonomous
Systems, vol. 60, pp. 651Ð656, 2012.
[6] T. Smithers, ÒOn quantitative performance measures of robot be-
haviour,Ó Robotics and Autonomous Systems, 1995.
[7] U. Nehmzow and K. Walker, ÒThe behaviour of a mobile robot is
chaotic,Ó AISB journal, vol. 1, no. 4, 2003.
[8] M. Islama and K. Murase, ÒChaotic dynamics of a behavior-based
miniature mobile robot: effects of environment and control structure,Ó
Neural Networks, vol. 18, no. 2, p. 123144, 2005.
[9] G. Fraenkel and D. Gunn, The orientation of animals. Kineses, taxes
and compass reactions. Dover publications, 1961.
[10] V . Braitenberg, Vehicles. Experiments in synthetic psycology. The
MIT Press, 1984.
[11] E. Bicho and G. Sch¬ oner, ÒThe dynamic approach to autonomous
robotics demonstrated on a low-level vehicle platform,Ó Robotics and
Autonomous Systems, vol. 21, pp. 23Ð35, 1997.
[12] X. Yang, R. V . Patel, and M. Moallem, ÒA Fuzzy-Braitenberg Nav-
igation Strategy for Differential Drive Mobile Robots,Ó Journal of
Intelligent Robotic Systems, vol. 47, pp. 101Ð124, 2006.
[13] T. Salum¬ ae, I. Ra÷ n« o, O. Akanyeti, and M. Kruusmaa, ÒAgainst the
ßow: A braitenberg controller for a Þsh robot,Ó in Proceedings of the
International Conference on Robotics and Automation (ICRA), 2012,
pp. 4210Ð4215.
[14] V . Lebastard, F. Boyer, C. Chevallereau, and N. Servagent, ÒUnderwa-
ter electro-naviagation in the dark,Ó inProceedingsoftheInternational
Conference on Robotics and Automation (ICRA), 2012, pp. 1155Ð
1160.
[15] T. Mullin, Ed., The nature of chaos. Oxford university press, 1993.
[16] I. Ra÷ n« o, ÒA systematic analysis of the braitenberg vehicle 2b for point
like stimulus sources,Ó Bioinspiration & Biomimetics, vol. 7, no. 3,
2012.
[17] O. Khatib, ÒReal-time obstacle avoidance for manipulators and mobile
robots,Ó International Journal of Robotics Research, vol. 5, no. 1,
1986.
[18] I. Ra÷ n« o and T. Smithers, ÒObstacle avoidance through BraitenbergÕs
aggression behavior and motor fusion,Ó in Proc. of the 2nd European
Conf. on Mobile Robots, 2005, pp. 98Ð103.
[19] D. Mount, R. Silverman, and A. Wu, ÒOn the area of overlap
of translated polygons,Ó Computer Vision and Image Understanding
archive, vol. 64, pp. 53Ð61, 1996.
[20] S. Tabachnikov, Geometry and Billiards. American Mathematical
Society, 2005.
309
