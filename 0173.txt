Dance-like Humanoid Motion Generation
Through Foot Touch States Classiﬁcation
Kunio Kojima, Shunichi Nozawa, Kei Okada and Masayuki Inaba
Abstract—This paper proposes a humanoid dance motion
generation system that deals with a huge variety of leg motions.
While previous research only tackled on a few kinds of leg
motions, original human dance leg motions contain various
foot touch states such as slide, turn, and heel contact, as well
as complex motions such as kick and twist. According to the
dance literature, we found that there are seven major foot
touch states that make dance motion more ”dance-like”. Thus
we present a method to classify the seven kinds of foot touch
state from human dance motion data, and describe the various
dance leg motions by using combinations of the foot touch
states and key-frames. Based on these methods, we designed
the humanoid dance motion generation system that enables
humanoid robots not only to satisfy the geometric condition
but also to imitate various human dance leg motions. Finally
we show an experiment using a life-sized humanoid, HRP-2.
I. INTRODUCTION
While humanoid’s leg motions consist of support phases
and swing phases, human foot touch states are more various
and it is academically important to investigate the foot touch
states and methods for imitating by humanoid robots. We
focus on human dance motions composed of various foot
touch states and try to imitate human dances by humanoid
robots.
Recently, the imitation of human dances by humanoid
robots has been actively studied[1][2]. Nakaoka et al.[2]
enabled a humanoid robot to imitate four kinds of leg
motions by classifying human leg motions based on ”Leg
Task Models”.
However, there is a great variety of human dance leg
motions including slide, turn, kick (Fig.1), and twist. As
a result, it is difﬁcult to classify all the different complex
leg motions due to the large number of variety. Therefore,
we classify not the leg motions themselves but foot touch
states,and describe leg motions using combinations of ”foot
touch states” and ”key-frames”.
Foot touch states
In a dance notation (Labanotation[3]), as shown
in Fig.2, various foot touch states such as slide,
heel touch, and toe touch are deﬁned. These touch
states are essential from the standpoint of dance.
In addition, foot touch states are necessary to
generate dynamically balanced humanoid motion
trajectories.
Key-frames
Key-frames are poses in which a whole body is
K. Kojima, S. Nozawa, K. Okada and M. Inaba are with Department of
Mechano-Infomatics, The University of Tokyo, 7-3-1 Hongo, Bunkyo-ku,
Tokyo 113-8656, Japank-kojima at jsk.t.u-tokyo.ac.jp
almost stationary. Shiratori et al. showed the im-
portance of key-frames and a method for extracting
them[4].Wecandescribenotonlysimplestepsbut
also complex leg motions by using the key-frames,
which are important postures in dance motions.
In this study, we propose a method for generating hu-
manoid motions by focusing on foot touch states and key-
frames. We propose a method for measuring human motions
through TOF (Time of Flight) sensors and classifying foot
touch states according to a set of rules based on Laban-
otation, and evaluate the results. Furthermore, we describe
a method for generating humanoid leg motions while pre-
serving the features of the foot touch states, and show
experimentalresultsusingalife-sizedhumanoidrobot,HRP-
2.
(1) (2) (3) (4) (5)
Fig. 1. Kick Walk Motion
II. METHOD FOR HUMANOID MOTION GENERATION
BASED ON HUMAN MOTION
Our proposed system for generating various humanoid
leg dance motions is shown in Fig.3. In Sec.III of this
paper, we described the component for classifying foot touch
states (labeled ”A” in Fig.3), and in Sec.IV we describe the
component for generating leg choreography (labeled ”B” in
Fig.3).
In our foot touch state classiﬁcation scheme, we recognize
seven kinds of foot touch states according to ankle trajectory,
toe trajectory, and human ZMP trajectory.
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 1788
Fig. 2. Description of Foot Touch State in Labanotation[3]
Fig. 3. System Conﬁguration Diagram to Generate Vaious Humanoid Leg
Dance Motions
Our leg choreography generator generates humanoid robot
motion trajectories both executable in a real machine and
preserves dance features by modifying input trajectories to
satisfy dance constraints and geometric constraints. Dance
constraints require the preservation of important elements of
dances such as features of each foot touch state and several
key-frames of each foot touch state’s time region. Geometric
constraints require the avoidance of collisions between the
robot’s feet or between the robot’s foot and the ﬂoor.
In upper body posture converter, we converted human
upper body postures to humanoid’s upper body postures by
using joint angle mapping.
III. CLASSIFICATION OF FOOT TOUCH STATES
A. Seven Kinds of Foot Touch States
For imitation of human dances by humanoid robots,
Nakaoka et al.[2] distinguished between grounded phases
and ungrounded phases using foot velocity, while Yonekura
etal.[5]usedthedepthdatafromaKinectcamera.Moreover,
Miura et al.[6] distinguished three foot touch states of
grounded phase, ungrounded phase, and turn phase, using
ankle velocities and foot yaw angular velocities.
As described in Sec.I, there is a huge variety of foot touch
states in dance motions. Therefore in this paper, we classify
the following seven kinds of foot touch state selected from
the states deﬁned in Labanotation.
Flat The state in which the whole sole of the sup-
port leg is in contact with the ﬂoor (Fig.4(1))
Touch The state in which the sole of the non-support
leg is in contact with the ﬂoor (Fig.4(2))
Point The state in which the toe or heel is contact
with the ﬂoor (Fig.4(3))
Draw The motion during which the non-support leg
slides on the ﬂoor (Fig.5)
Slides The motion during which the support leg
slides on the ﬂoor (Fig.6)
Fan The motion during which the foot rotates
around the toe or heel (Fig.7)
Ungrounded The state in which the sole is not in contact
with the ﬂoor (Fig.4(4))
One may think that Labanotation is not suitable for
describing dance motions because human motions are en-
coded by a coarse coordination. However, Labanotation was
invented to be used for learning Western dances such as
ballet, which has various foot touch states, and in fact,
many kinds of foot touch states are deﬁned in Labanotation.
Therefore, we consider the Labanotaion deﬁnition of foot
touch states to be detail enough for describing humanoid
dance leg motions.
(1) Flat (2) Touch (3) Point (4) Unground
Fig. 4. Foot Touch States: Flat, Touch, Point, and Ungrounded
(1) (2) (3) (4)
Fig. 5. Draw Motion : The right leg’s state is ”Draw”.
(1) (2) (3) (4)
Fig. 6. Slide Motion : The left leg’s state is ”Slide”.
(1) (2) (3) (4)
Fig. 7. Fan Motion : The right legs’ state is ”Fan”
Table.I shows a comparison with previous studies. It can
be seen from the table that our method can deal with more
kinds of foot touch states.
We need to describe the features of each foot touch state
by some parameters for the deﬁnite classiﬁcation. Therefore,
wedescribedthefeaturesusingﬁveparameters:ankleheight,
toe height, ankle velocity, foot yaw angular velocity,and
supporting-foot (Table.II ).
1789
TABLE I
COMPARISON OF FOOT TOUCH STATE CLASSIFICATION WITH PREVIOUS
STUDIES
Flat Touch Point Slide Draw Fan Ungrounded
A  - - - - - 
B  - - - - - 
C  - - - -  
D   ? ?  ? 
A is Nakaoka et. al[2], B is Yonekura et.al[5], C is Miura et.al[7], D is
this research. means the state is possible by real robots.? means
the state is possible only by robot models since the motion satisﬁes
geometric constraints but does not satisfy dynamic constraints.? means
the state is possible by real robots if the other foot touch state is Flat.
TABLE II
FEATURES OF FOOT TOUCH STATES
Touch States
Ankle
Height
Toe
Height
Yaw
Angular
Velocity
Ankle
Velocity
Supporting
foot
Flat
L
L
L
L
Yes
Touch No
Point
H
-
L
H
Slide
L
H
Yes
Draw No
Fan H - -
Ungrounded H H - - No
H means that the value is higher than a threshold. L means that the
value is lower than a threshold.
B. Discussion on the Classiﬁcation Method
There are two methods for classifying foot touch states: a
rule-based method and a non-rule-based method. We adopt
the rule-based method since the features of each foot touch
state are described in Labanotation.
C. Discussion on the Measuring Method
There are mainly two methods for measuring human
dancemotions:usingdynamicmeasurementsorusingkinetic
measurements. Using dynamic measurements is suitable for
distinguishing between Float and Touch or between Slide
and Draw. However, the other foot touch states are different
from each other in foot positions and postures. In addition,
while we need to place markers on the ﬂoor or our soles for
makingdynamicmeasurements,weneednotplacesensorsor
markers on our bodies for making kinematic measurements
with the use of TOF sensors. Therefore, we choose to
measurehumandancemotionskinematicallyusingaKinect.
D. Proposed Classiﬁcation Method
Considering the features of foot touch states shown in
Table.II , we classiﬁed foot touch states according to the
ﬂow shown in Fig.8, using ankle height, toe height, an-
kle velocity, foot yaw angular velocity, and human ZMP
trajectory. ”Supporting-Foot” (labeled ”A” in Fig.8) is the
foot which is in contact with the ﬂoor and supporting one’s
weight. In dance terminology, deﬁned as such in distinction
from the foot which is in contact with the ﬂoor but does not
support one’s weight. We used ZMP trajectories calculated
from approximating the human body as multi-mass-points to
identify the supporting-foot. For example, we determine if
the right foot is the supporting-foot by using the ratio of the
distance between the left foot and the ZMP to the distance
between the two feet.
The purpose of identifying the supporting-foot is for the
humanoid to imitate human waist movements. When we
compensate for humanoid body balance by using its waist
horizontal position, the humanoid waist movements have a
correlation with its ZMP trajectories. Therefore, we intended
to make humanoids imitate human waist movements by not
shiftingthereferenceZMPtrajectoriestothenon-supporting-
foot.
Fig. 8. Foot Touch State Classiﬁcation Method
E. Results of Classiﬁcation and Consideration
Fig.9 shows part of the results of foot touch state classiﬁ-
cation.Weclassiﬁedhumanlegmotionscontainingeachfoot
touch state more than 20 times using the proposed method
and manually.
The lag between foot touch states’ transition time iden-
tiﬁed using the proposed method and the transition time
identiﬁed manually is less than 0.09 seconds. We interpreted
this as an appropriate result considering that the frame rate
of the input motion capture data is 30 fps and that there is
noise in the data.
The foot touch states between transitions identiﬁed by our
method and the ones identiﬁed manually for Ungrounded,
Fan, and Point were in agreement. On the other hand, we
were able to distinguish Touch from Flat or Draw from Slide
(oridentifythesupporting-foot)correctlyonlyapproximately
90 percent of the times. Originally, the purpose for identify-
ing the supporting-foot is for the humanoid to imitate human
waist movements. Therefore, it is considered as another way
toreﬂectthecontinuousvalueoftheeachleg’sweightdegree
to the generation of reference ZMP trajectories. It is also
considered valid to reﬂect the waist’s relative position from
thefeet.Therefore,wehadbettergeneratethereferenceZMP
trajectories using the waist’s horizontal positions instead of
identifying the supporting-foot.
IV. LEG CHOREOGRAPHY GENERATOR
In this section, we explain the method for modifying
the humanoid’s motion trajectories to satisfy the geometric
constraints and the dance constraints. The humanoid’s mo-
tion has to satisfy geometric constraints for a real machine
to execute them. In addition, if the motion is a kind of
dance, the humanoid’s motion also needs to preserve the
important elements of dance such as key-frames. Therefore,
1790
0
1
2
3
4
5
6
7
7 .8 8 .3 8 .8 9 .3 9 .8 1 0 .3 1 0 .8
0
1
2
3
4
5
6
7
Time [sec]
Ungrounded
Draw
Slide
Fan
Point
Touch
Flat
Ungrounded
Draw
Slide
Fan
Point
Touch
Flat
0.06sec
Manual
Auto
Left foot Right foot
0
1
2
3
4
5
6
7
1 8 1 8 .5 1 9 1 9 .5 2 0 2 0 .5 2 1
0
1
2
3
4
5
6
7
0.03sec
Touch
Flat
Ungrounded
Draw
Slide
Fan
Point
Touch
Flat
Ungrounded
Draw
Slide
Fan
Point
Touch
Flat
Manual
Auto
0
1
2
3
4
5
6
7
2 4 .7 5 2 5 .2 5 2 5 .7 5 2 6 .2 5 2 6 .7 5 2 7 .2 5 2 7 .7 5
0
1
2
3
4
5
6
7
0.06sec
0.03sec
Ungrounded
Draw
Slide
Fan
Point
Touch
Flat
Ungrounded
Draw
Slide
Fan
Point
Touch
Flat
Manual
Auto
Fig. 9. The Result of Foot Touch State Classiﬁcation: The upper is the
manual classiﬁcation, the lower is the result by the proposed method.
we generate the humanoid leg motion trajectories not only
to satisfy geometric constraints but also dance constraints
shown below.
Geometric constraints
1) The right and left feet do not collide with each
other.
2) The support legs do not collide with or lift off the
ﬂoor.
3) The swing legs do not collide with the ﬂoor.
Dance constraints
1) The features of foot touch states identiﬁed in
Sec.III are preserved.
2) The key-frames deﬁned by each foot touch state
are preserved.
First, we explain the outline of the leg choreography
generator. A humanoid’s leg motion is sometimes generated
by the spline interpolation of the starting, middle, and end
point of each phase. However, there are a lot of kinds of foot
touch states such as a heel contact and slide, and each foot
touch state’s phase often contains several key-frames. Thus
in this paper, we described humanoid leg motions using a
combination of foot touch states and key-frames to address
their variation as below.
1) Detect key-frames(A in Fig.10)
2) Convert each human leg key-frame posture to hu-
manoid leg posture(B in Fig.10)
3) Apply dance constraint 1) and geometric constraints to
each key-frame(C in Fig.10)
4) Interpolatebetweenkey-framesineachfoottouchstate
phase(D in Fig.10)
Fan Ungrounded Ground G G Left
G Ungrounded G Fan G G Right
?
Key
-Frame
Touch
State
Input Motion
Robot Motion
Fan
Interpolation(D)
Detect key-frames(A)
Convert 
posture(B)
Appy dance
and geometric
conditions(C)
Fig. 10. Leg Choreography Generator
We used Shiratori’s method[4] as reference and selected a
start and end point of each foot touch state phase (classiﬁed
by our proposed method in Sec.III) and velocity local mini-
mums of hands, feet, and waist as key-frames(A in Fig.10).
Next, we explain how to apply dance constraints 1) and
geometric constraints to each key-frame (C in Fig.10). We
take the collision avoidance between the foot and the ﬂoor
for example. In the case of Point, whose feature is the foot
pitch angle according to Table.II , we avoid the collision by
raising the foot (Fig.11(1)). By contrast, in the case of Draw,
whose feature is the low height of the foot, we avoid the
collision by leveling the foot (Fig.11(2)). The way to deal
with the geometric constraints according to the foot touch
state is summed up in Table.III .
Inthisway,wedealwiththesamegeometricconstraintsin
thedifferentwayaccordingtothefoottouchstatetopreserve
the features of each foot touch state and to satisfy geometric
constraints.
We used ”Choreonoid”[8],the integrated GUI application
development framework for robots, to interpolate between
key-framesineachfoottouchstatephase(Fig.10D).Nakaoka
1791
et al.[8] described the detail.
(1) (2)
Fig. 11. Avoidance of Collision with Floor in ”Point” and ”Draw”
V. EXPERIMENT OF DANCE MOTION BY HRP-2
In this paper, we used an HRP-2 for imitating hu-
man dances. In addition, we used the balancer plugin of
Choreonoid[8] to generate the humanoid’s dynamically bal-
anced motion. The balancer plugin of Choreonoid uses the
ZMP control of Nishiwaki et al.[9][10], which works well
under the assumption that the humanoid’s sole contacts with
the ﬂoor without slipping. This is why we made a real
machine perform dance motions composed of ﬁve kinds of
state - Flat, Touch, Point, Draw and Ungrounded, omitting
Slide and Fan, which are sliding motions of a supporting-
foot.
The dance motion executed in this paper is shown in
Fig.13.Startingfromtheleft,eachoneframeshowstheinput
human dance motion, the result of the classiﬁcation of foot
touch states, the humanoid’s executable motion satisfying
both dance constraints and geometric constraints, and the
performance of the dance motion by the real machine. It can
be seen from them that several foot touch states of the dance
motion are classiﬁed and that the features of each state are
preserved.
The result of the experiment with HRP-2 is shown in
Fig.12. Starting from the top, each graph shows the result of
the foot touch state classiﬁcation of the input human motion,
the result of the foot touch state classiﬁcation of the HRP-
2 motion, and the output of the 6-axis force-torque sensors
of the each foot. We classiﬁed the foot touch states of the
HRP-2 motion by calculating each joint’s position from joint
angles and by the method described in Sec.III.
We can understand that HRP-2 can imitate the human foot
touch states from the upper two graphs. We were able to
classify the HRP-2 motions into the same foot touch states
as the states of the input human motions (52 seconds), which
contain Touch 26 times, Point 6 times, and Draw 4 times.
The lags between foot touch states’ transition times were
shorter than 0.09 seconds.
We can also conﬁrm that HRP-2 can imitate some of the
human foot touch states from the output of the 6-axis force-
torque sensors. While the left foot (Touch) bears little weight
around 22.5 second, the left foot (Point) bears about 200N
weight around 22.8 second.
Wecanverifythattherobot’simitationoffoottouchstates
from the real robot’s output data as described above. It is
expected that we will be able to modify humanoid motions
to imitate foot touch states better through the use of the real
robot’s outputs.
TABLE III
THE WAY TO PRESERVE THE FEATURES OF EACH FOOT TOUCH STATE
Geometric
constraint
Touch
states
The way to satisfy the geometric constraint
The collision
between the
right and left
foot
Flat
p
?
L
= ˜ p
L
(k
min
,H,p
L
?p
R
),k
min
= min(k)
s.t.k > 0,f
LR
(˜ p
L
(k,H,p
L
?p
R
),p
R
) = false
kmin is constant during a single phase.
Touch
Point
Fan
Slide p
?
L
= ˜ p
L
(k
min
,H,p
L
?p
R
),k
min
= min(k)
s.t.k > 0,f
LR
(˜ p
L
(k,H,p
L
?p
R
),p
R
) = false Draw
Ungrounded Replace H with I and the same modiﬁcation as Flat.
The collision
between the
foot and the
ﬂoor
Flat
p
?
L
= Hp
L
R
?
L
=
?
?
cos(?
L
) ?sin(?
L
) 0
sin(?
L
) cos(?
L
) 0
0 0 1
?
?
Touch
Fan
Slide
Draw
Point p
?
L
= ˜ p
L
+k
min
ez,k
min
= min(k)
s.t.k > 0,f
floor
(˜ p
L
(i,I,ez)) = false Ungrounded
The foot’s
ﬂoating
above the
ﬂoor
Flat
p
?
L
= Hp
L
R
?
L
=
?
?
cos(?
L
) ?sin(?
L
) 0
sin(?
L
) cos(?
L
) 0
0 0 1
?
?
Touch
Fan
Slide
Draw
Point
p
?
L
= ˜ p
L
?kmaxez,kmax = max(k)
s.t.k < 0,f
floor
(˜ p
L
(k,I,ez)) = false
Ungrounded With no change
˜ p?(k,A,x)=p? +kAx
I : Identity matrix of size 3, ?? : Yaw angle of robot foot
p? : Input position of the robot foot, p
?
?
: Modiﬁed position of the robot foot
R? : Input orientation of the robot foot, R
?
?
: Modiﬁed orientation of the robot foot
(* is L(left foot) or R(right foot))
H =
?
?
1 0 0
0 1 0
0 0 0
?
?, ez =
?
?
0
0
1
?
?
function f
LR
(p0,p1) ? Check collision between the left and right foot
Place left foot atp0
Place right foot atp1
if Left and Right foot collide with each other then
return TRUE
else
return FALSE
end if
end function
function f
floor
(p) ? Check collision between the foot and the ﬂoor
Place left foot atp
if The foot collides with the ﬂoor then
return TRUE
else
return FALSE
end if
end function
VI. CONCLUSION
This paper proposed a method for generating humanoid
motion from human dances. The method consists of a clas-
siﬁcation scheme of foot touch states and a leg choreography
generator.
In a classiﬁcation scheme, we presented a method for
classifying human leg motions into different foot touch
states, proposed and evaluated a rule-based method, and
showed its validity.
In a leg choreography generator, we described the dance
leg movements using a combination of foot touch states and
key-frames. This method enabled us to generate humanoid
dance motions containing various complex leg movements.
In addition, we conﬁrmed that the generated motions were
feasible on a HRP-2 and that HRP-2 could imitate some of
the human foot touch states by the experiment.
By improving the balance controller to be applicable to a
1792
