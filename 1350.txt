Self-Assembly of a Swarm of Autonomous Boats
into Floating Structures
Ian O’Hara, James Paulos, Jay Davey, Nick Eckenstein, Neel Doshi, Tarik Tosun, Jonathan Greco,
Jungwon Seo, Matt Turpin, Vijay Kumar and Mark Yim
Abstract— This paper addresses the self-assembly of a large
team of autonomous boats into ﬂoating platforms. We describe
the design of individual boats, the systems concept, the al-
gorithms, the software architecture and experimental results
with prototypes that are 1:12 scale realizations of modiﬁed
ISO shipping containers, with the goal of demonstrating self-
assembly into large maritime structures such as air strips,
bridges, harbors or sea bases. Each container is a robotic
module capable of holonomic motion that can dock in a
brick pattern to form arbitrary shapes. Over 60 modules
were built of varying capability. The docking mechanism is
designed to be robust to large disturbances that can be expected
in the high seas. The docking mechanism also incorporates
adjustable stiffness so that the conglomerate can comply to
waves representative of sea state three, and have the ability to
dynamically stiffen as required. The component modules for
autonomous assembly, docking and simultaneous collision-free
planning as well as the software architecture are presented
along with the description of experimental veriﬁcation.
I. INTRODUCTION
Large robotic self-assembled aquatic structures enable
capabilities such as the formation of offshore bases for hu-
manitarian aide to hurricane stricken islands, ad hoc landing
strips, encircling oil spills, or refueling depots in the middle
of the ocean [1]. A large number of modiﬁed standard ISO
shipping containers, which conform to a standard, low cost
form factor easily transported around the world, can be used
to form a swarm of autonomous boats that could be used
to join together to form Modular Sea Bases (MSB) which
can in turn be delivered nearly anywhere on the planet that
container ships can reach.
This work describes the design of individual boats, the
systems concept, the algorithms, the control and planning
software and the software architecture of working with up
to 60 modules at 1:12 scale. We will use the term module or
boat to refer to the modiﬁed containers. With such large
numbers, there are questions of how the modules self-
organize, plan and execute motions that avoid collisions,
while achieving the goal conglomerate shape (e.g. a harbor
that conforms to the shoreline or a ﬂoating landing strip).
Self-assembly of autonomous agents (mobile agents dock-
ing with each other) has been a research problem in the
self-reconﬁgurable robot research community for nearly two
This work was sponsored in part by the Defense Advanced Research
Projects Agency and ONR Grant N00014-09-1-1031. The views expressed
are those of the authors and do not reﬂect the ofﬁcial policy or position of
the government.
Authors are with the GRASP Lab. and Dept. of Mechanical Engineering
and Applied Mechanics, Univ. of Pennsylvania, Philadelphia, PA, USA.
ianohara@gmail and fjpaulos, jaydavey, neck,
neeld, ttosun, jongreco, juse, mturpin, yim,
kumarg@seas.upenn.edu
decades, and there are a variety of approaches [2], [3]. How-
ever, the unique geometric and environmental constraints of
this system require a new planner.
Modular sea bases were examined in [4] as a potential
way to build Mobile Offshore Bases focusing on a large
seaport or air base aﬂoat at sea and movable under its own
power. These systems could create bases where none exist
which could be particularly useful for rapidly developing
events. The modules were relatively large; in one version,
the modules were 280 m long and they proposed assembling
ﬁve of them end to end to form a landing strip. As in this
paper, a scale model was constructed and examined, though
at 1:150 scale and tethered [5]. They tested three modules
that formed a chain, but did not have to deal with assembly
of larger numbers of modules into complex shapes.
II. SYSTEM ARCHITECTURE
At the highest level, the system is split into three compo-
nents: a ﬂeet of boats, a central computer, and a poolside
camera array (see Fig. 1). The ﬂeet of boats consists of
independent actors which are unaware of the others and are
responsible for fulﬁlling requests from the central computer.
The central computer consists of a number of loosely coupled
software components which, working together, are responsi-
ble for taking an assembly blueprint and giving orders to the
boats to assemble the speciﬁed conglomerate. Finally, the
camera array provides boat pose feedback for all boats to
the central computer and the boats themselves.
This paper ﬁrst describes the implemented hardware de-
sign. It then goes on to describe a software system capable of
both controlling the boats and assembling the conglomerates
autonomously from a blueprint. Next, to address concerns
about the destructive effects of a varying sea environment,
analysis is done on conglomerate dynamics and on the
docking mechanism of the boats. Finally, experiments in a
pool are described that verify system capabilities.
III. HARDWARE
1) Propulsion: Each shipping container in the full-sized
system is capable of holonomic motion. Our scaled system
modules produce holonomic motion using four thrusters
positioned in the corners of each scaled shipping container.
Each thruster uses a ‘water wheel’ style design consisting
of a spinning paddle and a water guide that produces a jet
of water in one of two ﬁxed directions (see Fig. 2). Boats
capable of holonomic motion eases trajectory following and
performing docking maneuvers. Making ﬁne maneuvers with
the boats also enables more precise station keeping against
currents, waves or wind effects.
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 1234
Homography
Docker
Coordinator
Assembly
Planner
Trajectory
Planner
Assembly
Blueprint
Distributor
Boat
Boat
Boat
Boat
Boat
Vision Laptop
1
Camera
Poolside Camera Array
Central Computer
Fleet of Boats
Vision Laptop
N
Camera
ROS T ext File Custom Process
Component
Types
Fig. 1: System components are physically distributed across
a central computer, vision laptops, and independent boats
Bulb keel
 
  
Hook
 
Loop



Padding  
Thruster
Male docking
geometry
Female docking
geometry


Fig. 2: Tactically Expandable Maritime Platform module
2) Docking: The implemented docking concept was con-
ceived by General Dynamics and QinetiqNA who con-
structed the full-sized ISO container prototype. It is a male
to female connection mechanism for connecting modules
together under dynamic wave conditions. One long side of
the module is a male side and the opposing long side is a
female side. The male side includes a hook sweeping in the
horizontal plane that catches a suspended vertical cable on
the female side of another module. Spring loaded folding
arms (female side) are used to hold out a loop of string for
the hook to catch. A motor winches both ends of the string at
once on a spiraled winch drum (Fig. 3a) to allow the spring
loaded arms to move out at the same time and at a non-
linear speed during the docking process (outlined in Sec.IV-
D). Additionally, if modules in the scaled system are located
in the docked position, but the docking mechanisms are not
engaged, the modules can still dock. A constant force spring
located in the hook allows the hook mechanism to comply
in the situations where the sweeping hook interferes with a
close neighboring module.
Note that this docking mechanism results in a brick wall
pattern as can be seen in Figs. 11, 12. Although the mech-
anism does not allow short-end to short-end attachments,
general 2D shapes can be constructed [6]. An algorithm that
plans for the assembly sequence for a given goal shape is
described in Sec. IV-B.
(a) Female (b) Male
Fig. 3: Docking mechanisms. (a) Loop detail fully extended,
(b) Hook detail showing sweep.
When docked, the interface between two modules includes
padding on the sides of the hull. This padding lets structures
made from the ﬂoating modules ﬂex which is important to
survive rough sea conditions as explained in Sec.V-B. The
winches in the female side of the docking mechanism can
pull two modules tighter, squeezing the padding to provide
a controlled stiffness between modules.
3) Stability: Our scaled system modules were built with
many components sitting well above the hull bottom result-
ing in a high center of mass. The boats also have low density
resulting in a large freeboard. This combination makes the
modules prone to large pitch and roll motions with the
possibility of overturning. In addition, large roll and pitch
introduce errors in the localization when using overhead
cameras. For these reasons the scaled modules were given a
bulb keel to keep the modules upright and resistant to roll.
This bottom feature is likely not needed on the full sized
boats, which will have a much lower freeboard height.
4) Electrical Design: All of the electronics on an indi-
vidual boat are controlled by a Linux compatible Gumstix
computer-on-module [7], which is mounted on a custom
breakout board. The Gumstix was chosen for its size and
to take advantage the Linux infrastructure (networking, de-
velopment tool chain, drivers, etc). Using Linux also al-
lowed easy integration with ROS [8]. The Gumstix controls
two motors with built-in encoders to actuate the winches
(Fig. 3a), two analog servos to move the hooks (Fig. 3b),
and four motors used for propulsion of the boat. All six
motors are controlled using off-the-shelf high current drivers,
and are connected to the main processor with TTL serial. A
bidirectional voltage translation board is necessary for the
Gumstix (at 1.8 V logic) to send and receive control signals
to all actuators (at 3.3 V and 5 V logic). A central PCB
connects the Gumstix, all of the actuators, a leak sensor, and
an externally visible LED board together and routes power
to them from NiMH batteries.
IV. SOFTWARE
The overall control architecture required for autonomous
operation spans multiple software components and multiple
physical platforms. At the highest level, the Coordinator
is responsible for sequencing operation of the Assembly
Planner, the Trajectory Planner, and the Docking Routine.
1235
Replan 
Needed?
free
docked
docking
If boat.state = ...
For each boat:
All Boats 
Docked?
Done
Set seed boat state to 
docked
Dock 
Sequence
yes
yes
no
Start
Associate targets 
with dock points 
 Send docked boats to
Assembly Planner, 
await response
Send world state 
to Trajectory 
Planner
Trajectory 
Planner
Assembly 
Planner
Filled 
Dock
Points
New 
Dock
Points
Coordinator
Boat 
Object
Boat 
Object
Boats
Free Boats, 
Obstacles,
Targets
Trajectories
Fig. 4: Coordinator Operation
These components reside physically within a central com-
puter, as sketched previously in Fig. 1. Each boat is a semi-
independent agent which responds to infrequent trajectory
commands and rapid pose estimates. A full scale ﬁeld
deployment might utilize radio for communication and GPS
for localization. In our experiments a local wiﬁ network
provides communication managed by a Distributor Node, and
overhead cameras publish pose estimates.
A. Coordinator
The Coordinator, outlined in Fig. 4, is an event-based
state machine that allows the Assembly Planner, Trajectory
Planner, and Docker to operate with some degree of asyn-
chrony. The Coordinator parses a blueprint for the desired
conﬁguration and stores an internal map of dock sites,
boat locations within the desired conglomerate (see the left
panel of Fig. 5a). As construction progresses, the Assembly
Planner identiﬁes open dock sites that may be simultaneously
ﬁlled and that will not later block the assembly sequence.
Near each available dock site the Coordinator assigns a
target point, a global coordinate where the centroid of a boat
should be driven in preparation for docking (see Fig. 5b).
The Coordinator passes the current locations of free boats,
target points, and static obstacles to the Trajectory Planner,
which then computes paths for free boats to reach the
target points. Whenever a boat reaches a target point, the
Coordinator passes control to the reactive Docking Sequence
which maneuvers the boat into the corresponding dock
site by actuating the hooks and winches to complete the
dock. Whenever a dock site is successfully occupied, the
Coordinator notiﬁes the Assembly Planner so that it may
expose more dock sites for continued assembly.
3
24
05
1
0
1
2
3
4
2
3
4
5
0
5
(a)
(b)
T
0
S
0
C
0
C
5
S
5
T
5
Fig. 5: (a) A shape with six sites (left), and its assem-
bly sequence (right). (b) One state in the assembly where
boat.state (Fig. 4) is free, docking, and docked for
the blue, red, and black boats, resp. The red boat has reached
T
0
, target point of site 0, and has just changed to docking.
B. Assembly Planner
The Assembly Planner parses a blueprint for the desired
conﬁguration and generates an assembly sequence that spec-
iﬁes an order for ﬁlling the dock sites. The sequence can
be executed interactively as mentioned in Sec. IV-A: the
Assembly Planner takes as input, the shape of the current
structure and returns open dock sites that can be occupied
around the current structure. The algorithm [6] is brieﬂy
summarized here. First, a goal shape is represented as a
single connected collection of dock sites to be occupied by
boats (the left panel of Fig. 5a). After arbitrarily designating
one of the dock sites as a seed, dock site 3 in this example,
we construct a directed graph on the collection of the
dock sites such that its edges represent local-scale assembly
precedences (the right panel of Fig. 5a). The resultant graph
is guaranteed to be acyclic; we then obtain an assembly
sequence that can be executed without infeasible, cyclic
dependency. As a result, the structure grows as a single
connected component from the boat occupying the seed with
multiple boats docking in a parallel distributed manner. For
example, at the instant shown in Fig. 5b where dock sites
3, 2, and 4 are occupied, free boats can occupy dock sites 0
and 5 without mutual communication. Filling the dock sites
is independent according to the assembly sequence shown in
the right panel of Fig. 5a. Moreover, following the resultant
sequence guarantees reachability: there exists a feasible path
into any open dock site that is not blocked by the structure.
For example, consider a structure composed of dock sites
0, 1, and 3 in the example; to occupy dock site 4, a boat
has to pass through the narrow corridor between the boats
occupying dock sites 3 and 1. The algorithm avoids such
difﬁcult to maneuver conﬁgurations. The time complexity of
the algorithm is O(m
2
) where m is the number of the dock
sites of a given goal shape.
1236
C. Trajectory Planner
The Trajectory Planner is responsible for planning paths
for free boats to reach the target point for open dock sites.
In this way it provides the logical interface between the high
level discrete reasoning of the Coordinator and the low level
feedback controller embedded on the boats. A plan request
from the Coordinator speciﬁes the current locations of free
boats, target points, and static obstacles as inputs to the
planner. The Trajectory Planner then assigns free boats to
speciﬁc target points and generates collision-free trajectories
for the boats to reach their respective target points (Fig. 5b).
Globally optimal plans are generated through our determinis-
tic algorithm presented in [9]. Solution paths lay on a visibil-
ity graph constructed over the static obstacles, providing a
ﬁxed margin against collision. The time-dependent motion
along these paths further ensures no collisions between
moving boats by construction. Planning for ten boats is
completed in less than one second, and those plans are then
published as messages to the Distributor Node, which in
turn sends individual trajectories to each boat. Replanning
is required only when a boat successfully occupies a dock
site, which results in the change of the current structure and
the discovery of new docking sites by the Assembly Planner.
The discrete nature of event-triggered plan requests and the
capability of the boats to execute their assigned trajectories
unattended signiﬁcantly reduces the communication between
the Coordinator and the many boats.
D. Docking Routine
When the Coordinator observes that a boat has reached
its target point, control of the boat is passed to the Docking
Routine. The Docking Routine resides within the Coor-
dinator node and executes a tuned sequence of actions
to bring the boats from the dock ready state to the
successfully docked state. There are four stages to
the docking sequence. (1) Starting from the target point
(labeledT
0
andT
5
in Fig. 5b), approach thestandoffpoint, an
intermediate position for proper docking alignment (labeled
S
0
and S
5
). (2) Station-keep to stabilize position and open
the winches or hooks on both boats. (3) Approach the dock
site centroid (labeled C
0
and C
5
) and close the winch or
hook on both boats. (4) Evaluate dock success.
The routine is dynamic, with the docking boat driving for-
ward to move its hook or winch into the capture region of the
stationary boat. Appropriate hook and winch positions and
the resulting capture region were experimentally determined
through dry testing (Fig. 7). Additional parameters affecting
docking success included stabilization time (in step (2)), the
approach vector (step (3)), and error tolerance and wait times
when evaluating success (step (4)). These parameters were
tuned through docking tests in water.
Some dock attempts are rendered unsuccessful by distur-
bances (waves in the pool), or by localization or control
errors. For example, if docking boats are too close when the
hook ﬁres, it will miss the loop. In this case, the hook will
push against the hull of the other boat and cause them to drift
apart without connecting. Failures are automatically detected
by comparing the relative positions of the docking boats to
the expected positions for success. In the case of failure, a
spiral search is implemented where one boat relocates to a
different starting position and executes the sequence again.
This changes the boat’s approach vector and provides an
additional chance for a successful dock.
E. Localization System
Sensing boat poses is done using APRIL Tags [10] via
the cv2cg package [11]. Fiducial markers are placed on each
boat, and are sensed by one or more cameras located above
the pool surface. These cameras are mounted to a frame
3.7 m above the pool and 1.0 m out. The viewing frustum
sees boats in a 12.8 m by 3.7 m rectangle that spans the entire
width of the pool resulting in approximately 2 cm precision.
Each camera is attached via USB to a dedicated laptop
running cv2cg and gives pose information for each boat’s
tags at 20-30 Hz. These laptops transmit the tag poses in
their respective camera frames via UDP to the central com-
puter. The central computer then uses prerecorded calibration
information to project these coordinates into the single pool
frame coordinate system, generating the (x,y,) coordinates
for each boat. These world coordinates are then published
over the ROS framework for the system components to use.
F. System Administration and Networking
Developing the Coordinator, Trajectory Planner, Assembly
Planner, and code on dozens of ﬂoating boats is challenging.
To do this, each boat automatically connects to known system
wiﬁ networks. Code development occurs on local machines,
using a series of bash scripts that utilize rsync, ssh pipes, and
tmux [12] sessions running on the boats to compile, run, and
debug code simultaneously on all of the boats, the central
computer, and the vision laptops. For boats that contain up
to date binaries, turning on their power switch is enough for
them to start their ROS node and become fully functional
within the system.
Most of the system utilizes ROS for both p2p networking
setup and data serialization/deserialization (see Fig.1). ROS
was chosen over alternatives [13], [14] because it provides
both serialization and p2p networking in one cohesive pack-
age, along with an extensive suite of self introspection
tools (eg: rostopic, rosnode [15]). Also, the node and topic
abstractions provide a convenient mechanism for debugging
system components by replacing other components with
“virtual” nodes. For example, we can create virtual boats to
test most of the system without being physically at a pool.
One more logistical software component present in Fig.1
is the Distributor. The Distributor takes aggregate streams
of locations, trajectories, and administrative commands from
their respective creators within the central computer and
splits them into boat individualized topics. This was done
to explicitly control wiﬁ network trafﬁc.
V. ANALYSIS
A. Docking Area
To help ensure that the robots successfully dock when
they attempt to use their active docking mechanisms, we
have analyzed the set of relative positions where docking
is possible. We call this the area of acceptance, deﬁned as
“the range of possible starting conditions for which mating
will be successful” [16]. In this case we consider “mating”
1237
Fig. 6: The docking connector 2D area of acceptance (right)
is obtained by convolution of the shape swept out by the
hook (left) and the shape swept out by the loop (center).
Fig. 7: Experimental data collected to show the actual 2D
area of acceptance (boats not drawn to scale).
to be engagement of the hook and loop leading to intimate
alignment of two boats in the brick pattern.
Area of acceptance between the two boats is the com-
bination of the areas swept out by the male and female
mechanisms. The hook and the loop each sweeps a two
dimensional area, shown in Fig. 6. They need only overlap
slightly in order to dock. By translating the relative position
of the elements in x and y, we can convolve the two
area shapes together to create a shape representing the full
“area of acceptance”. This area was experimentally measured
(Fig. 7) and shown to be similar. Relative orientation was
also included in our analysis and is handled in a similar
manner. One source of error is from the hook tip which is not
captured in the convolved image. To help with uncertainty
in the positions of two boats while docking, they aim for
relative positions corresponding to the center of the area
of acceptance. Even with attempts to maximize the area of
acceptance, uncertainties from wave and localization errors
are enough for docks to sometimes fail (see Section IV-D).
B. Wave and Strength Analysis
In a full scale deployment, one container ship might
deploy thousands of modules to form a large conglomerate.
We wish the structure to survive in the moderate conditions
of sea state three, where a signiﬁcant wave height of 1.25
m and modal period of 7.5 s might be expected. Requiring
a ﬂat chain of 6 m long modules to rigidly “bridge” across
such a 88 m swell length anticipates connection moments
of 900 kNm and connection shear forces of up to 300 kN
– forces greater than even the considerable weight of the
modules themselves. Standard ISO containers are not de-
signed to accept such loading, and in this case compliance to
the wave shape is clearly required. Conversely, operational
requirements might demand stiffness or shape constraints.
The system addresses these difﬁculties by incorporating
active stiffness connectors between adjoining modules that
allows the conglomerate to conform to the wave induced
forces reducing structural stress when needed.
While sophisticated wave analysis programs such as Or-
caﬂex can predict hydrodynamic interactions with rigid
boats, analyzing the precise effects of buoyancy and waves
on the structural properties of a conglomerate made up of
a large number of rigid elements connected with compliant
docking mechanisms is not tractable as computational com-
plexity explodes. To quickly assess the dynamic response to
incoming harmonic waves we developed a method for au-
tomatically constructing simple dynamical models for large
conglomerates based on an arbitrary connectivity blueprint.
These models generate rapid predictions of steady state
motions for a proscribed sea state, conglomerate shape,
and connection stiffnesses. Such a tool is crucial if an
operator wants to take full advantage of the available choices
in conﬁguration and stiffness speciﬁcation while pursuing
survivability and operational requirements.
The structural modes of two connected modules free in
rotation and translation are governed by their respective 6x6
generalized inertiasM along with a 6x6 damping matrixB
c
and stiffness matrix C
c
, where subscript c indicates these
terms are contributed by the connection. The state vectorsx
1
and x
2
represent each module as six element vectors giving
x,y,z position and roll (abouty), pitch (aboutx), yaw (about
z) orientation. For small amplitude rotations the dynamical
interaction can be captured by a second order linear ordinary
differential equation as in Eqn. (1).

M 0
0 M

 x
1
 x
2

+

Bc  Bc
 Bc Bc

_ x
1
_ x
2

+

Cc  Cc
 Cc Cc

x
1
x
2

= 0
(1)
A canonical linear formulation for the response of one
isolated ﬂoating body to small amplitude harmonic waves
is similarly described by a second order vectorial Eqn. (2).
Matrix coefﬁcients, M, A
w
, B
w
, and C
w
are the 6x6 mass,
added mass, added damping, and hydrostatic stiffness matri-
ces where subscriptw now denotes that these are contributed
by the wave interaction. Finally, X
w
(t) is the wave forcing
function on the body.
(M +Aw)  x
1
+Bw _ x
1
+Cwx
1
=Xw (2)
The added mass matrix A
w
gives a linear, six dimensional
approximation to the additional inertial effect of the ﬂuid
accelerated by the body during small oscillations. Added
damping B
w
is linear, ﬁnite dimensional approximation for
the forces resulting from the generation of waves due to the
motion of the ship. MatrixC
w
captures the hydrostatic con-
tribution to forces on the bodies, which includes the intuitive
buoyant force and static righting moments. In general coefﬁ-
cientsA
w
andB
w
are frequency dependent, and we concern
ourselves only with the steady state response to harmonic
excitation. These terms may be obtained experimentally or,
in our case, derived by approximately applying results from
strip theory [17].
We assume that neighboring boats interact only through
their physical connections and not via hydrodynamic cou-
plings which has shown to be small in multi-module mobile
1238
0 1 2 3 4 5 6 7 8 9 10
?5
0
5
roll, deg
Non?Stiff Connections
0 1 2 3 4 5 6 7 8 9 10
?5
0
5
roll, deg
time, s
Stiff Connections
Fig. 8: A simulation of four boats shows that with non-stiff
connections the roll angles vary widely, but when stiffened
the boats remain aligned and the overall motion is reduced.
offshore bases – though with much larger modules [18]. This
permits the wave model of Eqn. 2 to be readily combined
with the structural Eqn. 1 by augmenting the inertia, stiffness,
and damping terms and introducing the wave forcing. This
equation for an interacting pair becomes the building block
for programatically assembling the governing equations for
large conglomerates as second order differential equations
with highly sparse, block structured matrix coefﬁcients.
We applied our model to the 1:12 scale system and
compared the numerical results to observations of a four
module “diamond” structure in the pool. Waves with an
approximate driving period of 0.77 s and amplitude of 2
cm were manually generated, corresponding to wavelengths
of 1.8 boat lengths. Simulation of this scenario with stiff
connections resulted in negligible relative pitch and roll mo-
tions between boats – a result readily conﬁrmed in the pool.
Simulations with connections non-stiff in bending display
modules moving out of phase with their neighbors, resulting
in relative pitch and roll differences between neighbors of up
to 8:4
o
peak-to-peak (Fig. 8). In the physical experiment, the
motions appear qualitatively similar and relative motions in
pitch and roll were visually estimated at 6
o
peak-to-peak. Our
simulations additionally predict the conglomerate response
may be sensitive to the direction of the incoming wavefront.
C. Docking Geometry
Operational requirements often need the platform to be
as smooth as possible, so we wish to minimize vertical
shear motions between two modules yet allow other degrees
of freedom so that system can comply to wave forces as
necessary. To do this, a small rigid shape is added to the
hulls surrounding the winch cables. The double cone shape
seen in Fig. 9 combines pitch displacement with position
displacement. If there is some pitch discrepancy between
the boats, the interaction of the mating shapes impose
an accompanying positional displacement. Since positional
displacement is counteracted by a spring force in the hook-
and-loop mechanism, the geometry effectively adds a pitch
stiffness term to the 6x6 stiffness matrix.
VI. EXPERIMENTS
A set of four experiments were run in a large athletic pool
(online videos [19]) that veriﬁed the following functions:
 multiple aquatic robot trajectory coordination,
 localization across large areas using multiple cameras,
Fig. 9: The docking geometry in a pre-docked position, and
docked.
?6 ?4 ?2 0 2 4 6
?3
?2
?1
0
1
2
3
x, m
y, m
Observed Boat Paths
Fig. 10: Sensed paths of boats crossing four camera regions.
A virtual obstacle (square at 0,0) is avoided.
 docking to free-ﬂoating and to land-anchored structures,
 assembly planning for brick-pattern structures, and
 variable structure compliance.
1) Coordinated Undocked Formations: In this experiment
a ﬂeet of 10 modules were controlled simultaneously to
traverse the pool, avoiding a virtual obstacle and forming
a disconnected circular formation on the far side. The
ﬂeet crossed through four camera regions. While crossing
the seam between two camera regions, misalignments in
the seam would cause noticeable control errors. However
concurrent control of all three DOF of 10 boats (30 DOF
total) was veriﬁed.
2) Floating Base: A ﬂoating base was automatically
formed by six modules. As an additional test, a Pelican
quadrotor successfully landed and took off from the island
via human control (Fig. 11). Some concerns included the
ability of the modules to station-keep in the presence of sub-
stantial downwash as well as intermittent loss of localization
as the UA V obscured visual markers. These issues did not
present a problem.
3) Bridge: To test the assembly planning and scale up
the number of modules, 33 modules formed a bridge from
Fig. 11: A quadrotor lands on an island formed of six
modules – the same goal shape shown in Fig. 5.
1239
Fig. 12: A bridge of 33 modules spans one corner of the
pool. An RC car successfully traverses the bridge.
one side of the pool to another (Fig. 12). Boat modules
start the autonomous assembly of the bridge and ﬁnish
the assembly of the bridge autonomously with partially
functioning modules used in-between. The solidity of the
bridge was then tested by driving a toy car over the bridge.
One complication comes from the docking of the ﬁnal
element so the bridge spans both sides. The bridge has two
land-anchored ends that are ramps to enable boarding and
departure from the bridge. Starting the bridge is straight
forward building from the end. However, ending the bridge
requires docking to two sites simultaneously. In the demon-
stration, the ramp was placed such that the elements aligned.
The other major issue is the surface characteristics on top
of the modules. By having the modules stiff when required,
the car had no problem crossing. However, when large gaps
formed, wheels would get stuck.
4) Active Stiffness Control: Varying the tightness of the
docking mechanism effectively changed the stiffness of a
conglomerate of 20 modules. Dynamically changing the
stiffness of all 20 modules occurs within one second. The
stiffness in roll rotation (modules bending away from one
another) due to the padding has been estimated using a linear
spring model to be a maximum of 2 kNm/rad. By loosening
the hook and loop mechanism, we can vary the effective
stiffness from this value down towards zero as the boats are
allowed more freedom to move apart.
VII. CONCLUSION
This paper presents the key hardware and software chal-
lenges in integrating large numbers of identical aquatic
vehicles and the ﬁrst demonstration of modular assembly on
water at this scale. The main contributions are the design of
the module/boat including the robust docking mechanism, the
software architecture that distributed the control and planning
computations across all the modules and a central com-
puter, and the algorithms for assembly planning, collision-
free trajectory planning, control of multiple moving boats
to enable safe navigation and docking. It is worth noting
that decomposing the assembly task into three subtasks,
(1) docking sequence assembly planning (2) collision-free
trajectory planning and (3) physical docking, was important
to controlling and coordinating tens of moving boats and
demonstrating efﬁcient assembly.
Future work includes improved docking. The demonstra-
tions often required the retries to succeed, making the system
less efﬁcient than desired. Maximizing the area of acceptance
for docking is important both for the small scale and full
scale system which is designed to handle sea state three.
A novel feature of the docking mechanism is the ability to
vary the stiffness of the connection between modules. This
will enhance the survivability of large structures under harsh
wave conditions. A simpliﬁed wave and structural strength
analysis technique for large numbers of modules is presented
to demonstrate this point.
Experiments with multiple full scale containers is a next
step in this development. Doing so in a low-cost manner is
likely to be an advantage over the earlier MOB approach.
ACKNOWLEDGMENTS
Thanks to Mark Del Giorno at General Dynamics, Shai Revzen,
and the following students: Steven Kum, Gabrielle Merritt, Uriah
Baalke, Josh Karges, Alex Sher, Max Effron, Matthew Lisle,
Rafael Pelles, Oliver Pacchiana, Christine VanKappeyenne, Chao
Liu, Chevonae Walcott, Kendall Turner, Dean Wilhelmi, Chai-
tanya Bhargava, Aditya Sreekumar, Kush Prasad, Matthew Pic-
coli, Sawyer Brooks, Justin Yim, Yash Mulgoankar, and Kurtis
Sensenig.
REFERENCES
[1] (2013, September) DARPA Tactically Expandable Maritime Platform
(TEMP). [Online]. Available: http://www.darpa.mil/Our Work/TTO/
Programs/Tactically Expandable Maritime Platform (TEMP).aspx
[2] F. Mondada, et al., “The cooperation of swarm-bots: Physical interac-
tions in collective robotics,” Robotics & Automation Magazine, IEEE,
vol. 12, no. 2, pp. 21–28, 2005.
[3] Z. Butler, et al., “Generic decentralized control for lattice-based
self-reconﬁgurable robots,” The International Journal of Robotics
Research, vol. 23, no. 9, pp. 919–937, 2004.
[4] W. J. Bender, B. M. Ayyub, and A. Blair, “Assessment of the
construction feasibility of the mobile offshore base,” in Int. Workshop
on Very Large Floating Structures (VLFS-99), University of Hawaii
at Manoa, Honolulu, HI, vol. 2, 1999, pp. 699–707.
[5] A. R. Girard, J. B. De Sousa, and J. K. Hedrick, “Dynamic positioning
concepts and strategies for the mobile offshore base,” in Intelligent
Transportation Sys., Proc. IEEE, 2001, pp. 1095–1101.
[6] J. Seo, M. Yim, and V . Kumar, “Assembly planning for planar
structures of a brick wall pattern with rectangular modular robots,” in
IEEE Intl. Conf. on Automation Sci. and Eng. (CASE), August 2013.
[7] (2013, August) Omap3530-based gumstix overo computer-on-module.
[Online]. Available: https://www.gumstix.com
[8] M. Quigley, et al., “ROS: an open-source robot operating system,” in
ICRA Workshop on Open Source Software, 2009.
[9] M. Turpin, N. Michael, and V . Kumar, “Computationally efﬁcient
trajectory planning and task assignment for large teams of unlabeled
robots,” in Proc. of the IEEE Int. Conf. on Robotics and Automation,
May 2013.
[10] E. Olson, “AprilTag: A robust and ﬂexible visual ﬁducial system,” in
Proceedings of the IEEE International Conference on Robotics and
Automation (ICRA). IEEE, May 2011, pp. 3400–3407.
[11] C. Feng and V . R. Kamat, “Plane registration leveraged by global
constraints for context-aware aec applications,” Computer-Aided Civil
and Infrastructure Engineering, vol. 28, no. 5, pp. 325–343, 2013.
[12] N. Marriott. (2013, April) tmux. [Online]. Available: http://tmux.
sourceforge.net
[13] A. Agarwal, M. Slee, and M. Kwiatkowski, “Thrift: Scalable cross-
language services implementation,” Facebook, Tech. Rep., 4 2007.
[14] K. Varda, “Protocol buffers: Google’s data interchange format,”
Google, Tech. Rep., 6 2008.
[15] M. Quigley, et al. (2013, September) ROS comm. [Online]. Available:
http://wiki.ros.org/ros comm
[16] N. Eckenstein and M. Yim, “The x-face: An improved planar pas-
sive mechanical connector for modular self-reconﬁgurable robots,” in
Intelligent Robots and Systems (IROS), Proc., 2012, pp. 3073–3078.
[17] J. Newman, Marine Hydrodynamics. The MIT Press, 1977.
[18] H. Riggs, R. Ertekin, and T. Mills, “Impact of stiffness on the response
of a multimodule mobile offshore base,” International Journal of
Offshore and Polar Engineering, vol. 9, no. 2, 1999.
[19] (2013, August) Tactically Expandable Maritime Platform -
Highlights. [Online]. Available: http://www.youtube.com/watch?v=
2OY3nBtGqVU
1240
