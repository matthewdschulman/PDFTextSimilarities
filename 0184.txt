Checking the cable conﬁguration of cable-driven parallel robots on a
trajectory
Jean-Pierre Merlet
1
Abstract—This paper addresses the concept of cable conﬁg-
uration of cable-driven parallel robots (CDPR). At a given pose
a cable conﬁguration describes the state of cables, i.e. under
tension or slack, and plays a major role for the cable tensions
and the platform positioning errors. Being given a CDPR with
non-elasticcablesandamodelforthecoilingsystemwedescribe
how the cable conﬁguration can be determined in a guaranteed
way for a desired trajectory of the platform. We show that if
the CDPR has more than 6 cables it is extremely unlikely that
more than 6 cables will be under tension simultaneously even
under perfect conditions. It appears that on a trajectory the
cable conﬁguration exhibits multiple changes, leading to large
variations in the cable tensions.
I. INTRODUCTION
Cable-driven parallel robot (CDPR) uses a cable coiling
mechanism to change the cable lengths for controlling the
poseoftheplatform.AlthoughthestudyofCDPRhasstarted
about 30 years ago, there is currently a renewal of interest
in this ﬁeld because several new possible applications have
emergede.g.largescalemaintenancestudiedintheEuropean
project Cablebot [1], rescue robot [2], [3] and transfer robot
for elderly people [4] to name a few. We are interested here
in CDPR that allows to control all the dof of the platform.
If the CDPR is suspended (ﬁgure 1) (i.e. the cables cannot
exert a downward force) then it must have at least 6 cables
otherwise if gravity is not used it must have at least 7 cables.
A1
A2 A3
A4
A5
A6 A7
A8
A1
A2
A3
A4
A5
A6
A7
B7
B3
B1
B2
B4
B5
B6
SCDPR
CDPR
Fig. 1. Cable driven parallel robots: on the left the suspended version. To
allow the control of the 6 dof of the platform the suspended version must
have at least 6 cables while the non-suspended version must have at least
7 cables.
Cables are attached on the platform at point B
i
while the
output point of the coiling mechanism is A
i
. Let l
i
be the
length of the cable between the coiling system and B
i
. The
lengthl
i
may be written asl
i
=a
i
+?
i
wherea
i
is a constant
length corresponding to the amount of cable between the
coiling system and A
i
and ?
i
is the cable length between
1
Jean-Pierre Merlet is with INRIA, COPRIN project-team, Sophia-
Antipolis, France Jean-Pierre.Merlet@inria.fr
A
i
,B
i
. In this paper we will assume that that there is no
sagging and no elasticity of the cables. If cable i is under
tension, then it exerts a forcef
i
on the platform such that
f
i
=?
A
i
B
i
?
i
?
i
(1)
where ?
i
is the positive tension in the cable. As a cable
cannot exert a pushing forcef
i
is 0 if the cable is not under
tension. Consider a CDPR with n cables and let ?
j
denotes
the tension in cable j while F will be the external wrench
applied on the platform with the torques applied around a
point C. The mechanical equilibrium condition are:
? ={?
j
> 0} if ||A
j
B
j
|| =?
j
F =J
?T
(X)? (2)
where J
?T
is the transpose of the pose dependent inverse
kinematic jacobian matrix of the robot, whose j-th column
is ((A
j
B
j
/?
j
CB
j
?A
j
B
j
/?
j
)).
A CDPR is usually called redundant if it has more cables
than the strict minimum to control the dof of the platform.
A clear interest of this redundancy is that additional cables,
if appropriately located, may drastically increase the size
of the workspace. But it is also claimed that redundancy
allows one to modify the tensions in the cables without
changing the pose of the platform. Hence several papers
describe algorithms to calculate a tension distribution that
satisfy some optimality condition [5], [6], [7], [8], [9], [10],
[11], [12], [13], [14]. However we are not convinced that
such schemes may really fulﬁll their objective. A ﬁrst reason
is that a cable coiling mechanism is a single input- single
output system (SISO) and hence can be controlled in force or
incablelengthbutnotinboth.Thereforeapurecabletension
control scheme cannot guarantee that the cable lengths will
not change so that the platform is kept at the same pose.
But another reason for the difﬁculty of implementing a
control scheme for managing tension distribution is that
discrete time controllers are used with the consequence that
it seems difﬁcult to ensure that the constraint ||A
j
B
j
|| =?
j
for having all cables under tension simultaneously is satisﬁed
at all time. Hence in spite of tension control some cables will
become slack. We will call a cable conﬁguration (CC) for a
given pose the set of cable numbers that are under tension
at this pose. and a n-cables conﬁguration is a CC with n
cables under tension.
The importance of conﬁguration changes has been il-
lustrated during an experiments with our 6 cables CDPR
MARIONET-CRANE (ﬁgure 2). This robot is a very large
scalemanipulator withaworkspace of 100m? 100m?50m,
can lift up to 2.5 tons and it is designed to be portable
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 1586
by a team of rescuer (its total weight, including the power
source, is 200 kg which is distributed in 20kg subparts). It is
intended to be used as a lifting crane during an emergency
(earthquake, road accidents). The task assigned to this robot
was to move a mannequin along an horizontal trajectory
with the mannequin being in vertically seated pose (top left
image). During the motion, although the cable lengths were
calculated to keep the mannequin posture, two cables have
suddenly become slack, which has led the platform in an
unstable pose (top right image) and then toa stable pose with
a ground-looking posture of the mannequin (bottom image)
that was not desired. Intuitively it must be understood that
the robot moves along different kinematic branches which
correspond to different solutions of the forward kinematics
with different set of cables under tension or a different pose.
When the cable lengths change the robot may move along
differentmanifoldsanditsposeatagiventimedependonthe
cable lengths and the history of the system. If two manifolds
cross, then the robot may continue moving on the manifold
it was in before the crossing or may move on the second
manifold, while only measuring the cable lengths does not
allow to detect this change. In our example the CDPR was
moving initially on a given kinematics branch with 6 cables
under tension, has crossed another branches with 4 cables
under tension, in which it was unstable, leading to a new
pose that lies on a branch with 6 cables under tension,
but different from the initial one, although no singularity
were encountered.. During the sequel of the motion the
mannequin has kept this ground looking posture, thereby
exhibiting a large orientation error. It must be emphasized
that conﬁguration change are extremely important because
they induce large positioning error and possibly drastic
changes in cable tensions. We aim at calculating exactly
Fig. 2. An experiment showing a change of cable conﬁguration leading to
a very large orientation error
what are the cable conﬁgurations over time when the robot
performs a trajectory
II. CALCULATING CABLE CONFIGURATIONS
The basic idea in this section is to develop a full model of
the system robot/controler/control laws and when the robot
moves along a trajectory to determine exactly the times at
which a change of conﬁguration will occur and the new
conﬁguration. Consequently a ﬁrst step is to establish a
model for the coiling mechanism and for the control.
A. Model of the coiling mechanism and of the control
We assume that the coiling mechanism velocity is a ﬁrst
order so that V = V
c
+ (V
0
? V
c
)e
?t/ta
, where V
c
is the
desired velocity, V
0
the actuator velocity at time t = 0 and
t
a
a constant that is motor dependent. Hence if?
1
,V
1
are the
cable length and the velocity of the actuator at time t = t
1
the amount of cable length change ?? at time t
1
+?t is:
?? =V
c
?t?(V
1
?V
c
)t
a
(e
?(t1+?t)/ta
+e
?t1/ta
) (3)
The controller is a loop with a sampling time of ?t
h
that
gets the current value of the cable length ?
m
(supposed to
be perfectly measured), computes what should be the value
?
c
of the cable length at the next sampling time and then
calculates a desired actuator velocity V
c
using a simple P
controller so that V
c
=K(?
c
??
m
), where K is a constant
gain. There is then an inner control loop with sampling time
?t
i
(with ?t
h
being a multiple of ?t
i
and ?t
i
< ?t
h
), that
control the motor velocity by using a P controller. For the
simulation this loop includes the calculation of the CDPR
state according to time.
B. Pose parametrization and constraints
We will call dominant cables at one pose the cables that
are under tension at this pose. The lengths of the dominant
cablesmustverify||A
j
B
j
|| =?
j
,whileforthenondominant
cables we should have ||A
j
B
j
|| < ?
j
. If ? is the tension of
the dominant cables the mechanical equilibrium constraint
is F = H? where H is a matrix whose columns are the
normalized Pl¨ ucker vectors of the dominant cables.
To parametrize the pose of the platform, supposed to
be non planar, of a robot with m cables we will use the
coordinates of four non coplanar B
i
points and we will
assume that these points are B
1
,B
2
,B
3
,B
4
. At a given pose
if these coordinates are known, then the coordinates of the
points B
5
,...,B
m
are obtained as:
OB
k
=l
1
OB
1
+l
2
OB
2
+l
3
OB
3
+l
4
OB
4
OC =n
1
OB
1
+n
2
OB
2
+n
3
OB
3
+n
4
OB
4
where the l
i
,n
i
are constants that can be determined before-
hand. Note that this parametrization (whose choice will be
motivated later on) allows us to calculateA
j
B
j
for all cables
and the Pl¨ ucker vectors of the dominant cables and hence
matrixH.Byusingtwelveunknownstoparametrizethepose
of the platform we are redundant and we have to introduce
6 additional constraints which are that the distances between
any pair of points in the set B
1
,B
2
,B
3
,B
4
are known:
||B
i
B
j
||
2
=d
2
ij
i,j ? [1,4], i6=j (4)
where d
ij
is the distance between the points B
i
,B
j
. For the
dominant cables we have:
||A
j
B
j
||
2
=?
2
j
(5)
1587
In summary for a CC with n cables under tension we have
12+n unknowns (the coordinates of the selected B
i
and
the n tensions) and 12 +n constraints (6 equations (4), n
equations (5) and the 6 statics equations (2)). Note that if we
have a 6-cables conﬁguration, then the system of geometrical
equations is square.
C. Study of geometrical conditions
We will assume that at certain time t the robot is in
a known 6-cables conﬁguration C
i
with the platform pose
X and with velocities V for the actuators and that there
is no singularity in the vicinity of X. We consider the 12
geometricalequations(4)and(5)forthedominantcablesand
the m?6 inequalities ?
j
> ||A
j
B
j
|| for the non dominant
cables during the time interval [t,t + ?t], where ?t is a
small time increment. Our objective is to determine if this
geometrical constraints will be veriﬁed for any time in the
time interval. Using the cable model (3) we are able to
determine a range [?
m
,?
M
] for each ? such that it includes
all the possible values of ? during the time interval.
A ﬁrst problem to solve is to determine if the equations (4)
and (5) always admit a single solution whatever the time is in
the time interval. For that purpose we use the Kantorovitch
theorem [15]
1
. We may calculate the Jacobian matrix of the
system atX, which is a constant matrix, and let A
0
be the
norm of its inverse ?
0
. We then consider the equation values
atX: for equations (4) these values are 0 while for (5) they
have interval values because of the interval nature of the ?.
TheequationvaluesatXaresummedupinanintervalvector
F and we deﬁne U = ?
0
F which is therefore an interval
vector. Using classical interval arithmetic we calculate the
norm of U and we denote by U the upper bound of this
norm. We then deﬁne B
0
as U/2 so that ||?
0
F|| ≤ 2B
0
.
The theorem also requires the value of the maximum of the
norm of the Hessian of the system in the ball centered atX
with radius 2B
0
. However in our case the equations are all
quadratic in the unknowns so that the Hessian is a constant
matrix with a constant norm H
c
(this property is the main
motivation for the chosen parametrization of the pose). If
l = 12 is the the number of equations in the system, then
Kantorovitch theorem states that if 2lA
0
B
0
H
c
≤ 1, then the
system admits a single solution, located in a ball centered
at X with radius 2B
0
and this solution can be found by
using the Newton-Raphson scheme, that is guaranteed to
converge toward the solution. In our case we note that the
value of 2lA
0
B
0
H
c
depends on time only through the value
ofB
0
,whichdecreaseif?tdecreases.Henceifthecondition
2lA
0
B
0
H
c
≤ 1isnotsatisﬁedforagiven?twemayalways
decrease ?t until this condition is fulﬁlled.
Assume now that the condition 2lA
0
B
0
H
c
≤ 1 is satisﬁed
forsome?t.Thisimpliesthatthesolutionofthegeometrical
equations for a given time lies inside the interval vector
[X?2B
0
,X+2B
0
]. This interval vector is used to determine
an interval evaluation for the B
i
coordinates of the non
dominant cables, which in turn allows us to calculate an
1
see www-sop.inria.fr/coprin/logiciels/ALIAS/ALIAS-C++/
interval evaluation [u
j
,v
j
] of ||A
j
B
j
||. Note that u
j
,v
j
will
converge toward ||A
j
B
j
(X)|| <?
j
when ?t converge to 0.
We then deﬁne a status for the conﬁguration C
i
over the
time interval:
• C
i
is geometrically feasible if 2lA
0
B
0
H
c
≤ 1 andv
j
<
?
j
for all non dominant cables
• C
i
is geometrically unfeasible if 2lA
0
B
0
H
c
≤ 1 and
there is a non dominant cable such that u
j
>?
j
• C
i
is geometrically uncertain if 2lA
0
B
0
H
c
> 1 or if
there is a non dominant cable such that u
j
<?
j
<v
j
If C
i
is geometrically unfeasible, then this conﬁguration
cannot hold over the time interval and a conﬁguration change
mustoccur.Ageometricallyuncertainconﬁgurationoccursif
?t is too large: as the conﬁguration is geometrically feasible
atX we are guaranteed to change the status of the conﬁgu-
ration from uncertain to feasible by decreasing ?t. Finally if
C
i
is geometrically feasible, then it may be maintained over
the time interval provided that the mechanical equilibrium is
maintained with positive tensions.
D. Study of the mechanical equilibrium
Let us assume that C
i
is geometrically feasible over a
given time interval, which implies that we have interval
values for the coordinates of the B
i
that allow us to cal-
culate an interval matrixH
i
for the matrixH. We are now
interested in the solution in ? of the linear interval system
F = H
i
?. The interval Gauss elimination method can be
used to determine ranges for ? that are guaranteed to include
all solutions of F =H? for all H in H
i
. However the H
matrix is poorly conditioned for interval arithmetic and it
is better to pre-condition the system. Let H
m
i
be the mid
matrix ofH
i
, i.e. the scalar matrix whose elements are the
mid-pointoftherangesinH
i
.Gausseliminationisthenused
on the system H
m
i
?1
F = H
m
i
?1
H
i
?. Note however that
the interval matrix H
m
i
?1
H
i
includes scalar matrices H
n
such thatH
m
i
H
n
has not the structure of a jacobian matrix
(i.e. its column are not Pl¨ ucker vectors) and thus may be
removedfromtheintervalmatrix.Wehaveusedthisproperty
to decrease the ranges of the elements of the interval matrix
but we cannot elaborate on this method for lack of space.
Note also that the interval Gauss elimination do not always
lead to a range for the ?: indeed the pivot method that is
used implies a division by an interval, an operation that is
not possible if this interval includes 0. However this situation
will not occur for a sufﬁciently small ?t.
Like for the geometrical equations we may confer a status
to the conﬁguration C
i
from the statics viewpoint:
• C
i
is statically feasible if the interval solutions ofF =
H? have all positive lower bound
• C
i
is statically unfeasible if there is an interval solution
of F =H? that has a negative upper bound
• C
i
is statically uncertain if the Gauss elimination
scheme cannot determine the solution or if there is an
interval solution of F =H? that has a negative lower
bound and a positive upper bound
As for the geometrical equations we are sure that a statically
uncertain conﬁguration will become feasible if ?t is sufﬁ-
1588
ciently small. We may now state the following theorem for
a conﬁguration C
i
over a given time interval:
Theorem: if C
i
is geometrically and statically feasible
over the time interval, then the CDPR will remain in this
conﬁguration over the time interval
Proof: assume that the CDPR may be in conﬁguration C
t
,
different from C
i
, at some time t
1
in the time interval. Let j
be a cable belonging toC
t
but not toC
i
. Hence asj does not
belong to C
i
we must have ||A
j
B
j
|| < ?
j
but as j belong
to C
t
we must have ||A
j
B
j
|| =?
j
, hence a contradiction.
E. Extension of geometrical and statical feasibility
The feasibility has been deﬁned for 6-cables conﬁguration
with the advantage that geometrical and statical feasibility
maybestudiedindependently.Butitmayoccurthattherobot
is in an-cables conﬁguration of the robot withn< 6. In that
case the system of geometrical equations is no more square.
On the other hand if we consider both the geometrical and
staticalequationswehavealwaysasquaresystemwith12+n
equations.Howeverhavingthestaticsequationsaspartofthe
system requires to have a look at the Jacobian and Hessian
matrices of these equations that play a role in Kantorovitch
theorem. Without going into details these matrices are no
more constant because of the statics equations but become
interval matrices. This does not prohibit their use except
that the calculation of the inverse jacobian may not be
possible because the interval for the pivots shall not include
0. Consequently an additional feasibility condition will be
the success of the calculation of this inverse ?
0
but basically
we can extend the feasibility concept to the case of any cable
conﬁguration, the geometrical and statical feasibility being
determined in a single step.
F. Conﬁguration change
Letusassumethatatagiventimettherobotisinaknown
cable conﬁguration C
i
at a poseX with known velocities of
the actuators. As we have seen previously we know that it
is always possible to ﬁnd a ?t such that conﬁguration C
i
is geometrically and statically feasible over the time interval
[t,t + ?t]. But this ?t may be very small and it may be
of interest to consider a larger ?t and to examine if a
conﬁguration change may occur in the time interval. Such
a change may occur in the following cases:
1) the length ?
j
one of the non dominant cables of C
i
satisﬁes ||A
j
B
j
|| = ?
j
at some time in the time
interval (i.e. the robot gains one dominant cable)
2) the length ?
j
one of the dominant cables become such
that ||A
j
B
j
|| < ?
j
at some time in the time interval
(i.e. the robot loses one dominant cable)
3) the cable tension of one dominant cable ofC
i
becomes
0 (i.e. the robot loses one dominant cable)
We will now present necessary conditions for conﬁguration
change and sufﬁcient one will be given in a later section.
G. Finding possible conﬁguration changes
We examine if the platform at conﬁguration C
i
at time t
may move to another conﬁguration in the time interval [t,t+
?t] by gaining a dominant cable j. A necessary condition
for that is that ||A
j
B
j
|| = ?
j
at some time t
1
included in
the time interval.
For taking the time into account we substitute the ?’s by
their time functions (3). In the general case if C
i
is a n-
cables conﬁguration with n< 6 we are looking at a time t
1
wheretheplatformmaymovetoan+1-cablesconﬁguration.
Notethatbycontinuitythetensioninthenewdominantcable
shouldbe0atthetimet
1
.Weaddtheequation||A
j
B
j
|| =?
j
of the non dominant cable to the 12+n equations valid for
C
i
and we add the time as unknown. Consequently we get a
square systemD of 13+n equations and we are looking for
a method that allow us to determine if there is no solution to
D in the time interval or to determine in a guaranteed way
its solution(s). For that purpose we must emphasize that the
use of interval analysis is a key element because it’s the
only method that allows one to manage numerical round-
off errors, detect that a given problem cannot be solved
using the usual computer accuracy and provide certiﬁed
solutions: hence we use extensively our interval analysis
library ALIAS [16]. Certiﬁcation of a solution is obtained
by using Kantorovitch theorem but it must be noted that the
Hessian matrix of D is somewhat complex because of the
substitution of the ?’s by equations (3). As for the bound for
the unknowns, time has to lie in the time interval and as ?t
has a small value we may assume that the solution(s) in the
B
i
coordinates are close toX: hence we choose as intervals
for these unknowns an interval centered at X with a wide
amplitude. If a solution is found, then we check that at time
t
1
we have ||A
k
B
k
|| < ?
k
for all the non dominant cables
of C
i
except cable j. This procedure is repeated for all non
dominant cable(s) ofC
i
and the eventual solutions are stored
in a listT ordered by increasing time t
1
. However checking
the geometrical constraint is not sufﬁcient: the platform may
move at t
1
in a pose such that ||A
j
B
j
|| =?
j
with a tension
?
j
= 0 but immediately afterward to another one such that
||A
j
B
j
||<?
j
.
A change of conﬁguration may also occur if the platform
looses a dominant cable j. A necessary condition for this
to happen is that the tension in this cable become 0 at
a time t
1
lying in the time interval, while we still have
||A
j
B
j
|| = ?
j
. In that case we set ?
j
= 0 and we have
still the 12 + n constraint equations where the ?’s are
substituted by their time functions (3). The unknowns are the
12 coordinates of the B
i
, the n?1 dominant cable tensions
and the time. Therefore we end up with a square system
of 12 +n equations, that may be solved exactly using the
ALIAS procedure. If a solution is found it is necessary to
check that at this solution ||A
k
B
k
|| < ?
k
for all the non
dominant cables of C
i
. This procedure is repeated for all
dominant cables ofC
i
and the eventual solution(s) are added
to the listT , which is reordered by increasing time. However
checking the tension is not sufﬁcient: indeed the tension of
the dominant cable j may decrease until it reaches 0 at time
t
1
but may increase after this time.
We may also imagine that the robot gains or looses more
than one dominant cable at the same time. If we apply
1589
the method described above we will get an overdetermined
system of equations. The ALIAS solving procedure may
determine that it has no solution but if there are solution(s),
then the procedure cannot certify them and will rise a non-
certiﬁcation ﬂag (however note that by solving for each cable
the time solutions will be very close to each other). .
In a similar way we have considered up to now only the
case where the robot may gain a dominant cable with 6 as
a limit to the number of dominant cables. The question that
arises is: can we obtain a conﬁguration with 7 (or more)
cables under tension ? Let us assume that at time t the robot
is in a 6-cables conﬁguration. A necessary condition for the
robotstomovestoan-cablesconﬁgurationwithn≥ 7isthat
the geometrical conditions are satisﬁed for a time interval
included in the interval [t,t+?t]. In terms of equations this
amounts to that the system of 6+n geometrical constraints
in the 13 unknowns (the 12 coordinates of the B
i
’s and the
time) should admit a non 0-dimensional solution variety. In
that case the ALIAS solving procedure cannot certify the
solutions and will rise the non-certiﬁed ﬂag. A time interval
for which the non-certiﬁed ﬂag of ALIAS has been raised
will be called an overconstrained time interval.
H. Finding the ﬁrst conﬁguration change
If no possible conﬁguration change has been determined,
then the conﬁguration C
i
at time t will be preserved in the
timeinterval[t,t+?t].Assumenowthatwehaveestablished
a time-ordered listT of possible conﬁguration changes with
l elements. We will denote by t
i
the time stamp of the i-th
event in the list and we deﬁne t
0
=t and t
l+1
=t+?t.
A ﬁrst lemma is that if a cable k is non dominant at
time t
i
, then it will stay non dominant in the time interval
[t
i
,t
i+1
[. This results from the fact that the list records all
events ||A
k
B
k
|| = ?
k
and hence we are sure that no such
event has occurred in [t
i
,t
i+1
[. Similarly if a cable is non
dominant at time t
i+1
, then it is also non dominant in the
time interval ]t
i
,t
i+1
]
In the previous section we have seen necessary conditions
for the platform to gain or loose dominant cables at a given
time t
i
. They were not sufﬁcient because they describe a
status change that may exist only at this time and will vanish
immediately after it. But if such change lasts the status
will be preserved in the time interval [t
i
,t
i+1
[. Hence a
conﬁgurationchangefromC
i
toC
t
attimet
i
maybeveriﬁed
if at any time in [t
i
,t
i+1
[ conﬁguration C
t
is geometrically
andstaticallyfeasible.Weselectatimet
?
closeto,butlarger
thant
i
andtestthefeasibilityatthistime.Ifthistestsucceeds
the conﬁguration C
t
will be called feasible.
As consequence is that a conﬁguration change in the time
interval can be detected by looking at the ﬁrst event in T
that leads to a feasible conﬁguration different from C
i
.
I. Determining cable conﬁguration over a trajectory
We assume that at the start of the trajectory the platform
is in a given CC C
i
, at a known pose and that the actuator
velocities are 0.
At time t = 0 the top level loop calculates the new
desired pose and actuator velocities V
c
, which is executed
by the inner loop. We choose as initial value for ?t the
inner loop sampling time ?t
i
and we check if the CC C
i
is geometrically and statically feasible in the time interval
[0,?t] by using the methods of sections II-C, II-D, II-E. If
this is the case the robot is in the CC C
i
at time ?t and
we go on by verifying if C
i
is valid on the time interval
[?t,2?t]. If C
i
is uncertain in [0,?t] we divide ?t by 2:
• if ?t is lower than a given threshold ? we check
if a conﬁguration change may occur in the current
time interval by using the results of section II-H. If
a conﬁguration change is detected we store the time of
the conﬁguration change and set the time tot
?
. We then
set ?t to the smallest positive value ofk?t
i
?t
?
where
k is an integer and we start again. Note that in that case
we check if the time interval is overconstrained: if this
is the case the algorithm returns a failure ﬂag,
• otherwise we start again the feasibility check ofC
i
over
the new time interval.
When the time reaches k?t
i
where k is an integer we go
back to the inner loop which will update the command for
the actuator velocities, unless k?t
i
= l?t
h
, where l is an
integer, in which case we go back to the top level loop.
We have implemented this algorithm in the special case of
a CDPR with 8 cables. This was a difﬁcult task because in
many cases computer accuracy is barely enough to guarantee
the correctness of the calculation. The Kantorovitch test is
usually not sensitive to numerical round-off errors and an
initial approximation of the solution may be obtained by
using the standard ALIAS C++ procedure, but not with
the necessary accuracy. In that case we use a speciﬁc fast
version of the Newton algorithm implemented in Maple,
that takes as input the approximation of the system solution
as calculated by the solving procedure of ALIAS C++
and returns another approximation with n digits that are
guaranteed to be correct, where n is an arbitrary integer
(ﬁxed to 100 in our case). It must be said that the algorithm
is computer intensive and the simulation of a full trajectory
may require several hours.
III. EXAMPLE
We consider the large scale robot developed by LIRMM
and Tecnalia as part of the ANR project Cogiro [17] which
is a CDPR with 8 cables and we are using meter as length
units.Weuseastesttrajectoryacirclecenteredroughlyatthe
middle of the workspace (0,0,2) with radius 1 meter, while
the platform have a constant orientation. The trajectory has
to be performed in 20 seconds. Preliminary tests done by
LIRMM for this trajectory have shown that there were large
changes in the motor torques, thereby leading us to believe
that conﬁguration changes were occurring. We start at the
pose (1,0,2) with the CC 345678 while we add 5 cm to the
length of cables 1 and 2 obtained for this pose in order to
ensure that they are slack.
Our algorithm has indeed conﬁrmed that several conﬁgu-
ration changes were occurring during the trajectory. This is
1590
illustrated by ﬁgure 3 that shows the cables tensions during
the ﬁrst 0.2 second of the trajectory and by ﬁgure 4 which
shows the tension of cable 1. A short time history of the
0.08 0.12 0.16 0.20
0
0.2
0.4
0.6
0.8
(N)
time (s)
?4
?6
?8
?3
?1
?5
?2
?7
?8
?7
?3
?4
?5
?6
Fig. 3. Cable tensions during the ﬁrst 0.2s of the trajectory
0.06 0.10 0.14 0.18 0.22
0
0.2
0.4
0.6
0.7
(N)
time (s)
Fig. 4. Tension of cable 1 during the ﬁrst 0.2s of the trajectory. This cable
switches between slack and under tension states.
conﬁguration changes is presented in the following table:
Time(s) 0 0.0936 0.0952 0.1010
Conﬁguration 345678 235678 125678 145678
Time (s) 0.1028 0.1116 0.1137 0.122
Conﬁguration 345678 235678 125678 145678
On this particular trajectory there was never an overcon-
strained time interval and all CC’s were 6-cables conﬁgu-
rations. However, as shown in the ﬁgures, a conﬁguration
change leads to major changes in the cable tensions.
IV. CONCLUSIONS
Conﬁguration change are very important for CDPR has
they lead to major changes in the cable tensions and possible
control errors. In this paper we have considered a perfect
CDPR with perfect measurements and non elastic cables.
Even under that condition we have shown that unavoidable
conﬁguration changes will occur and that computing them
is a demanding task. This raises several issues: can we
determine the current CC in a robust way by adding sensors
and what kind of sensors (cable tension sensors does not
look like a promising way) ? are cable tension management
algorithm really effective or shall we adopt another control
strategy (e.g. imposing voluntary to cables to be slack to
end up in a well deﬁned cable conﬁguration) ? for 6 dof
CDPR n-cables conﬁguration with n < 6 implies a loss
of control: how can we plan a recovery motion so that the
CDPR regains as quickly as possible it’s 6 dof ? Similar
issues have to be addressed if we have elastic cables, the
major one being if conﬁguration change may occur. In spite
of all these important issues CDPR prototypes are working
surprisingly well but the the above issues will most probably
give a lot of work to the community.
ACKNOWLEDGMENT
This research has received partial funding from the Euro-
pean Community’s Seventh Framework Program under grant
agreement NMP2-SL-2011-285404 (CABLEBOT).
REFERENCES
[1] A. Pott et al., “IPAnema: a family of cable-driven parallel robots
for industrial applications,” in 1st Int. Conf. on cable-driven parallel
robots, Stuttgart, September, 3-4, 2012, pp. 119–134.
[2] S. Tadokoro et al., “A portable parallel manipulator for search and
rescue at large-scale urban earthquakes and an identiﬁcation algorithm
for the installation in unstructured environments,” in IEEE Int. Conf.
on Intelligent Robots and Systems (IROS), Kyongju, October, 17-21,
1999, pp. 1222–1227.
[3] J.-P. Merlet and D. Daney, “A portable, modular parallel wire crane for
rescue operations,” in IEEE Int. Conf. on Robotics and Automation,
Anchorage, May, 3-8, 2010, pp. 2834–2839.
[4] J.-P. Merlet, “MARIONET, a family of modular wire-driven parallel
robots,” in ARK, Piran, June 28- July 1, 2010, pp. 53–62.
[5] M. Arsenault, “Optimization of the prestress stable wrench closure
workspace of planar parallel three-degree-of-freedom cable-driven
mechanisms with four cables,” in IEEE Int. Conf. on Robotics and
Automation, Anchorage, May, 3-8, 2010, pp. 1182–1187.
[6] Y. Bedoustani and H. Taghirad, “Iterative-analytic redundancy res-
olution scheme for a cable-driven redundant parallel manipulator,”
in IEEE/ASME Int. Conf. on Advanced Intelligent Mechatronics,
Montr´ eal, July, 6-9, 2010.
[7] T. Bruckman et al., Parallel manipulators, New Developments.
ITECH, April 2008, ch. Wire robot part I, kinematics, analysis and
design, pp. 109–132.
[8] M. Hassan and A. Khajepour, “Minimum-norm solution for the
actuator forces in cable-based parallel manipulators based on convex
optimization,” in IEEE Int. Conf. on Robotics and Automation, Roma,
April, 10-14, 2007, pp. 1498–1503.
[9] L. Mikelsons et al., “A real-time capable force calculation algorithm
for redundant tendon-based parallel manipulators,” in IEEE ICRA ,
Pasadena, May, 19-23, 2008, pp. 3869–3874.
[10] A.Pott,T.Bruckmann,andL.Mikelsons,“Closed-formforcedistribu-
tion for parallel wire robots,” in Computational Kinematics, Duisburg,
May, 6-8, 2009, pp. 25–34.
[11] R. Roberts, T. Graham, and T. Lippit, “On the inverse kinematics,
statics and fault tolerance of cable-suspended robots,” J. of Robotic
Systems, vol. 15, no. 10, pp. 581–597, 1998.
[12] W.-J. Shiang, D. Cannon, and J. Gorman, “Optimal force distribution
applied to a robotic crane with ﬂexible cables,” in IEEE ICRA , San
Francisco, April, 24-28, 2000, pp. 1948–1954.
[13] H. Taghirad and Y. Bedoustani, “An analytic-iterative redundancy
resolution scheme for cable-driven redundant parallel manipulator,”
IEEE Trans. on Robotics, vol. 27, no. 6, pp. 670–676, December
2011.
[14] R. Verhoeven and M. Miller, “Tension distribution in tendon-based
Stewart platform,” in ARK, Caldes de Malavalla, June 29- July 2,
2002, pp. 117–124.
[15] R.Tapia, “TheKantorovitch theorem for Newton’s method,” American
Mathematic Monthly, vol. 78, no. 1.ea, pp. 389–392, 1971.
[16] J.-P. Merlet, “ALIAS: an interval analysis based library for solving
and analyzing system of equations,” in SEA, Toulouse, June, 14-16,
2000.
[17] M. Gouttefarde et al., “Simpliﬁed static analysis of large-dimension
parallel cable-driven robots,” in IEEE Int. Conf. on Robotics and
Automation, Saint Paul, May, 14-18, 2012, pp. 2299–2305.
1591
