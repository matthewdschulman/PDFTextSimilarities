Distributed Robotic Sampling of Non-homogeneous Spatio-
Temporal Fields via Recursive Geometric Sub-division
Young-Ho Kim and Dylan A. Shell
Abstract— Environmental monitoring, an important appli-
cation for robots, has begun to be addressed recently with
linear least squares regression techniques because they estimate
the values of measured attributes and their uncertainty. But
several challenges remain when performing adaptive sampling
in a communication-constrained distributed multi-robot setting.
When the attributes of interest evolve over time (as is natural for
many environments) any non-homogeneous spatial variability
may necessitate continual re-modeling of the ﬁeld dynamics
and/or re-sampling of the ﬁeld. This raises questions about
the robots’ division of labor and workload balance that can
be difﬁcult to address when sample information is not stored
centrally. This paper tackles these coordination problems ef-
ﬁciently by introducing a sub-division-based modeling tech-
nique appropriate for distributed decision-making. We augment
Ordinary Kriging to enable representation of a ﬁeld’s (poten-
tially non-homogeneous) evolution through Bayes ﬁltering that
characterize the underlying dynamics. This approach not only
enables adaptive path planning in the ﬁeld, but the sub-divided
areas lead to a straightforward formulation of the optimal
workload distribution through modiﬁcation of an approximate
graph partitioning algorithm. Using a simulated multi-robot
sampling scenario, we demonstrate and validate the approach.
The experiments show good performance in terms of cross-
validation using real values and illustrate how hotspots are
identiﬁed and modeled, in turn affecting the division of labor.
I. INTRODUCTION
Environmental monitoring with robots encompasses a
wide range of important applications [1], [2]; for example,
a large-scale lake monitoring effort may help to detect
contamination and help ensure the safety of the water.
Recent research has made signiﬁcant progress in predicting,
monitoring, and tracking large scalar ﬁelds; including exper-
imental work in aquatic, terrestrial, and subsoil settings [3]–
[5]. The underlying challenge addressed by such systems
stems from the measured data being sparse compared to
the large spatial areas/volumes of interest. Although these
problems are a natural ﬁt for multi-robot systems, models
that can scale to large ﬁelds, while being sufﬁciently rich
to capture aspects of temporal variability and avoiding the
proliferation of tuning parameters, give inadequate attention
to practical considerations needed for distributed planning
and decision-making.
In the context of multi-robot adaptive sampling, this paper
considers two problems: (i) how does one model a non-
homogeneous time-varying ﬁeld efﬁciently? (ii) how does
one distribute the robots’ workloads (since a changing ﬁeld
may require non-homogeneous sample densities)? The ma-
jority of research, including recent work (e.g., [6]), focuses
on the ﬁrst problem in isolation. In this paper, we consider
Young-Ho Kim and Dylan A. Shell are with Department of Computer
Science and Engineering, Texas A&M University, College Station, TX
77843, USA.fyhkim, dshellg@cse.tamu.edu
that an appropriate answer to ﬁrst problem must be consid-
ered in terms of the second problem and its context. The two
are directly related because complex, dynamic ﬁelds beﬁt
multiple robots, each making autonomous decisions in an
online fashion.
This paper represents temporal dynamics as uncertainty
that is accrued with time. The rate of growth of this uncer-
tainty is estimated, simplifying the covariance (or variogram)
model, and reducing the complexity needed to treat the
relationship between space and time. This is a pessimistic
view born of the observation that treating data as out of date
is usually more practical than ﬁtting high-order non-linear
models, especially given comparatively few samples. The
method we propose incorporates a Bayesian ﬁlter to track
this rate of growth of the ﬁeld.
Non-homogeneity is captured by repeatedly dividing the
ﬁeld representation in a recursive manner, while maintaining
the continuity of the ﬁeld estimate (although, potentially
sacriﬁcing it in the uncertainty estimate). These sub-divided
regions become units for assigning sampling tasks to each of
the robots so as to balance the total workload. The division
operation may cause the transfer of a region from one robot
to another in its local vicinity; only summary information
ever need be transferred between robots.
Speciﬁcally, the work contributes:
 An efﬁcient recursive geometric sub-division of the ﬁeld
to balance and distribute the multi-robot workload.
 A simple uniﬁed Ordinary Kriging formulation that explic-
itly integrates a time-based relationship into the interpola-
tor’s uncertainty for ﬁelds undergoing temporal evolution.
 A novel probabilistic ﬁltering to update the environmental
model to estimate non-homogeneous ﬁeld dynamics.
II. RELATED WORK
Linear least-squares estimation methods have been suc-
cessfully employed in robotics for spatial interpolation and
regional sampling. By way of recent examples, we mention
work of Singh et al. [7] in the Gaussian Process Regression
(GPR) framework, and Zhu et al. [8] via Kriging interpola-
tion. Both use equivalent minimum error-variance estimation
techniques that permit measured data to be interpolated in
a way that takes into account a statistical description of a
spatial variogram or covariance.
Employing these techniques to the model both spatial and
temporal variability is a classical problem [9]. Singh et al. [7]
used variations of these models with either stationary or non-
stationary, and separable or non-separable spatial temporal
covariance functions. However, these have many parameters,
which are difﬁcult to provide estimates (or even priors) for
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 557
and may need to adapt over time. Ultimately, the changing
ﬁeld is likely to be spatially non-homogeneous.
Several researchers are working on adaptive path planning
in dynamic ﬁelds. Their solutions, however, involve a given
(and ﬁxed) covariance, augmented with other adhoc models.
For example, Williams and Sukhatme [2] model the spatial
dependency but add a plume-like process to generate a path
that tracks the gradient. Recently, Smith N. et al. [1] employ
an ocean phenomena forecast model.
Non-homogeneous temporal variability was recently tack-
led by [6], which is the closest work to the present paper.
However, in contrast to the preceding work, our method
decouples the spatial structure (captured via a purely spatial
variogram) from temporal structure, where parameters model
the latter change at a different time-scale to the former.
This simpliﬁed representation facilitates efﬁcient multi-robot
communication. This is important because distributed multi-
robot systems are a natural ﬁt to adaptive sampling problems.
We emphasize that our approach computes paths online
on the basis of newly observed variability (in contrast to
[10]). Also, the workload calculation only requires sharing
of a local model of the neighborhood’s dynamics. This
reduces communication overhead compared with recent work
in decentralized active sampling with a broadcast model [11].
III. PRELIMINARIES & PROPOSED ESTIMATOR
In this section, we brieﬂy describe Kriging [9] as a prelim-
inary step, and then we present the proposed estimator for
time varying scalar ﬁelds. Let R
2
represent the spatial
domain of interest, and let TR
+
represent time.
A. Ordinary kriging estimator
We use the Ordinary Kriging (OK) estimator [9] to make
inferences on an unobserved value of the random process
Z

(x
0
), wherex
0
is an unknown spatial location andx
0
2.
The OK estimator makes use of samples, Z(x
i
), which are
observed values at known spatial locationsx
i
2,i2 [1;n],
with a total of n observations. The estimate of Z

(x
0
) is
obtained from 
i
and n samples of Z(x
i
) with
P
i

i
= 1
as such [9]:
Z

(x
0
) =
n
X
i=1

i
Z(x
i
);  =A
 1
b
A =
0
B
@
(x1;x1)(x1;xn)1
.
.
.
.
.
.
.
.
.
.
.
.
(xn;x1)(xn;xn)1
1  1 0
1
C
A; b =
0
B
@
(x1;x0)
.
.
.
(xn;x0)
1
1
C
A:
(1)
The spatio-temporal semi-variogram function  captures
the strength of spatial temporal relationships that represents
the statistical effect of (stationary) relationships in space
and time. However, the sorts of environmental attributes we
wish to sample may evolve differently in different locations
over time. Fixed variograms are inadequate to treat non-
homogeneous temporal variability. The Kriging Variance
(KV) 
2
(x
0
) represents the prediction uncertainty. Z

(x
0
)
and 
2
(x
0
) give the spatial prediction of unobserved values
of the random process without considering either sensing
noise or position uncertainty [9]. Our former work [5] shows
(a) The robot maintains several temporal models each of which is
weighted and ultimately fused. Left: The robot traverses the ﬁeld and
makes measurements at different times. Right: A prediction from the
ﬁeld ( with varianceKV
p
) is used to update weights via Bayes’ rule
and new observation (labeled Truth Sampling).
(b) Illustration of differently weighted models of temporal evolution.
The increasing size of a circle over time shows the degree of temporal
variability of each 
p
, and how this is captured in the histogram of
~ , where the X-axis are scales ’s and the Y-axis are weights !’s.
Fields may be split or merged. The propagated rates (the histograms)
are different in each region.
(c) Workload balancing in the multi-robot system via approximate graph
partitioning. Left: Initially the robots have evenly separated regions. The
ﬁeld is updated as above in (a). Middle: Each robot constructs the as-
sociated sub-division graph. Right: An approximate algorithm facilitates
the movement regions between robots to balance the total workload.
Fig. 1: Overview of the proposed approach. Robots represent
temporal variability in the ﬁeld as a form of uncertainty. See Sec. IV.
the explicitly separated sensing error from the variogram that
was ignored before.
B. A measurement noise interpretation and estimation
To deal and simplify with spatial temporal ﬁelds, we model
the passage of time as increasing error in the estimated
values. A sample taken a long time ago is treated as if
it involved signiﬁcant measurement error by building on
our earlier work in [5]. We add a function of time to
the measurement error in order to represent the effect of
changes in the ﬁeld at the sample location that may have
occurred since the measurement was made. The KV is used
as an indication for the potential usefulness of sampling
at a particular location. When time is incorporated in our
proposed approach, it affords a natural way to include data
staleness as part of that utility computation.
The simplicity of the method comes from the fact that
Gaussian noise as a measurement error, is additive in the OK.
The resultant variogram is  = 
Y
+ (
2
i
+
2
j
)=2, where

Y
is the basic variogram. Since most robotics work employs
558
formulations lacking such a treatment (cf. [7]), the derivation
appears in the on-line supplemental material [12]. This shows
a modiﬁed OK framework with different measurement errors.
Let t
i
and t
j
be the time elapsed since measuring
at x
i
and x
j
, respectively, where x
i
, x
j
2 . We sug-
gest a propagated linear function of time, N(0;~ t
i
) and
N(0;~ t
j
), where ~  is scaling vector parameters. A set
of values (~ ;~ !) is [(
1
;:::;
P
); (!
1
;:::;!
P
)], p2 [1;P ],
where
p
are temporal scale values,!
p
are the (normalized)
weights, and P is the number of the bins. We estimate
~  by on-line using a probabilistic method: a Bayesian
ﬁlter [13] is maintained for each scale parameter. It is natural
to visualize !
p
(
P
p=[1;P]
!
p
= 1) as vertical lines in a
histogram for each 
p
. Simply looking at this histogram
allows one to interpret the temporal behavior of a region:
when comparatively large 
p
has signiﬁcant probability !
p
then the ﬁeld is ﬂuctuating signiﬁcantly over time. Detailed
derivations are in [12].
Let
^
G(x;t) be a function that represents the algo-
rithm’s output such that
^
G : (~ ;~ !) ! R, where
^
G
is
P
p=[1;P]

p
!
p
for . Then, we can derive one inte-
gratedA
ij
=
P
p=[1;P]
!
p
A
p
ij
andb
i0
=
P
p=[1;P]
!
p
b
p
i0
. We
deﬁne the modiﬁed OK for the weighted temporal evolution
model, which gives one integrated KV (denoted KV

):
Aij =
Y
(xi;xj ) +
1
2
^
G(ti + tj )
bi0 =
Y
(xi;x0) +
^
Gti;
(2)
where A
ij
2A, b
i0
2b, and i;j2 [1;n].
This yields the expected value of the evolving ﬁeld by
aggregating each
p
distribution with weight!
p
, and (~ ;~ !)
describes the scale of the temporal evolution, modelled as a
linear change but with unknown drift.
IV. DISTRIBUTED ADAPTIVE SAMPLING
An overview of our approach is explained visually in
Fig. 1. There are two important steps: the ﬁrst step is to
model the temporal evolution of the scalar ﬁeld and to plan
an adaptive path, as shown in Figs. 1(a) and 1(b) explained
in Secs. IV-A and IV-B, respectively. the second step is to
distribute the sampling to multiple robots and to balance
workloads as illustrated in Fig. 1(c) explained in Sec. IV-C.
A. Estimation of adaptive ﬁeld dynamics
This section presents an approach for estimating the
temporal evolution in Fig. 1(a). We can compute a predic-
tion Z

(x
0
), and the variance KV
p
with regard to each
probabilistic model p. Then, the temporal variation of the
ﬁeld can be updated by P (!
p
t
j!
p
t 1
;
~
Z
t 1
;Z
t
), where
~
Z
t 1
is a past observation set [Z(x
1
);:::Z(x
n
)] and Z
t
is the
measurement Z(x
0
) at time t, and  is the normalization
constant.
Line 4 of Alg. 1 represents a prediction step as a hypothet-
ical probability distribution at time t based on (~ 
t 1
;~ !
t 1
)
is generated. This shows the update step and then Line 5 in
Alg. 1 represents the Bayes ﬁlter posterior. Finally, we have
a distribution, (~ 
t
;~ !
t
).
B. Adaptive path planning
Our path planning strategy consists of three parts: (1) sep-
aration of the regions, (2) generating queries (a set of
Algorithm 1 The FIELD DYNAMICS Filter
1: INPUT: at time t: ﬁeld dynamics (~ 
t 1
;~ !
t 1
), past observation set
~
Z
t 1
, and new measurement Zt .
2: OUTPUT: !
p
t
;8p.
3: for p = 1 to P do
4: (Z

t
;KV
p
t
) = modiﬁed OK(
~
Z
t 1
;
p
t 1
;!
p
t 1
)
5: !
p
t
= P(ZtjZ

t
;KV
p
t
)!
p
t 1
6: end for
potential solutions) in continuous space, and (3) maximizing
a utility function to choose a solution. To better represent
temporal variability, the region  is subdivided by recur-
sively decomposing the region into four equal quadrants,
where
S
4
j=1

ij
= 
i
(we simply assume four even sub-
regions, which facilitate the implementation by a quad-
tree). As we subdivide the regions recursively, we have
updated K non-overlapping regions 
i
, where i 2 [1,K].
Therefore,
S
K
i=1

i
= , and 
i
T

j
= ;, i 6= j; and
i;j 2 [1,K]. Each 
i
has the individual rate of temporal
change
^
G
i
. Let Z
t
be a measurement at x
0
at time t,
which updates a temporal evolution model in Section IV-
A. Thereafter, if x
0
2 
i
, we can separate or merge
regions based on the expected value of temporal change
difference between
^
G
i
and
^
G
i1
,
^
G
i2
,
^
G
i3
,
^
G
i4
where
S
4
j=1

ij
= 
i
. Based on this notation and deﬁnition, we
ﬁnd the maximum difference of the change rate of the spatial
ﬁeld and then subdivide the region so that our knowledge for
each region is maximized. M
cc
is the Maximizing Cross-
Correlation (differentiation) between sub-regions:
M
i
cc
max
b=[1;4]
(
^
G
i
;
^
G
ib
); 8i: (3)
This determines that the
i
region can be separated into four
sub-regions 
i1
, 
i2
, 
i3
, and 
i4
, or maintained within a
current region with regard to a new observation.
Next, we need the robot’s next goal positionx
0
at timet.
First, We select locationx
0
from a set of samples [x
1
;:::;x
Q
],
whereQ is the number of potential locations. To generate the
query set in the continuous space, the idea is to distribute the
number of queries based on the importance of each region.
Since
^
G
i
is the expected value of the rate of change in 
i
,
we deﬁne the importance of the region
i
to be proportional
to the area sizej
i
j
^
G
i
. Randomly selected query locations
are produced in subregions in Fig. 4. This implicitly captures
the notion of hotspot sampling.
Finally, we pick the next goal position as the one that
maximizes the utility function from the generated queriesx
q
,
where q2 [1;Q]. Ideally, the utility represents how much
each query minimizes
R
KV

, where r is the current robot
position and x
q
is an element of a query set. This is
approximated as a discrete space, yielding:
U(r;xq )
q=[1;Q]
=
X
i=[1;Q];i6=q
(KV

(r;xij(~ ;~ !)
t 1
;
~
Zt 1)
 KV

(r;xijxq; (~ ;~ !)
t 1
;
~
Zt 1)):
(4)
Alg. 2 details adaptive path planning for this robot.
Lines 4 to 12 in Alg. 2 separates or merges the ﬁelds by
comparing M
k
cc
and the threshold . The number of ﬁelds
can be increased and decreased when we split or merge the
559
Algorithm 2 The ADAPTIVE PATH PLANNER
1: INPUT: (~ t;~ !t)
k
;8k, r, a split condition  and a total number of
queries Q.
2: OUTPUT: x
0
and 
0
.
3: 
0
=
^
G
0
= NULL
4: for k = 1 to K do
5: if M
k
cc
>  then
6: 
0
= 
0
+ [
k1
;
k2
;
k3
;
k4
]
7:
^
G
0
=
^
G
0
+ [
^
G
k1
;
^
G
k2
;
^
G
k3
;
^
G
k4
]
8: else
9: 
0
= 
0
+ [
k
]
10:
^
G
0
=
^
G
0
+ [
^
G
k
]
11: end if
12: end for
13: factor=
P
K
k=1
j
0
k
j
^
G
0
k
14: for k = 1 to K do
15: N
k
= Qj
0
k
j
^
G
0
k
 factor
16: end for
17: Generate random queries based on N
k
at 
0
k
;8k
18: for q = 1 to Q do
19: Uq =U(r;xq)
20: end for
21: return x
0
and 
0
ﬁelds. Lines 13 through 17 in Alg. 2 allocate the number of
queries in each ﬁeld based on the importance of each ﬁeld.
In line 19 of Alg. 2, we ﬁnd a potential goal position that
maximizes a utility function.
Our method picks a single point rather than generating a
whole path. When we consider an optimal path, we need
to compute all possible paths, and then evaluate each total
KV

to pick a unique path that (maximally) reduces the total
uncertainty. However, it is beneﬁcial to adjust and re-plan an
on-line path when the ﬁeld changes over time.
C. Distributed multi-robot sampling
Regions also have an associated graphical representation.
A region  that is decomposed into K non-overlapping
regions 
1
; ;
k
; ;
K
is represented, along with the
connectivity relationships, as a graph G = (V;E), where
a vertex v
i
2V denotes the region 
k
, and an edge e
ij
=
(v
i
;v
j
) 2 E connects a pair of vertices v
i
and v
j
when
the associated regions are adjacent. Separate weights are
associated with both the vertices and edges.
With m robots, we wish to balance the workload by
the partitioning the ﬁeld . This is achieved by splitting
the graph G into m sub-graphs G
i
= (V;E) such that
S
m
i=1
G
i
=G. We expectKm, so each robot is associated
with at least one region. Although m can be any number,
for clarity of presentation, consider the two robot case, with
robot r
i
and r
j
. Let w
i
v
and w
i
e
denote the weights of v
ande of the sub-graphG
i
, respectively. AssumingG
i
hasL
number of  and N number of edges, each w
i
va
computed
byj
a
j
^
G
a
is the importance of the region, a2 [1;L].
w
i
e
b
is the distance between v
a1
and v
a2
, b2 [1;N] and
a
1
;a
2
2 [1;L]. Then this problem can be formulated as the
following optimization problem:
arg min
(G
i
;G
j
)
[ max
i2[1;m]
(
X
8a;b
(w
i
va
+w
i
e
b
))  min
j2[1;m]
(
X
8c;d
(w
j
vc
+w
j
e
d
))]:
(5)
WhenG
i
of robotr
i
has the maximum total cost andG
j
of
robot r
j
has the minimum total cost, i;j2 [1;m], our goal
is to minimize the difference of the total cost between G
i
and G
j
, as illustrated in Fig. 1(c).
Since the m graph partitioning problem known to be NP-
hard [14], we adopt the heuristic of [15] because of its good
performance in adjusting the unbalanced partitions as well as
its practical running speed O(n
3
). A modiﬁcation is neces-
sary. We alter the formula by considering the neighborhood
cost only to move a vertex (a region) to the other robot’s sub-
graph. Them robots initially split the regions evenly between
themselves. Each robot follows the steps in Section IV-B,
then updates its model of the temporal dynamics. The robots
communicate data about nearby regions like the size of
the region and the information describing the local ﬁeld
dynamics in (~ 
t
;~ !
t
). Then the total cost associated withG
i
is
P
w
i
v
+
P
w
i
e
, where v
i
ande
i
are subsets ofV
i
andE
i
,
respectively.
Since the goal is to minimize the difference between the
maximum cost ofG
i
and the minimum cost ofG
j
, we move
fv
i
g toG
j
. So,G
0
i
=G
i
 fv
i
g andG
0
j
=G
j
+fv
i
g where
G
0
i
and G
0
j
are new G
i
and G
j
, respectively. Suppose R
i
represents the total allocated cost of roboti andS
ij
is the set
of neighborhood nodes between G
i
and G
j
. Alg. 3 includes
further detail.
Algorithm 3 The DISTRIBUTED SAMPLING Algorithm
1: INPUT: sub-graphsGm withM robots wherem=1;:::;M, current
robot positions rm .
2: OUTPUT: reconstructed sub-graphs Gm .
3: Compute costopt =
P
cost(Gm)=M
4: for i = 1 to m do
5: Compute R
i
=
P
cost(G
i
)
6: end for
7: Find G
i
of maximum cost R
i
and G
j
of minimum cost R
j
8: S
ij
=f(v
i
;v
j
)jv
i
2G
i
;v
j
2G
j
g
9: costtemp =1
10: for i = 1 tojS
ij
j do
11: R
0
i
=cost(G
i
 fv
i
g), R
0
j
=cost(G
j
+fv
i
g)
12: if (R
i
 R
j
)>(R
i
0 R
0
j
) and (R
0
i
 R
0
j
)>0 then
13: if (R
0
i
 R
0
j
)<costtemp then
14: a=i, costtemp = (R
0
i
 R
0
j
)
15: end if
16: end if
17: end for
18: G
0
i
=G
i
 fvag and G
0
j
=G
j
+fvag
V. SIMULATION AND EXPERIMENTS
A. Experimental setup
Using simulated data sets of chlorophyll gathered in the
central basin of Lake Erie that is susceptible to severe oxygen
depletion each summer [16], we verify the proposed methods
to predict the proper chlorophyll levels. In practice, such
data sets are spatially and temporally sparse. For example,
NASA’s Moderate Resolution Imaging Spectroradiometer
(MODIS [17]) gathers data daily or hourly using satellite
images with relatively low resolution that are affected by
weather conditions. Data from the National Oceanic and
Atmospheric Administration (NOAA) [16] is collected by
ﬁxed buoys which are spread across large areas (e.g., 3 buoys
per 100 km
2
).
560
(a) Satellite and Aqua MODIS. (b) Simulated data at 100
th
and 500
th
Fig. 2: This shows the plume-like ground truth data. 2(a) shows a
real satellite image and MODIS image of central basin of Lake Erie
in March 2012. The real satellite image of chlorophyll translated
to the real rate of chlorophyll, and then Gaussian plume model is
added into given sparse real data shown in 2(b).
To successfully run the experiments, we need to use
dense data. Thus, we interpolate chlorophyll data for Lake
Erie using the daily MODIS [17] data set (June to August
2012) and we opted to supplement the base ﬁeld with a
contaminant plume. A Gaussian plume model using two axes
of diffusivity and velocity produces dynamics similar to what
one might see in the ocean or a lake [18]. Finally, we have a
interpolated dense data for 1000 steps over an 100 m
2
area
to serve as the ground truth in Fig. 2.
Two separate experimental scenarios were used, both of
which assess the estimated variance in scalar ﬁelds con-
structed from measurements taken by robots:
1. Path planning and updating the temporal evolution model:
The robot initially samples 20 randomly selected ﬁeld values
to construct the variogram, 
Y
(h). The robot follows Alg. 2
to minimize temporal uncertainty over time and then
updates the evolution model. We assume that the robot’s
velocity is constant, approximately 5  7m=s. The greedy
planner, which is selecting the next goal position in order
to minimize the total uncertainty without considering the
temporal changes [5], is used to compare the quality of our
approach.
2. Distributed workload for multi-robot system:
Each robot has an even initial partition to collect measure-
ments and follows the above procedure. When the robots are
collecting data following Alg. 2, Alg. 3 constructs and ma-
nipulates the graph partitions and distributes the workloads
as observations are updated.
B. Results
Fig. 2 shows the models of ﬁeld dynamics involving differ-
ent time and space. Fig. 3(a) demonstrates four regions that
have different ﬁeld dynamics after the 69
th
step. Fig. 3(b)
represents 13 different ﬁeld dynamics after the 217
th
step.
The ﬁeld is separated resulting from Alg. 2. Some distri-
butions of (~ 
t
;~ !
t
) are similar to the uniform distribution
because when the region is separated, the ﬁeld dynamics
initially are computed from the uniform distribution if there
are no past observations. It takes time to converge even
if it already has several observations. Fig. 4 shows the
steps for updating ﬁeld dynamics over time. If the ﬁeld
has sufﬁciently large difference between values describing
sub-regions and the current region, the current region is
split or merged. Based on the differing ﬁeld dynamics, the
queries are distributed in the whole region. Once a split
occurs, each region’s temporal evolution model represents
the region better than before. This helps the robots sample
more efﬁciently in the hotspot region becauseKV

increases
in the hotspot quickly over time.
(a) 4 separations at 69
th
step (b) 13 separations at 217
th
step
Fig. 3: A robot estimates and updates the temporal evolution
model with adaptive path planning. Each region has an original
ﬁeld dynamics model. Each histogram represents how much of a
hotspot is formed. The X-axis is 
p
and the Y-axis is !
p
.
Fig. 4: The initial temporal evolution weight set is an uniform
distribution, and then updated when the robot samples new data.
If E is enough to split or merge, each region has different !
distribution depends on the given data. X-axis is 
p
, and Y-axis
is !
p
. The red dots are the tentative queries. Each region has
a different number of queries generated by the importance of
temporal dynamics. Two cases shows a different degree of temporal
variability depends on the histrogram of the region.
To evaluate the quality of our results, we show the cross-
validation by Mean Square Error between ground truth and
our estimation over time. We tested these for ﬁve trials
shown in Fig. 5(b) which yields better cross-validation than
the greedy planner. As we follow the scenarios of multi-robot
case, our approach shows better cross-validations with low
variance and faster convergence time.
Fig. 5(a) demonstrates the distributed workloads for two
robots. In Fig. 5(c), after a short amount of time, the differ-
ence of workload gradually approaches zero, showing that
the workloads are well distributed. However, when a ﬁeld is
ﬁrst split or merged, the workloads may be unbalanced for
some time as the ﬁeld model needs to be updated and to
converge after the transition occurs. These transitions inﬂu-
ence each robot’s workload in the ﬁeld as the robot samples
new data. If each workload increases or decreases drastically,
the overall workload can ﬂuctuate until it eventually settles
down with the split ﬁeld. After the 350
th
step, the workload
increases for a while with the ﬁeld redistribution by Alg. 3,
but when another transition happens at the 450
th
step, the
workload gradually decreases. In other words, This shows
non-monotonic after split transition and ﬁeld redistribution.
We believe that this settling time is related to the initial
histogram distribution and redistributed split ﬁeld.
561
(a) Distributed workload for two robots at 454
th
step
(b) Cross-validations with ground truth (c) Overall workload distribution
over time
Fig. 5: The workload is distributed to two robots while each robot
estimates and updates their ﬁeld dynamics. 5(a) shows that the graph
represents the workload including ﬁeld dynamics, the size of each
region, and the distance between nearby regions. 5(b) shows two
planners that are cross-validations with ground truth. One is based
on our approach with the ground truth over time. Another is the
traditional approach with the ground truth over time. Data are from
ﬁve separate trials of each case. 5(c) shows several sharp increases
when the transition of separation is happened in the region (e.g.,
75
th
, 140
th
, 200
th
, 350
th
, and 450
th
steps).
VI. CONCLUSION
This paper shows (1) how to model the temporal evo-
lution ﬁeld and (2) how to distribute the robots’ work-
loads. The main idea is to treat the temporal variability
as uncertainty in the interpolator. This approach can be
seen as major simpliﬁcation of a traditional spatio-temporal
interpolation [9], which although widely known has seen
comparatively little use in robotic sampling. The approach
we outline facilitates modeling non-homogeneous temporal
evolution as well as balancing the workload of the multi-
robot system with efﬁcient communication overhead, thus
each robot adaptively has a balanced workload depending
on the temporal variability of the assigned ﬁeld.
The experiments cross-validate the estimated ﬁeld with
ground-truth values from the simulated data. The results
show generally good performance even though the data have
temporal variability. Moreover, in multi-robot experiments,
the robots have a balanced workload, sharing only ﬁeld
dynamics and not the measurements themselves.
It is worth noting that the uncertainty estimates in this
work are used predominantly for determining when a lo-
cation should be sampled and then which robot should be
responsible for carrying out the measurement. The simple —
perhaps even simplistic— model sufﬁces to ensure that the
distributed system responds online to changes in the ﬁeld
by building an evolving model itself. A shortcoming of the
uncertainty model, however, is that for robotsi andj, where
e
ij
2E, the KV

i
and KV

j
may not be continuous at the
shared boundary. This means, for example, that the quad-tree
structure may introduce some artefacts along the division
line. The method of [6] can address this, but it remains
unclear how such an implementation might be distributed
in communication constrained settings.
ACKNOWLEDGEMENT
This work was supported in part by the National Science
Foundation as part of Grant IIS–1302393
REFERENCES
[1] R. N. Smith, J. Das, Y . Chao, D. A. Caron, B. H. Jones, and
G. S. Sukhatme, “Cooperative Multi-AUV Tracking of Phytoplankton
Blooms based on Ocean Model Predictions,” in Proceedings of the
IEEE/MTS Oceans Concerence and Exhibition, Sydney, Australia,
May 2010, pp. 1–10.
[2] R. K. Williams and G. S. Sukhatme, “Probabilistic Spatial Mapping
and Curve Tracking in Distributed Multi-Agent Systems,” in Proceed-
ings of the International Conference on Robotics and Automation, St.
Paul, Minnesota, USA, May 2012.
[3] V . Kumar, D. Rus, and G. S. Sukhatme, “Networked Robots,” in
Springer Handbook of Robotics, B. Siciliano and O. Khatib, Eds.
Springer-Verlag Heidelberg, 2008, ch. 41.
[4] K. H. Low, J. M. Dolan, and P. Khosla, “Adaptive Multi-Robot
Wide-Area Exploration and Mapping,” in Proceedings of International
Conference on Autonomous Agents and Multiagent Systems, Estoril,
Portugal, May 2008.
[5] Y .-H. Kim, D. A. Shell, C. Ho, and S. Saripalli, “Spatial Interpolation
for Robotic Sampling: Uncertainty with two Models of Variance,” in
Proceedings of International Symposium on Experimental Robotics,
Quebec, Canada, June 2012.
[6] S. Garg, A. Singh, and F. Ramos, “Learning non-stationary space-
time models for environmental monitoring,” in Proceedings of AAAI
conference on Artiﬁcial intelligence, 2012, pp. 288–294.
[7] A. Singh, F. Ramos, H. D. Whyte, and W. J. Kaiser, “Modeling
and Decision Making in Spatio-Temporal Processes for Environmental
Surveillance,” in Proceedings of the International Conference on
Robotics and Automation, Anchorage, Alaska, USA, May 2010, pp.
5490–5497.
[8] X. Zhu, J. Yu, S. Ren, and X. Wang, “Near-optimal Collecting Data
Strategy Based on Orinary Kriging Variance,” in Proceedings of
OCEANS, Sydney, NSW, Australia, May 2010, pp. 1–6.
[9] N. Cressie and C. K. Wikle, Statistics for Spatio-Temporal Data. New
York, NY , USA: John Wiley and Sons, Ltd, 2011.
[10] S. L. Smith, M. Schewager, and D. Rus, “Persistent robotic tasks:
Monitoring and sweeping in changing environments,” IEEE Transac-
tions on Robotics, vol. 28, no. 2, pp. 410–426, 2012.
[11] K. H. Low, J. Chen, J. M. Dolan, S. Chien, and D. R. Thompson,
“Decentralized Active Robotic Exploration and Mapping for Proba-
bilistic Field Classiﬁcation in Environmental Sensing,” in Proceedings
of International Conference on Autonomous Agents and Multiagent
Systems, Valencia, Spain, June 2012.
[12] Y .-H. Kim and D. Shell, “Efﬁcient Modeling of Non-homogeneous
Field Dynamics for Distributed Robotic Sampling,” http://www.cs.
tamu.edu/media/27578/2014-2-1.pdf, Computer Sceince and Engi-
neering, Texas A&M University, Tech. Rep. 2014-2-1, Feb. 2014.
[13] S. Thrun, W. Burgard, and D. Fox, Probabilistic Robotics (Intelligent
Robotics and Autonomous Agents). The MIT Press, 2005.
[14] M. R. Garey, D. S. Johnson, and L. Stockmeyer, “Some simpliﬁed
np-complete graph problems,” Theoretical Computer Science, vol. 1,
pp. 237–267, 1976.
[15] B. W. Kernighan and S. Lin, “An efﬁcient heuristic procedure for
partitioning graphs,” Bell Systems Technical Journal, vol. 49, pp. 291–
307, 1970.
[16] National Oceanic and Atmospheric Administration. (2012) NOAA
Data Set. [Online]. Available: http://www.glerl.noaa.gov/data/
[17] NASA’s Moderate Resolution Imaging Spectroradiometer. (2012)
MODIS Data Set. [Online]. Available: http://oceancolor.gsfc.nasa.gov/
[18] E. Holzbecher, Environmental Modeling: using Matlab. New York,
NY , USA: Springer-Verlag Heidelberg, 2007.
562
