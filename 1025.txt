  
? 
Abstract— Continuum robot has potential to run freely 
through a cluttered environment as aircraft fuel tank. To 
improve manual maintenance, we designed an aircraft fuel tank 
inspection robot which was composed of cable-driven sections. A 
suitable path is essential for the robot to reach the target zone 
while avoiding obstacles, but path planning for continuum robot 
is a challenge due to their complex kinematics models. To depict 
the collision free planning problem, a nonlinear, constrained 
optimization formulation was adopted. Projection strategy was 
presented and an imaginary straight line between the origin and 
the target was made up as a reference line to simplify the 
planning problem. We focused on the decrease of computing 
time complexity, and based on region clipping, a novel forward 
search method was proposed to solve this optimization-based 
planning problem. With the reference straight line, the minimum 
distance summation (MDS) was calculated to decide the optimal 
path relatively. Experiments on MATLAB were reasonably 
designed. Simulations and results analysis demonstrated 
excellent performance of region clipping search method and 
feasibility of the avoidance algorithm. 
I. INTRODUCTION 
Fuel leakage of aircraft leads to waste of resources, high 
costs, and even aviation accidents. The periodical check of the 
aircraft fuel tank leaks is needed to guarantee the flight safety. 
Nowadays, tank inspection mainly depends on crews to 
operate internally. However, the tank distributes uniform 
stringers, fuel pipes and related facilities in disorder and is 
mixed with a few kinds of toxic gases which are flammable 
and explosive. In addition, the crews must follow the intricate 
Aircraft Maintenance Manual strictly in order to increase 
personnel security, so a semi-automatic device is in urgent 
need to improve maintenance efficiency and reduce labor 
intensity. To assist the crews in carrying out inspection 
operation, an aircraft fuel tank inspection robot (AFTIR) with 
continuous structure was designed [1], as shown in Fig. 1. 
Some types of continuum robots like OCRobotics [2], 
DDU [3], Air-Octor [4], OctArm [5], Active Cannulas [6], 
Colobot [7], BHA [8], Tendril [9], Concentric-Tube 
Robots[10], etc. have been designed by researchers. Similar to 
snakes, elephant trunks and octopus arms, continuum robot 
can vary in shape and size to adapt to the environment with 
strong space constraints like aircraft fuel tank. In order to 
achieve the target in a congested space, collision free path 
planning is needed. Much work has been done for continuum 
robots moving from the starting point to the target while 
avoiding obstacles. G. S. Chirikjian et al. modeled 
hyper-redundant rigid link robots using parametric curves 
 
Guochen Niu, Zunchao Zheng, Qingji Gao are with Robotics Institute, 
Civil Aviation University of China, Tianjin 300300 China. (E-mail: 
niu_guochen@139.com, zc.zheng.leon@gmail.com, qjgao@cauc.edu.cn). 
approximated by mode shape functions (MSF) which was 
modified to apply to continuum robot [11]. L. A. Lyons et al. 
presented a motion planning algorithm based on optimization 
for an active cannula getting to the target while avoiding 
obstacles [12]. Penalty methods were used to solve the 
constrained nonlinear optimization problem by converting it 
into a sequence of unconstrained optimization problems. I. S. 
Godage et al. presented a MSFs-based kinematic model, 
avoiding the complex derivations and singularities [13][14]. 
Simulations of forward kinematics, position inverse 
kinematics with and without orientation, object inspection and 
handling, motions in static and dynamic environments 
demonstrated spatial bending, pure elongation/contraction 
and ability of avoiding obstacle. But the robot required 
sensors mounted around the arm to provide distal information 
without orientation. J. Xiao et al. designed a real-time 
adaptive motion planner (RAMP) for a multisection 
trunk/tentacle robot to grasp an object under uncertain 
conditions [15]. It used a planar curve parametric kinematic 
model to the extended RAMP paradigm. V. Duindam et al. 
proposed a 3D motion planning method for a bevel-tip 
Collision Free Path Planning Based on Region Clipping for Aircraft 
Fuel Tank Inspection Robot 
Guochen Niu, Zunchao Zheng, Qingji Gao 
 
AFTIR Snake Arm
Linear module
{ 
Detector 
Center tank of aircraft
End disk
Support disk
Flexible backbone
Base disk
Driving cables
(a): Single section
(a)
 
Fig.1. Pro-E simulation of AFTIR and single section (a). The structure 
of AFTIR mainly consists of three parts: the detector, Snake Arm and 
linear module. The detector percepts the environment using CCD 
camera, the flexible Snake Arm enters the interior of the fuel tank for 
inspection, and rigid linear module, the external part of fuel tank 
supports and provides rising and decending movements of Snake Arm. 
Snake Arm consists of several continuous sections. Single section 
consists of some support disks and one flexible backbone, and it can 
bend and rotate through changing lengths of four driving cables which 
are uniformly distributed around backbone at intervals of 90° . 
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 3227
  
flexible needle in an environment with obstacles [16]. The 
planning problem was expressed as an optimization problem 
by discretizing control space and the discretization consisted 
of a stop-and-turn strategy and a helical strategy. But there 
might be no solutions for different initial estimates. The 
needle-tip pose probabilities generated as a diffusion process 
on the Euclidean group were studied. Based on 
Rapidly-Exploring Random Trees (RRTs) method, J. J. Xu et 
al. developed a motion planner for steerable needles in 3D 
environment with obstacles [17]. They also proposed a 
method using RRTs with backchaining to solve the possible 
problem of no solutions for all given initial configurations. 
These models simplified assumption which enabled us to treat 
the robot as particle. However, these models sacrificed 
accuracy for model simplicity. During medical applications, 
such inaccuracies could lead to significant side effects or 
procedure failures. R Alterovitz et al. applied a motion 
planning algorithm based on Rapidly-Exploring Roadmaps 
(RRM) to lead concentric tube robots around obstacles to goal 
regions [18][19]. RRM worked by minimizing the probability 
of colliding with obstacles. Uncertainty in actuation and 
predicted device shape was also accounted during plan 
execution.  
Researches aforementioned provide obstacle avoidance 
path planning methods for a variety of continuum robots, but 
they cannot be applied directly to AFTIR due to primary 
differences in physical mechanisms and relative kinematics 
model. This paper aims to design a collision free path for 
AFTIR by searching solutions of fundamental kinematics 
using a novel method of region clipping. We emphasize the 
improvement of search process, for the classical blind search 
method is time-consuming numerously. Moreover, the 
introduction of projection strategy and reference straight line 
is used to simplify planning problem.  
The structure of this paper is as follows. Based on 
kinematics model which has been studied on the AFTIR[20], 
we formulate the path planning problem in Section II. Section 
III details the main idea of collision avoidance strategy with 
region clipping search method. Design of experiments and 
analysis of simulation results follow in section IV. 
II. PROBLEM FORMULATION 
A. Kinematics Models 
Through the analysis of kinematics of single section and 
multi-sections [20], a mapping relationship between the joint 
variables and tip position vector of N sections is established. 
The homogeneous transformation matrix (HTM) of tip frame 
{N} relative to system frame {0} can be expressed by (1). 
 
0 0 1 1
1
... ...
iN
N i N
??
? T T T T (1) 
Where,
1 i
i
?
T is the section frame {i} relatives to {i-1}, it is 
a 4? 4 matrix and given by (2). 
 
11
1
01
i i T
i ii
i
??
?
??
?
??
??
Rp
T (2) 
Where, 
1 i
i
?
R is the rotation matrix, it is a 3? 3 matrix. 
1 iT
i
?
p 
is the position of the origin in frame {i} with respect to frame 
{i-1}, it is a 1? 3 vector. The elements of 
1 i
i
?
T are functions of 
bending angle ?
i
 and rotation angle ?
i
 of i# section, they are 
mainly elementary operations of multiplications and additions 
of trigonometric functions. 
We define a configuration of AFTIR as a 2N dimensional 
vector {?
i
, ?
i
: i=1,…,N} adding an independent translation 
dimension dis, and the arm configuration can be expressed by 
q={dis, ?
i
, ?
i
: i=1,…,N}. The function f(q): ?
2N+1
??
3
 returns 
the tip position p
tip
.  
 ( ) [ , , ]
tip tip tip tip
f x y z ?? pq (3) 
We define environmental obstacles using a set O of size M, 
O={o
1
,o
2
,…,o
M
}, where o
i
 (i=1,…,M) represents i# spherical 
obstacle whose radius is r
0
. 
B. Planning Problem Formulation 
Given the target point P
target
 (p
target
=[x
target
,y
target
,z
target
]) and 
the initial configuration,  determine  an obstacle avoidance  
strategy that  makes  tip point P
tip
 (the final endpoint of the end 
section of Snake Arm, and p
tip
=[x
tip
,y
tip
,z
tip
]) of AFTIR reach 
the target plane zone, and promise that the  body  of  Snake  
Arm does  not collide with obstacles and boundaries of fuel 
tank, and the assumptions are given as follows. 
Assumption 1: The initial configuration is a status that the 
base of Snake Arm is on the original point in frame and the 
arm is perpendicular to plane XOY, that is, the arm is on the Z-
-axis. 
Assumption 2: Reference line is a straight line from the 
origin to the target. 
Assumption 3: Target plane zone O
1
 is a circle area 
centered on the target in a plane parallel with plane XOY. Set 
radius of the circle as r
target
, the zone is given as follows, where 
p is the coordinates variable of arbitrary point and r is the 
radius variable. 
2 2 2
arg arg arg
1
arg
( ) ( )
( , )
t et t et t et
n
t et
x x y y r
O r R
zz
??
? ? ? ?
??
??
??
?
??
??
pp 
Assumption 4: Obstacle space zone O
2
 is a vertical 
cylinder area whose projection centre on plane XOY is same 
with that of the obstacle. An obstacle is a sphere whose centre 
is point P
oba
 (p
oba
=[x
oba
,y
oba
,z
oba
]), then the obstacle space zone 
is given as follow formulation. 
2 2 2
2
( , ) { | ( ) ( ) , 0}
n
oba oba oba
O r R x x y y r z ? ? ? ? ? ? ? pp 
Where, r
oba
 is projection radius of obstacle space zone on 
plane XOY, r
oba
=r
0
+r
b
, r
b
 is a value which is set to enlarge 
decision area. 
Flexibility of single section and correlation between 
sections result in that the path planning for continuum robot is 
not as easy as that for a mobile robot, it cannot be taken as a 
particle. For this reason, the path planning problem for 
continuum robot can be stated as follows. 
3228
  
P
tip
 reaches the target while all the discrete points P
arm
 
(p
arm
=[x
arm
,y
arm
,z
arm
]) on Snake Arm do not collide with 
obstacle space zones, which can be represented as the 
constraint (4). 
 
1 tip
O ? p
2 arm
O ? p (4) 
The total cost function c(q) is represented by making a 
summation of Euclidean distances from P
arm
 on Snake Arm to 
the reference straight line, as expressed by (5). The distance is 
given by calculating exterior product of vectors p
arm
 and p
target
. 
 ? ?
arm
cd ?
?
q
arg
arg
t et
arm arm
t et
d??
p
p
p
  (5) 
Then path planning problem can be formulated as a 
nonlinear, constrained optimization problem as follows.  
 
*
arg min ( ) c ?qq , subject to: 
1 tip
O ? p , 
2 arm
O ? p (6) 
Where q* is the optimal solution path. 
III. OBSTACLE AVOIDANCE STRATEGY 
 A. Projection Strategy 
Figure 2 shows the part environment in the wing tank of 
Boeing 737-200, the uniform stringers, fuel pipes and other 
facilities distributes in disorder. 
 
With obstacles in space, there may be more than one 
solution path for AFTIR to reach the same target. So, to 
simplify the planning problem, we also present the assumption 
of target space zone as that in the former section. 
Assumption 5: Target space zone O
3
 is a vertical cylinder 
area whose projection on plane XOY is a circle centered on the 
target. It can be formulated as follow form. 
2 2 2
3 arg arg arg
( , ) { | ( ) ( ) , 0}
n
t et t et t et
O r R x x y y r z ? ? ? ? ? ? ? pp 
With above assumptions, the projection strategy is applied 
as follows. As shown in Fig. 3 and Fig. 4, firstly, with an initial 
configuration, the Snake Arm bends and rotates until the tip 
point reaches the target space zone, and make sure that any 
parts of the arm do not run into obstacle space zones. Then the 
arm rises or descends a distance until the tip point is in the 
target plane zone, and no matter how the body moves upward 
or downward, it does not collide with obstacles. In this way, 
the fuel pipe can be considered as a sequence of obstacles 
arranged vertically, that is, avoiding one obstacle means 
avoiding a vertical pipe standing where the obstacle is. 
B. Region Clipping Search Method 
The analysis of continuity of functions based on forward 
kinematics is precondition of introducing region clipping 
which is a forward research method with low computing time 
complexity. On the basis of kinematics modeled in [20], we 
give the following analysis. 
For a single section, define p
Nr
 (N is the number of sections, 
N=1 means the arm is a single section, L is the length of single 
section, l represents a distance from a point on the section to 
the base of the section, l≥0, l≤L) as an arbitrary point on the 
body and the corresponding bending angle is ? (?=l*?/L). So, 
the position vector of p
1l
=[x
1l
,y
1l
,z
1l
] is given by p
Nr
=[x
Nl
,y
Nl
,z
Nl
] 
(N=1) when ? ? ? ? ,0 0, ? ? ? ?? ? , ? ? 0,2 ?? ? , and where 
 
? ?
? ?
? ?
1
1
1
cos 1 cos
sin 1 cos
sin
l
l
l
L
x
L
y
L
z
??
?
??
?
?
?
?
??
?
?
?
??
?
?
?
?
?
?
 (7) 
Equation (7) indicates that, if we make ? or ? to be a 
known constant, so x
1l
, y
1l
, and z
1l
 can be taken as unary 
functions of ? or ?, moreover, they are also complex functions 
of multiple elementary functions. For an arbitrary ?=?
0
, if ? 
tends to zero, that is, ? tends to zero, we have (8). 
 
1 1 0
0
1 1 0
0
1 1 0
0
lim 0 ( , ) | 0,
lim 0 ( , ) | 0,
lim ( , ) | 0,
ll
ll
ll
xx
yy
z l z
?
?
?
?? ? ? ?
?? ? ? ?
?? ? ? ?
?
?
?
?
? ? ? ?
?
?
? ? ? ?
?
?
? ? ? ?
?
?
 (8) 
By the definition of continuity of unary function [21], we 
can consider elementary functions x
1l
, y
1l
, z
1l
 are unary 
functions if a variable is made as constant, so they are surely 
continuous functions, that is, if ? is constant, position function 
of single section is continuous for ? in interval of [0,2π]. Or if 
? is constant, position function of single section is continuous 
for ? in interval of [-π,π].  
 
Fig.2. The internal environment of wing tank of Boeing 737-200. 
Rising distance
X
Y
Z
O
Target plane zone
Target space zone
Obstacle space 
zone
Target
Tip point
Obstacles
Reference line
 
X
Y
O
Projections 
of obstacle 
space zones
Projection 
of target 
plane zone
Projection 
of target
Projection 
of  tip point
Projections of obstacles
Projection of  path
Projection of  
reference line
 
Fig. 3. Diagram of a path of four           Fig. 4. Projections in plane XOY of 
sections avoiding two obstacles             shapes in Fig. 3. 
with projection strategy. 
 
 
3229
  
For multi-sections, as 
0
N
T in (2) is got by a product of N 
matrices, p
NL
 (the tip position p
tip
) is formulated by the 
multiplications and additions of elements of N matrices, the 
element of 
0
N
T is function of {?
1
,?
1
,?
2
,?
2
,…,?
N
,?
N
}.  
Take an example of bending angle, for a combination of 
{?
1
,?
1
,?
2
,?
2
,…,?
N
,?
N
 }, we choose an value ?
i
 arbitrarily as an 
independent variable ? and the others  as known constants. In 
this way, (2) can be given by function form (9). 
 
0 0 1 1
1 1 1
( ) ( , )... ( , )... ( , )
iN
N i i N N N
? ? ? ?? ? ?
??
? T T T T (9) 
Where,  
? ?
? ? ? ?
? ? ? ?
11
11 14
1
11
41 44
, ... ,
,
, ... ,
jj
j j j j j j
j
j j j
jj
j j j j j j
ff
ff
? ? ? ?
??
? ? ? ?
??
?
??
??
??
???
??
??
??
T . 
The elements of T are taken as functions ()
mn
f ? 
(m=1,2,3,4; n=1,2,3,4), the subscript mn represents its 
position of the matrix T , the m-th row and n-th column. From 
(2), p
NL
 can be given by (10). 
 ? ?
0 0 0
14 24 34
, , ( ), ( ), ( )
NL NL NL NL N N N
x y z f f f ? ? ? ?? ??
??
p (10) 
Where 
0
()
N
f? can be regarded as unary function of ? 
through operation combinations of elements of 
1 ? j
j
T 
(j=1,2,…,N), as given by (11). Clearly, it is continuous for ? in 
an interval of [-π,π]. 
? ? ? ? ? ?
? ? ? ? ? ?
0 0 2
4 1 1 1 1 1 1
11
1 1 1
, ,..., , ,...
..., , , , ,..., ,
1,2,3; 1,2,3,4; 1,2,3,4
i
N k mn i mn i i
i i N
i mn i i mn i i N mn N N
f g f f
f f f
k m n
? ? ? ? ?
?? ? ? ? ?
?
? ? ?
??
? ? ?
? ?
?
?
?
? ? ?
(11) 
Where ? ?
0
4 Nk
f ? is a function of ? with an operation 
combination which is elementary operation of multiplications 
and additions of 
1 j
j mn
f
?
 (j=1,2,…,N) which represents any 
elements of 
1 ? j
j
T (j=1,2,…,N). 
By the definition of continuous unary function according 
to [21], we could imply from (11) as follows. 
0 ? ?? , 0 ? ?? ? , s.t ? ? ? ?
00
4 4 0 N k N k
ff ? ? ? ?? , for 
? ?
0
, O ? ? ? ? ? ? . 
In another way, for ?
0
 (?
0
 represents the value of bending 
angle of i# section, with a known combination 
{?
1
,?
1
,…,?
i-1
,?
i-1
,?,?
i
,?
i+1
,?
i+1
,…,?
N
,?
N
}) corresponds a tip 
point [x
NL
(?
0
),y
NL
(?
0
),z
NL
(?
0
)] which is in target space zone, 
when the variable ? changes by ?? and ?? tends to zero, we 
have conclusions as (12).  
 
0 0 0
lim 0, lim 0, lim 0
NL NL NL
x y z
? ? ? ? ? ? ? ? ?
? ? ? ? ? ?     (12) 
So for the position change ?d on the direction of vector 
[?x
NL
,?y
NL
,?z
NL
], we have (13). 
 
? ?
? ?
1
2 2 2
2
0
1
2 2 2 2
0 0 0
lim
lim lim lim
0
NL NL NL
NL NL NL
d x y z
x y z
?
? ? ?
??
? ? ? ? ? ?
? ? ? ?? ??
? ? ? ? ? ?
?
 (13) 
From (12) and (13), we know that when ? changes nearby 
?
0
, tip point moves nearby tip point [x
NL
(?
0
),y
NL
(?
0
),z
NL
(?
0
)], 
that is, the tip point changes near the target space zone in a 
direction of vector [?x
NL
,?y
NL
,?z
NL
].  
We can conclude a similar result with rotation angle, as 
illation of bending angle above-mentioned when choosing an 
value ?
i
 arbitrarily as an independent variable ? and the others  
as known constants, they form a combination of  
{?
1
,?
1
,…,?
i-1
,?
i-1
,?
i
,?,?
i+1
,?
i+1
,…,?
N
,?
N
}. 
In conclusion, continuity means the position coordinates 
of p
NL
 are distributed continuously in their own direction of 
coordinate axis, or, continuity analysis of unary functions 
presents relation between changes of any angle and 
movements of tip point, that is, the position of tip point 
changes gradually, other than mutationally. In another way, as 
long as a solution making the tip point in the target space zone 
is found, we can always find a more suitable solution near the 
known angles by small angle changes, until the optimal one is 
found and tip point is not aside to target space zone.  
Blind search method searches many inessential angles, and 
it leads to large computing time. Considering the distribution 
of feasible values got from blind search, a novel search 
method of region clipping is proposed to reduce computing 
time.  
The main idea comes from the analysis of continuity of 
HTM, and it aims to reserve useful regions and remove the 
useless regions through searching less value continually. As 
shown in Fig. 5, take an example of bending angle, firstly we 
divided the interval of ? into NUM parts averagely and get 
NUM+1 values in the searching region (NUM is usually a 
small integer, in Fig. 5, NUM=8), and we get a series of 
combinations of bending angles {?
i
(1),…,?
i
(9)} (i=1,2,…,N) 
for i# section. Through calculating the tip coordinates, if it 
satisfies reaching the target space zone, keep it. Secondly, we 
choose an optimal value {?
1
(7),…,?
N
(4)} which is calculated 
from minimum distance summation(MDS) which is the 
minimum summation of distances from all points of Snake 
Arm to the reference straight line, and make its prior value 
{?
1
(6),…,?
N
(3)} and its later one {?
1
(8),…,?
N
(5)} as left and 
right endpoints of the next searching regions of {?
1
,…,?
N
}. 
Finally, the loop stops when the angle changes less than a 
pre-set small angle ??, that is, double length of subinterval in 
the last loop but one is less than ??. The relation among length 
of initial interval Li, number of loops LOOP, NUM and ?? is 
given by (14).  
 
1
2
LOOP
Li
NUM
?
?
??
? ??
??
??
 (14) 
3230
  
In this way, 8 of 9 values and 6 of 8 subsections will be 
abandoned in the next loop, and LOOP=7 in the figure is 
(π?(2/8)
LOOP-1
≤π/1800 when we make ??=0.1° ).  
Just like a tailor, most of searching regions are clipped in 
each loop until the optimal value is obtained, so we do not 
need to calculate numerous unnecessary values, and get a low 
computing time complexity at the same time. 
C. Algorithm Details 
For path planning in a 3D space, the optimal path from the 
starting point to the target is clearly the straight line between 
them. Considering special characteristics of continuum robot, 
we use the fictitious straight line as reference and adopt a 
planning method based on projection strategy and region 
clipping search method, and obtain the optimal result through 
calculating MDS in every loop, the process of minimizing 
MDSs is the process of solving the nonlinear constrained 
optimization. The algorithm details as follows. 
As shown in TABLE I, initialize the configurations firstly, 
and input the starting point P
init
 and the target point P
target
. 
Imagining firstly there is a straight line between original point 
and P
target
. Starting with the movement of 1# section, we divide 
each domain of  ?
1
 and ?
1
 into NUM parts then we get two sets 
of ?={?
1
(1),…,?
1
(NUM+1)} and ?={?
1
(1),…,?
1
(NUM+1)}. 
All combinations of {?
1
(i),?
1
(j):i,j=1,2,…,NUM+1} is formed  
and used to calculate the pose of 1# section. Then the 
Collision Detection runs, that is, if the single section does not 
collide with obstacle space zone, keep the combination of 
{?
1
(i), ?
1
(j)}, or omit it. Reaching Detection works with {?
1
(i), 
?
1
(j)} chosen above, that is, we compute the corresponding tip 
position of 1# section, if the tip is not in the target space zone, 
2# section is added. In the same way, we divide the domains 
and choose the solutions that with known {?
1
(i), ?
1
(j)}got in 
former loop through Collision Detection and Reaching 
Detection. The number of active sections is added until the tip 
of Snake Arm reaches the target space zone. With each 
combination of {?
1
,?
1
,…,?
N
,?
N
} satisfying conditions of 
reaching target space zone, then we calculate the rising 
distance  by moving the arm up or down to make the tip in the 
target plane zone, in this way, paths of configurations 
q={dis,?
i
,?
i
:i=1,…,N} are obtained. There is a corresponding 
summation of distances from discrete points along the sections 
to the reference straight line for every path, and the minimum 
one of summations is calculated, that is MDS. After choosing 
MDS, we divide the corresponding interval of each angle of 
{?
i
,?
i
:i=1,…,N} and compute the best configuration until (14) 
is satisfied. Finally, the optimal path with configuration 
corresponding q={dis,?
i
,?
i
:i=1,…,N} is obtained. 
  
IV. SIMULATION DESIGN AND RESULTS ANALYSIS 
A. Experiments Design 
Take an example of collision free path planning for a 
target [30,18,51], and we need three sections. In this 
experiment, we set the radius of spherical obstacle r
0
=2cm, 
r
b
=2cm, and r
oba
=3cm, r
target
=1cm, L=25cm, ??=0.1° , 
NUM=10. The design of experiments is as follows. 
TABLE I.  PROGRAMING DESIGN OF PATH PLANNING  
OBASTACLE_AVIODANCE_PROCEDURE(P init,P target,O oba) 
1. DEFINE O 1 as a target plane zone 
2. DEFINE O 2 as obstacle space zones 
3. DEFINE O 3 as a target space zone  
4. DEFINE P tip as tip point of Snake Arm 
5. DRAW_REFERENCE_LINE(P init,P target) 
6. ? and ??REGION_COLIIPING (1) 
7. q 1={? 1(i),? 1(j)}?COLLISION_DETECTION (?,?) 
8. q={dis,? 1,? 1}?REACHING_DETECTION (q 1) 
9. CALCULATE MDSs  
10. While Equation (14) is not satisfied 
11. ADD a section  
12. REPEAT step 6-11 with an added section  
13. END 
14. RETURN optimal q={dis,? i,? i:i=1,2,…,N} 
 
REGION_COLIPPING (i) 
1. INPUT i# section 
2. DIVIDE interval of each angle of q=(? i, ? i:i=1,…,N) 
3. EACH interval has NUM subintervals 
4. RETURN  ?={? 1(1), ,…, ? 1(NUM+1) } and 
?={? 1(1),…,? 1(NUM+1)} 
 
COLLISION_DETECTION (?,?) 
1. COMBINE the elements of ? with that of ? 
2. GET combinations of q i={? 1,? 1,…, ? i,? i} 
3. CALCULATE the poses of  q i  
4. If  the arm does not collide with  O 2  
5. Keep q i 
6. Else  
7. CALCULATE next q i 
8. RETURN  q i 
 
REACHING_DETECTION (q
i
) 
1. CALCULATE P tip of  q i 
2. If P tip?O 3≠? 
3. Save q i and calculate rising distance 
4. Else  
5. CALCULATE P tip of  next q i 
6. RETURN  q={dis,? i,? i:i=1,2,…,N} 
The procedure of REGION_COLIPPING() is designed to divide the intervals of angles. The 
procedure of COLLISION_DETECTION() aims to judge whether the Snake Arm collides 
with obstacles or not. The procedure of REACHING_DETECTION() keeps the 
configurations that satisfying the conditions of the tip reaches the target plane zone when the 
number of active sections is i. 
Values and regions 
of bending angles 
of 1# section
?1(7) is chosen 
for the next loop 
?1(1) ?1(2) ?1(3) ?1(4) ?1(5) ?1(6) ?1(7) ?1(8) ?1(9)
?N(1) ?N(2) ?N(3) ?N(4) ?N(5) ?N(6) ?N(7) ?N(8) ?N(9)
?1(7)
?1(8)
?N(4) ?N(5)
Values and regions 
of bending angles 
of N# section
Values and regions 
of bending angles 
of 1# section
Values and regions 
of bending angles 
of N# section
THE FIRST LOOP
THE SECOND LOOP
?1(6)
?N(3)
Fig. 5. Principle of region clipping search method and the red regions 
are reserved in each loop, where the red subintervals are chosen in each 
loop. 
3231
  
(1). Plan a path without obstacles or with obstacles that 
locates far from the origin and the target, which has no effect 
on the path. For example, path planned in an environment 
without obstacles, as shown in Fig. 6(a). 
(2). Choose a point [3.90,2.25,5.45] near the first section 
of path in Fig. 6(a), 1# obstacle is centered on the chosen point, 
and the path avoiding 1# obstacle is depicted in Fig. 6(b).  
(3). Choose another point [6.15,10.67,23.86] on the 
second section of path in Fig. 6(b), 2# obstacle is centered on 
this second point, and a path avoiding 1# and 2# obstacles is 
given in Fig. 6(c).  
(4). Choose a third point [21.34,14.93,43.35] on the third 
section of path in Fig. 6(c), 3# obstacle is centered on this 
point, and a path avoiding 1#, 2# and 3# obstacles is shown in 
Fig. 6(d).  
(5). Views of all the figures are the same one. 
Data of experiments (1)-(4) are shown in TABLE II. The 
way we choose obstacles guarantees the obstacles have certain 
effect on the path, for the collision free method requires 
searching solutions consecutively. In this way, the path 
planning with special obstacle chosen indicates feasibility of 
obstacle avoidance strategy. 
 
 
B. Results Analysis 
Through analysis of given algorithm and corresponding 
designed simulations, we can get conclusions as follows. 
First, based on region clipping search method, a lower 
time complexity O(LOOP?(K? NUM)
2N
) (K is the number of 
chosen points on the arm, definitions of LOOP and NUM are 
given in above sections) is got according to the loops in above 
tables. We do not give path solved by blind search, for its 
computing complexity is enormous as O(N
2π/??
) if we want to 
get a same precision as ?? with the new method. The bigger 
the N, the more obvious the difference. 
Second, when a target and some obstacles are set in the 
space, we can get a suitable path according to the given 
algorithm, but another path can be also obtained by adding 
another section or more, as shown in Fig. 7. The more the 
number of obstacles is, the more number of sections we need, 
so we can change the rule of stopping loops in the algorithm, 
and choose a path with a more appropriate number of sections. 
Third, due to the existence of rising distance, we adopt a 
projection strategy is adopted to simplify the planning 
problem, but paths above or below obstacles are ignored. It 
leads to some insoluble cases, for example, when a lot of 
obstacles distribute around Z-axis and between the origin and 
the target, there is no path according to the projection strategy, 
but in fact, there exist paths passing through above or below 
the obstacles. So, the avoidance strategy has expectations to 
be improved. 
TABLE II.  DATA RESPONSING TO THE SOLUTION PATHS IN FIG. 6. 
Fig.6 Target Obstacles 
Bending Angles Rotation Angles Rising Distance 
Tip Point 
{? 1,? 2,? 3}(radian) {? 1,? 2,? 3}(radian) dis(cm) 
(a) 
[30,18,51] 
none {0.62,-0.15, 0.32} {0.54,0.54, 0.54} -13.99 [30.01,18.01,51.00] 
(b) 1# [3.90,2.25,5.45] {0.49,0.65,-0.10} {1.22,6.00,6.79} -11.34 [30.03,17.95,51.00] 
(c) 
1# [3.90,2.25,5.45] 
2# [6.15,10.67,23.86] 
{0.71,0.96,0.57} {1.35,5.41,1.44} -9.57 [30.02,17.94,51.00] 
(d) 
1# [3.90,2.25,5.45] 
2# [6.15,10.67,23.86] 
3# [21.34,14.93,43.35] 
{0.60,1.07,1.13} {1.42,6.24,3.99} -7.08 [29.95,17.97,51.00] 
 
0
20
40
0
10
20
30
-10
0
10
20
30
40
50
60
x3(cm) y3(cm)
z3(cm)
Target
  
0
20
40
0
10
20
30
-10
0
10
20
30
40
50
60
x3(cm) y3(cm)
z3(cm)
1# Oba
Target
0
20
40
0
10
20
30
-10
0
10
20
30
40
50
60
x3(cm) y3(cm)
z3(cm)
Target
1# Oba
2# Oba
0
20
40
0
10
20
30
-10
0
10
20
30
40
50
60
x3(cm) y3(cm)
z3(cm)
Target
3# oba
1# oba
2# oba
 
(a)                                                        (b)                                                          (c)                                                       (d) 
Fig. 6. Simulations of solution paths of three sections while adding an obstacle in succession. The blue curve is path solved, the pink line is the straight 
reference line, and the red points are endpoints of section. (a) shows a path with an obstacle far from the target and the origin. (b) shows a path avoids 1# 
obstacle chosen from path in (a). Then 2# obstacle is chosen on path in (b), and the path avoiding two obstacles is depicted in (c). The path with three 
obstacles is shown in (d) for the same target. All the figures are on the same view. 
3232
  
 
V.  CONCLUSIONS AND FUTURE WORK 
In this paper, we aim to plan a feasible path as quickly as 
possible for AFTIR while avoiding obstacles. Path planning 
of continuum robot is defined firstly. When it comes to 
avoidance strategy, we formulate the planning problem as a 
nonlinear constrained optimization and what we need is to 
solve the problem using a forward search method. We 
emphasis the improvement on search method, and the search 
method based on region clipping is presented to reduce 
computing time complexity. During the planning process, we 
present a projection strategy through defining target plane 
zone, target space zone, and obstacle space zone. At the same 
time, we make a fictitious straight line as an object of 
reference between the original point and the target point. 
These methods are used to simplify the planning problem. 
When the tip of Snake Arm reaches the target plane zone, 
MDS with reference straight line is calculated to optimize the 
solutions. Simulations of region clipping and collision free 
path planning algorithm are carried out to demonstrate 
excellent performance of the novel search method and 
feasibility of the planning strategy. 
In future work, improvements will be made to adapt 
special situations and a more congested environment with 
complex obstacles, that is, the strategy will be more universal. 
We also plan to apply the strategy to practical experiments of 
prototype, and an integrated motion planning software to 
guide users conveniently will be designed. 
ACKNOWLEDGMENT 
This work was supported by Robotics Institute of Civil 
Aviation University of China. 
REFERENCES 
[1] G. Ch. Niu, Z. Ch. Zheng, Q. J. Gao, W. J. Wang, and L. Wang, “A 
novel design of aircraft fuel tank inspection robot,” TELKOMNIKA, 
vol. 11, no. 7, pp. 3684-3692, July 2013. 
[2] R. Buckingham, “Snake arm robots,” Industrial Robot: An 
International Journal, vol. 29, no.3, pp. 242-245, 2002. 
[3] N. Simaan, “Snake-like units using flexible backbones and actuation 
redundancy for enhanced miniaturization,” in Proc. IEEE Int. Conf. on 
Robotics and Automation, Barcelona, 2005, pp. 3012-3017. 
[4] W. McMahan, B. A. Jones, and I. D. Walker, “Design and 
implementation of a multi-section continuum robot: Air-Octor,” in  Pro. 
IEEE/RSJ Int. Conf. on Intelligent Robots and Systems, Edmonton, 
2005, pp. 3345-3352.  
[5] W. McMahan, B. A. Jones, V. Chitrakaran, M. Csencsits, M. Grissom, 
M. Pritts, C. D. Rahn, and I. D. Walker, “Field trials and testing of the 
OctArm continuum manipulator,” in Proc. IEEE Int. Conf. on Robotics 
and Automation, Orlando, 2006, pp. 2336-2341. 
[6] R. J. Webster III, A. M. Okamura, and N. J. Cowan, “Toward active 
cannulas: miniature snake-like surgical robots,” in Proc. IEEE/RSJ Int. 
Conf. on Intelligent Robots and Systems, Beijing, 2006, pp. 
2857-2863. 
[7] G. Chen, M. T. Pham, and T. Redarce, “Development and kinematic 
analysis of a silicone-rubber bending tip for colonoscopy,” in Proc. 
IEEE/RSJ Int. Conf. on Intelligent Robots and Systems, Beijing, 2006, 
pp. 168-173. 
[8] M. Rolf and J. J. Steil, “Constant curvature continuum kinematics as 
fast approximate model for the bionic handling assistant,” in 2012 
IEEE/RSJ Int. Conf. on Intelligent Robots and Systems, pp. 3440-3446. 
[9] Mehling J S, Diftler M A, Chu M, and Valvo, M, “A Minimally 
invasive tendril robot for in-space inspection”, in the First 
IEEE/RAS-EMBS Int. Conf.  on Biomedical Robotics and 
Biomechatronics,2006, pp: 690-695.  
[10] Dupont P E, Lock J, Itkowitz B, Evan Butlerl. “Design and control of 
concentric-tube robots”. IEEE TRANSAC TIONS ON ROBOTICS, 
vol.26, no. 2, pp: 209-225,2010. 
[11] G. S. Chirikjian and J. W. Burdick, “An obstacle avoidance algorithm 
for hyper-redundant manipulators,” in 1990 IEEE Int. Conf. on 
Robotics and Automation, pp. 625–631 vol.1.  
[12] L. A. Lyons, R. J. Webster, and R. Alterovitz, “Motion planning for 
active cannulas,” in 2009 IEEE/RSJ Int. Conf. on Intelligent Robots 
and Systems, pp. 801–806. 
[13] I. S. Godage, D. T. Branson, E. Guglielmino, G. A. Medrano-Cerda, 
and D. G. Caldwell, “Shape function-based kinematics and dynamics 
for variable length continuum robotic arms,” in 2011 IEEE Int. Conf. 
on Robotics and Automation, pp. 452–457. 
[14] I. S. Godage, D. T. Branson, E. Guglielmino, and D. G. Caldwell, “Path 
planning for multisection continuum arms,” in Proc. IEEE Int. Conf. 
on Mechatronics and Automation, Chengdu, 2012, pp. 1208-1213.  
[15] J. Xiao and R. Vatcha, “Real-time adaptive motion planning for a 
continuum manipulator,” in 2010 IEEE/RSJ Int. Conf. on Intelligent 
Robots and Systems, pp. 5919–5926. 
[16] V. Duindam, R. Alterovitz, S. Sastry, and K. Goldberg, “Screw-based 
motion planning for bevel-tip flexible needles in 3D environments with 
obstacles,” in 2008 IEEE Int. Conf. on Robotics and Automation, pp. 
2483-2488. 
[17] J. J. Xu, V. Duindam, R. Alterovitz, and K. Goldberg, “Motion 
planning for steerable needles in 3D environments with obstacles using 
rapidly-exploring random trees and backchaining,” in 4th IEEE Conf. 
on Automation Science and Engineering, 2008, pp. 41-46. 
[18] R. Alterovitz, T. Simeon, and K. Goldberg, “The stochastic motion 
road map: a sampling framework for planning with Markov motion 
uncertainty,” Robotics: Science and Systems III, pp: 246-253, 2007. 
[19] L. G. Torres and R. Alterovitz, “Motion planning for concentric tube 
robots using mechanics-based models”, in 2011 IEEE/RSJ Int. Conf. 
on Intelligent Robots and Systems, San Francisco, 2011, pp: 
5153-5159. 
[20] Q. J. Gao, L. Wang, G.Ch. Niu and W. J. Wang, “Path planning for 
continuum robot based on target guided angle,” Beijing Hangkong 
Hangtian Daxue Xuebao/Journal of Beijing University of Aeronautics 
and Astronautics, vol. 39, no. 11, pp. 1486-1490, November 2013. 
[21] W. Rudin, Principles of Mathematical Analysis (Third Edition), USA: 
McGraw-Hill, Inc, 1976, pp. 83-97. 
 
0
20
40
0
20
40
-30
-20
-10
0
10
20
30
40
x(cm)
y(cm)
z(cm)
Pipelines
Target
Tank bottom
Path 1
Path 2
 
Fig. 7. Different solution paths for a same target by changing the rule of 
stop loops in the given algorithm, where there are Path 1 of three 
sections and Path 2 of two sections for a target [19,17,35]. 
3233
