Automatic Real-World Assembly of Machine-Designed Structures
Luzius Brodbeck and Fumiya Iida
Abstract— Several approaches have been presented which
allow robots to build structures to adapt themselves or their
environments. To autonomously build these structures, a design
must be made, from which instructions for the fabrication
process can be derived. For a constrained fabrication process,
e.g. considering the limited range of a robot, this transfer can
be cumbersome. We present a local building process based on
a sequence of two distinct operations, which implicitly encodes
the shape of a structure. Given this encoding, the structure can
readily be built with a real-world robotic system.
We show automatic design of structures reaching out of the
robot’s range and fulﬁlling stability and strength constraints
using an evolutionary design algorithm. The ﬁnal design can
then be built with a robotic arm from wooden cubes and hot
melt adhesives. We demonstrate the whole process including
the construction of a structure from more than thirty cubes
with our real-world setup. We expect that automatic design
and construction can further improve the physical adaptability
of robotic systems.
I. INTRODUCTION
Making robots versatile and enabling them to achieve
unanticipated tasks is an ongoing challenge in robotics.
Improving the adaptability of robots can on the one hand
be done on the control side, for example using learning
algorithms to improve the performance for different tasks
with a ﬁxed physical design. On the other hand, a robot can
be built such that it is able to adapt its physical shape to
changing requirements, which is the research direction we
are investigating in this paper.
To enable a robot to adapt its shape, it must be con-
structed such that it can perform this operation. Further
than that, given a task, a target shape and a reconﬁguration
procedure must be developed or at hand. This allows the
robot to transform from its initial shape to a second shape
suitable to solve the task. Several approaches have previously
been proposed for physically adaptive robotic systems. Self-
assembling systems are designed to develop larger structures
from an arbitrary initial distribution of modules using differ-
ent types of actuation and control methods [1]–[3]. Modular
self-reconﬁgurable robots consist of a set of modules, which
can realign and change connections between themselves to
alter the overall shape of the assembly [4]–[7]. A wide range
of connection mechanisms has been applied to modular self-
reconﬁgurable systems.
This work was supported by the the ETH Zurich Research Grant ETH-
23-10-3, the Swiss National Science Foundation Professorship Grant No.
PP00P2123387/1, and the Swiss National Science Foundation through the
Swiss National Centre of Competence in Research Robotics.
L. Brodbeck and F. Iida are with the Bio-Inspired Robotics Laboratory,
Department of Mechanical and Process Engineering, ETH Zurich, 8092
Zurich, Switzerland (email: [luzius.brodbeck fumiya.iida]@mavt.ethz.ch).
Real-World
Evolutionary
Structure Design
Simulation
Automatic Assembly
Task Definition
Fitness Measure
A S A A S A S …
Fabrication Sequence
Fig. 1. Automatic design and real-world assembly: Given a task and a
corresponding ﬁtness measure, all further steps can be performed automat-
ically. First, an appropriate structure is designed. Then, the corresponding
fabrication sequence can readily be executed by the robot.
Another method to extend the physical shape of robots is
the use of passive elements. Such systems were presented
using trusses [8] or self-hardening foam [9]. We previously
presented our approach dubbed Robotic Body Extension
(RBE) which is based on the use of the unconventional ma-
terial Hot Melt Adhesives (HMAs) [10]. HMAs are polymer-
based thermoplastics [11]. They were used on the one hand to
connect parts and on the other to additively fabricate freeform
structures. These processes allow a robot for example to
adapt its end-effector to different tasks and combining it with
other passive or active objects [12].
For the automatic design of robotic systems, genetic algo-
rithms are a popular choice. The renowned work by K. Sims
[13] demonstrated the power of such a design approach
in simulation. Much research later focused on the transfer
from simulations to the real world. The ﬁeld of evolutionary
hardware applied evolutionary algorithms to hardware design
optimization tasks [14]. In evolutionary robotics they were
used to design simple robots and their controllers [15],
e.g. Lipson and Pollack have used evolutionary algorithms
to design simple robots for locomotion tasks and directly
built the ﬁttest examples using rapid prototyping techniques
[16]. Recent work applied evolutionary algorithms to the
automatic design of soft robots [17], [18].
The focus of this paper is the transfer from simulated
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 1221
design to real-world construction, and how real-world con-
straints (e.g. structural stability and strength) can be consid-
ered in this process. As shown in Fig. 1, from an initial task
deﬁnition, a quantiﬁable ﬁtness measure has to be derived to
start the automatic design and construction process. The task
considered in this paper is reaching to a distant location out-
side of the robot’s range. The ﬁtness is primarily dependent
on the proximity of the structure to the target location.
Using this ﬁtness measure, the evolutionary structure de-
sign algorithm can automatically design a useful and stable
structure as well as the corresponding fabrication sequence.
From this sequence, the instructions for the robot can di-
rectly be derived, and the robot automatically assembles the
designed structure. The construction process only requires
two local operations, adding a building block or shifting the
whole structure, which are always executed at the same place
within the robot’s range. Using only these local operations
ensures that critical constraints such as for example the range
of the robotic arm are not violated throughout the building
process.
The rest of this paper is structured as follows. Section II
introduces the local operations as well as the details of the
evolutionary design algorithm. Construction of the designed
structures in real-world is shown in section III. The per-
formed experiment and its results are presented in section IV,
and section V contains conclusions and future work.
II. EVOLVING STRUCTURES
This section introduces the evolutionary design algorithm
for passive structures which can be directly fabricated by
an HMA based robotic setup. Therefore, the ﬁnal design
should not only consider the design target, but also stability
and feasibility of the construction process. In order to avoid
the need to transform the ﬁnal design into a series of
construction instructions — a process which is often hard to
formalize — an implicit encoding for the structure is chosen.
Rather than encoding the shape of the ﬁnal structure, the
encoding consists of a series of fabrication instructions which
implicitly deﬁne the ﬁnal structure. Therefore, in simulation
the opposite (and more straightforward) process is required,
deriving the ﬁnal shape from the fabrication instructions.
A. Encoding Construction Sequence
The fabrication instructions can be two processes, ﬁrst,
adding a cube, and second, shifting the whole structure as
illustrated in Fig. 2. Both of these processes are always
applied at the same location, referred to as building position.
This location is inside the robot’s range, and therefore the
process can always be executed irrespective of how far the
built structure already reaches out of the robot’s range.
If add is chosen, a cube is added from the top at the
building position. The only exception is when the cube
has to be placed through a narrow gap (i.e. between two
neighboring cubes), which is not feasible in the real world
implementation. In such a case the add instruction is dis-
carded. The shift instruction is parametrized with a direction;
the magnitude is ﬁxed to the side length of one cube. In
A: Shift
B: Add
Fig. 2. The automatic construction is based on two local operations.
A: Shifting the whole structure. B: Adding a cube on top of the structure.
the work presented here, the shift direction is limited to
the positive or negative x-direction. Resulting from this, the
design space is constrained to two dimensional structures.
The presented concepts could however be extended to three
dimensions. To guarantee that the robot can always reach to
the structure to shift it, the shift process is only executed if
there is a cube at the building position, which the robot can
always reach to grasp and shift the structure.
As introduced before, the genome encodes the fabrication
process. It is a sequence of ﬁxed length and each gene
contains an operation (add, shift, or none), and in the case of
the shift operation also a parameter indicating the direction
in which the structure is shifted. The operations are executed
in the order given by the genome.
B. Updating the Genome
To combine the genes of two parents, a one-point
crossover is performed. This means that both genomes are
split at the same arbitrary location and the ﬁrst part of
the ﬁrst genome is combined with the second part of the
second genome to form a new genome. For mutations, each
gene of the genome is reinitialized with a given mutation
probability. As a second type of mutation, the whole genome
can be circularly shifted, which corresponds to a change in
the position of the genome at which the building process is
started. The number of positions shifted is drawn at random
from a uniform distribution.
After mutation and crossover, the stability of each structure
has to be validated. While the selected encoding ensures
that the building process later on can be executed, there
are no guarantees on the stability of the resulting structure,
which however is critical for the given task. Therefore
stability is checked after each mutation or cross-over. If the
new structure is not stable, it is discarded and the update
step repeated. There are two criteria to be met: The HMA
connections between two cubes can only bear a certain stress
before failure, and the whole structure must not topple when
it is shifted over the edge of the fabrication workspace. Since
both criteria must not only be fulﬁlled by the ﬁnal structure,
but also during intermediate construction steps, they have to
be checked for all substructures after partial execution of the
1222
A
B C
Fig. 3. Stability criteria are checked by the evolutionary design algorithm
using a truss approximation of the target structure (A). B shows the truss
approximation, cyan stars mark ﬁxed nodes attached to the ground. The
structure deformed under its own weight is shown in C (deformations scaled
up ﬁve times). B and C were generated using [19].
construction sequence. The frequent use of the corresponding
algorithm requires a fast execution of these checks.
To calculate the stresses in all HMA connections, the
structure is transformed into a truss as illustrated in Fig. 3.
Each cube is represented by eight nodes, which are connected
by a total of 28 links, and the cubes are connected with
16 links per connection site. Using a linear elastic material
model with different Youngs moduli for wood (links within
cubes) and HMA (links between cubes), the deformations
and stresses can efﬁciently be calculated [19]. Given the
stresses in all links representing an HMA connection, an
equivalent stress is calculated and compared to the HMA
bonding strength [20].
Checking the second stability criterion, that the structure
does not topple, is done by calculating the horizontal position
of its center of mass. As long as it lies above the construction
surface, the structure will not topple.
C. Fitness Function
The evolutionary design algorithm requires a quantiﬁable
ﬁtness criterion. The selected design task throughout this
paper is reaching to a distant location outside of the robot’s
range. Therefore, the dominating factor is the proximity to
a speciﬁed target location at some horizontal distance from
the building position. To discourage unnecessary construc-
tion efforts, an increasing penalty is imposed on increasing
numbers of cubes n
cubes
. Furthermore, stability reserves are
rewarded by penalizing large maximums stresses ?
max
in the
HMA connections. The ﬁtness f is described by a function
of the following form:
f =w
dist
·(d
max
?d
struct
)?w
cubes
·n
cubes
+w
stress
·

1?
?
max
?
crit

where w are the weights of the three parts, d
max
is the
distance from building position to the target and d
struct
the
distance from the structure to the target location. In order to
achieve a different task, this ﬁtness function would have to
be replaced with another one reﬂecting the new goal.
Robotic Arm HMA supplier Gripper Built Structure
Nozzle Construction Surface Wood Cube
Fig. 4. The hardware and control setup for the automated assembly. A
control computer forwards the commands from the design algorithm to the
robot controller. The robot controller sends the according signals to the
robotic arm and its gripper as well as the pneumatic valve of the HMA
supplier. The HMA is pumped to the nozzle and a steady supply of wood
cubes is assumed.
III. REAL-WORLD CONSTRUCTION
The goal of this project is a construction process which
enables to build automatically designed structures in the real-
world. Furthermore, the structures which the robot builds
should not be limited to its reachable space unlike structure
formation using 3D-printers. In our setup, the structures are
built from wooden cubes, which can be manipulated by the
robot using a parallel gripper. To assemble these cubes, the
robot is equipped with an HMA supplier. The HMA material
forms strong bonds between the cubes when cooling down
to room temperature.
To facilitate the transfer from automatic design to con-
struction, the design space was limited to a sequence of two
feasible operation types as introduced in section II-A:
1) Add a cube at the center of the construction area
2) Shift the current structure
Since both operations are always executed at the same
location, they can always be executed without violating
any constraints of the real robotic arm. Both processes can
be executed using our hardware setup shown in Fig. 4. It
consists of three main components: A robotic arm, an HMA
supplier and a two ﬁngered parallel gripper. Further than that,
an HMA reservoir with pump ensures a steady supply of hot
HMA material and it is assumed that a supply of wooden
cubes is available. The robotic arm is a six axis Universal
Robotics UR5, which is mounted on a table. A Robatech
Concept B glueing system is used with a pneumatically
1223
TABLE I
PARAMETERS FOR AUTOMATIC DESIGN
Parameter Value
cube side length 3 cm
target location [4,0,15] side lengths
construction area length 12 side lengths
number of generations 100
genome length 75
population size 30
gene mutation probability 10 %
genome shift probability 2 %
?
crit
1.2 MPa
w
dist
1
w
cubes
0.01
w stress 1
controlled nozzle mounted to the robot’s end-effector in
parallel to the two-ﬁngered gripper. The building materials
are wooden cubes (s = 0.03m, m = 19g) and HMA
(ALFA H 5500/30), which is supplied at 160
?
C. The whole
system is controlled from an external desktop computer,
which is connected to the robot controller via Ethernet.
The control computer receives the genome of the designed
structure from the evolutionary design process and translates
the encoded add and shift operations into robot commands.
Shifting the structure only requires a horizontal motion of
the arm holding on the structure and a small vertical lift,
to ensure the structure does not lock between gripper and
ground. The add process depends on the previously built
structure surrounding the desired add location. Since the
added cube has to be connected to all its neighbors, some
of its surfaces, or surfaces of the existing structure, have
to be covered with HMA before the cube can be placed.
The approach path when placing is also chosen depending
on surrounding cubes to avoid collisions. The output of the
process is the ﬁnal structure as initially designed by the
evolutionary design algorithm.
IV. EXPERIMENTS
The performed experiment demonstrates the complete
process from automatic design to the physical construction
of the ﬁnal structure. For the design process, the evolutionary
algorithm presented in section II is employed. The resulting
design was then assembled by our real-world setup, using
wooden cubes connected with HMA.
A. Automatic Design
The design task for the evolutionary algorithm was to
reach as close as possible to a target location outside the
construction workspace of the robot. A stable structure for
this purpose had to be evolved. For comparison, ten simula-
tion runs were performed with the parameters set as shown in
table I. The simulations were run for 100 generations each.
Fig. 5 shows the ﬁtnesses increase through the course of the
simulation. The best design achieved a ﬁtness f =13.66.
Fig 6-A shows the three most successful individuals from
ten simulation runs. The course of evolution from the ﬁrst to
the last generation of the best run is shown in Fig. 6-B. It can
be seen that with increasing generation number the structure
10 20 30 40 50 60 70 80 90 100
0
2
4
6
8
10
12
14
Generations
Fitness
Fig. 5. Averaged ﬁtnesses (green: best, blue: mean, red: worst) with
standard deviation (shaded areas) for 10 simulation runs as detailed in
section IV-A.
approaches closer to the target position (red) while improving
stability and compactness. The third part of Fig. 6 illustrates
some intermediate steps of the construction process leading
to the ﬁnal structure. The ﬁttest structure was eventually
selected for construction in real-world.
B. Real-World Assembly
After the simulation, the structure with best ﬁtness score
was assembled using the real-world setup presented in
section III. Fig. 7-A shows the intermediate steps of the
construction process, which correspond to the simulation
results from Fig. 6-C. While the shift process can directly
be executed by gripping the structure and linearly moving it
by the side-length of one wooden cube, the implementation
of the add process is more complex. Three cases have to be
distinguished, depending on the previously built structure.
First, if a cube is already placed below the adding location,
a vertical connection is required. Second, if a cube is already
placed at one side of the adding location, a lateral connection
has to be made. The third case is the combination of the two
former cases. It is therefore shown in the time-series pictures
of Fig. 7-B. One side of the wooden cube is prepared with
HMA (2 in Fig. 7-B). After a rotation (3–4), it can be picked
with HMA on its side (5) for the lateral connection. Glue
is added to the add location for the vertical connection (6),
before the cube is placed at the add location (7–8). A cooling
time of 20 s is required for the HMA to form a strong bond
between the neighboring cubes. The whole process can also
be seen in the video ﬁle submitted with this paper. The whole
fabrication process requires 36 min.
C. Discussion
The presented experiment shows the feasibility of auto-
matic design and construction of structures reaching outside
the range of the robotic arm. The structures built so far
consist only of wooden cubes connected with HMA, i.e.
they are completely passive. Previous work has shown the
construction of automatically designed robots [16], [17].
1224
gen = 32 gen = 55 gen = 62 gen = 93
f = 13.66 f = 13.65 f = 13.61
A
gen = 01 gen = 05 gen = 10 gen = 21
B
i = 50 i = 60 i = 70 i = 75
C
i = 10 i = 20 i = 30 i = 40
Fig. 6. Results of the automatic design experiments. The structures are marked with green cubes, the red cubes represent the target locations and the
purple rectangles the construction surfaces. A: Fittest structures of the ten simulation runs. B: Evolution of the ﬁttest structure (f = 13.66 in A) over
100 generations. C: Intermediate construction steps of the ﬁttest structure. The ﬁnal structure is completed after 75 instructions i.
Although the construction processes in both cases required
only minimal human intervention (e.g. ”snapping in the
motors” [16]), the transfer to reality was not completely
automated. Also construction using 3D-printers or laser-
cutters limits the size of structures to the workspace of these
devices. The construction process presented in this paper is
automated except for the material supply and can produce
structures reaching outside the range of the robotic arm.
The design algorithm can also ensure stability properties
of the passive structures. Such structures can potentially be
useful for tasks such as reaching or structuring the envi-
ronment (e.g. to build a bridge of some sort), and previous
work has shown the feasibility of further extensions. The ﬁrst
option is the additive fabrication of freeform structures from
HMA material, which increases the design possibilities for
passive structures [10]. A second option is the combination
of passive structures with active units, e.g. containing motors
or sensors, to build active systems [12].
Some limitations come from the underlying assumptions
of the current setup. All structures designed and constructed
were limited to two dimensions. An extension to three
dimensions will signiﬁcantly enlarge the design space. The
required modiﬁcations to the design algorithm are minimal,
but affect the computational complexity of the problem. With
some adaptions to the basic operations, also an extension of
the real-world assembly seems possible. Another important
assumption is the availability of wooden cubes. The robot
relies on the manual supply of wooden cubes at a predeﬁned
location. Since it is not equipped with any sensors and all
actions are performed in a feedforward manner, it requests
conﬁrmation of the user before picking a cube. This process
could be automated, but the essential requirement for a
reliable supply with construction materials (wood and HMA)
cannot be relaxed.
The lack of sensor information could limit the precision
required to build larger structures. The local add and shift
processes as applied in the current demonstration only rely
on the last construction steps. In the demonstration using
more than thirty cubes the errors did not sum up in such a
way that would lead to the failure of a construction step.
V. CONCLUSION
This paper presents the implementation of a combination
of an evolutionary design algorithm and a robotic construc-
tion mechanism based on the use of HMAs, which allows
to automatically design and construct structures reaching
outside the robot’s range. The design algorithm ensures the
stability of the structure and the chosen encoding inherently
guarantees feasibility of fabrication process.
The simulation results show the development of structures
towards a target location. The rewards for low connection
stresses and efﬁcient use of construction materials result in
relatively compact and stable structures. The experiments
with the real-world robotic setup show the feasibility of the
construction process, which is a sequence of 75 operations
and uses more than thirty cubes which have to be success-
fully connected.
1225
i = 50 i = 60 i = 70 i = 75
i = 10 i = 20 i = 30 i = 40
A
5 6 7 8
1 2 3 4
B
Fig. 7. Real-world assembly of the ﬁttest structure. A: The same intermediate construction steps as in Fig. 6-C are shown. The structure is only supported
within the construction area (marked with black tape). B: Time-series pictures of an add-operation with two neighboring cubes. HMA has to be applied
at the side and below the added cube.
Future work on this project will contain the construction
of three-dimensional structures, which requires an adaptation
of the design algorithm and an extension of the real-world
implementation. Both aspects will contribute to the other
goals of building larger structures and increasing the task
complexity. Other potential extensions of this work are the
introduction of sensory feedback for fabrication and the
interaction with other objects present in the task space.
ACKNOWLEDGMENT
The authors thank Jeremias Seitz and Tonci Novkovic for
their contributions to the implementation of the evolutionary
design algorithm.
REFERENCES
[1] E. Klavins, “Programmable self-assembly,” IEEE Control Syst. Mag.,
vol. 27, no. 4, pp. 43–56, Aug. 2007.
[2] M. Tolley, M. Kalontarov, J. Neubert, D. Erickson, and H. Lipson,
“Stochastic modular robotic systems: A study of ﬂuidic assembly
strategies,” IEEE Trans. Robot., vol. 26, no. 3, pp. 518–530, June
2010.
[3] R. Gross and M. Dorigo, “Self-assembly at the macroscopic scale,”
Proc. IEEE, vol. 96, no. 9, pp. 1490–1508, Sept. 2008.
[4] T. Fukuda and S. Nakagawa, “Dynamically reconﬁgurable robotic
system,” in Proc. 1988 IEEE Int. Conf. Robotics and Automation,
vol. 3, Apr. 1988, pp. 1581–1586.
[5] M. Yim, D. Duff, and K. Roufas, “PolyBot: a modular reconﬁgurable
robot,” in Proc. 2000 IEEE Int. Conf. Robotics and Automation, vol. 1,
Apr. 2000, pp. 514–520.
[6] S. Murata, E. Yoshida, A. Kamimura, H. Kurokawa, K. Tomita, and
S. Kokaji, “M-TRAN: self-reconﬁgurable modular robotic system,”
IEEE/ASME Trans. Mechatronics, vol. 7, no. 4, pp. 431–441, Dec.
2002.
[7] E. H. Østergaard, K. Kassow, R. Beck, and H. H. Lund, “Design of the
ATRON lattice-based self-reconﬁgurable robot,” Autonomous Robots,
vol. 21, pp. 165–183, 2006.
[8] S. Yun and D. Rus, “Optimal self assembly of modular manipulators
with active and passive modules,” Autonomous Robots, vol. 31, pp.
183–207, 2011.
[9] S. Revzen, M. Bhoite, A. Macasieb, and M. Yim, “Structure synthesis
on-the-ﬂy in a modular robot,” in Proc. 2011 IEEE/RSJ Int. Conf.
Intelligent Robots and Systems, Sep. 2011, pp. 4797–4802.
[10] L. Brodbeck, L. Wang, and F. Iida, “Robotic body extension based
on hot melt adhesives,” in Proc. 2012 IEEE Int. Conf. Robotics and
Automation, May 2012, pp. 4322–4327.
[11] E. Sancaktar, “Classiﬁcation of adhesive and sealant materials,” in
Handbook of Adhesion Technology, L. F. M. da Silva, A.
¨
Ochsner,
and R. D. Adams, Eds. Springer, 2011, pp. 261–290.
[12] L. Brodbeck and F. Iida, “Enhanced robotic body extension with
modular units,” in Proc. 2012 IEEE/RSJ Int. Conf. Intelligent Robots
and Systems, Oct. 2012, pp. 1428–1433.
[13] K. Sims, “Evolving virtual creatures,” in Proceedings of the 21st
annual conference on Computer graphics and interactive techniques,
ser. SIGGRAPH ’94. New York, NY , USA: ACM, 1994, pp. 15–22.
[14] J. Lohn and G. Hornby, “Evolvable hardware: using evolutionary com-
putation to design and optimize hardware systems,” Computational
Intelligence Magazine, IEEE, vol. 1, no. 1, pp. 19 – 27, feb. 2006.
[15] J. C. Bongard, “Evolutionary robotics,” Commun. ACM, vol. 56, no. 8,
pp. 74–83, Aug. 2013.
[16] H. Lipson and J. Pollack, “Automatic design and manufacture of
robotic lifeforms,” Nature, vol. 406, no. 6799, pp. 974–978, 2000.
[17] J. Hiller and H. Lipson, “Automatic design and manufacture of soft
robots,” IEEE Trans. Robot., vol. 28, no. 2, pp. 457–466, Apr. 2012.
[18] J. Rieffel, D. Knox, S. Smith, and B. Trimmer, “Growing and evolving
soft robots,” Artiﬁcial Life, pp. 1–20, Feb. 2013.
[19] H. Rahami. (2007, March) Truss analysis. [Online].
Available: http://www.mathworks.com/matlabcentral/ﬁleexchange/
14313-truss-analysis
[20] L. Wang and F. Iida, “Physical connection and disconnection control
based on hot melt adhesives,” IEEE/ASME Trans. Mechatronics,
vol. 18, no. 4, pp. 1397–1409, 2013.
1226
