Single-Loop Control and Trajectory Following
of a Flapping-Wing Microrobot
Pakpong Chirarattananon, Kevin Y Ma, and Robert J Wood
AbstractÑInspired by the agility of ßying insects and the
recent development on an insect-scale aerial vehicle, we propose
a single-loop adaptive ßight control suite designed with an
emphasis on the ability to track dynamic trajectories as a
step towards the goal of performing acrobatic maneuvers as
observed in real insects. Instead of the conventional approach of
having cascaded control loops, the proposed controller directly
regulates the commanded torques to stabilize the attitude
and lateral position in a single loop. The method is veriÞed
by performing trajectory following ßights with the insect-
like robot. The results show that the position errors during
trajectory following ßights are comparable to those observed
from steady hovering ßights.
I. INTRODUCTION
Insects are amongst the most diverse groups of animals
on the planet. Flying insects are capable of exhibiting com-
plex aerial feats unmatched by other ßying animals. The
exceptional maneuverability of these ßying insects inspires
biologists to advance their understanding of ßapping-wing
aerodynamicsandinsectßight[1],[2],[3],promptingseveral
efforts to develop insect-scale aerial vehicles [4], [5].
One of the recent successful prototypes from the
RoboBees project demonstrated its Þrst unconstrained ßight
[6]. The 80mg Micro Aerial Vehicle (MAV) shown in Þgure
1 is a result of the culmination of research in meso-scale ac-
tuation and manufacturingtechnology [7], [8]. The ßapping-
wing robot is able to generate body torques and sufÞcient
lift force [9] satisfying the key requirements for stable ßight
with the aid of an active ßight controller [6].
In an effort to improve the ßight performance demon-
strated in [6], the lack of comprehensive knowledge of
the system and variation caused by imperfect fabrication
motivated the development of a suite of adaptive ßight con-
troller capable of coping with model uncertainties [10]. This
brought about marked improvement in ßight performance
as evidenced by a reduction in position errors, particularly
for hovering ßights. Moreover, the Þdelity of this ßight
controller was further demonstrated in vertical takeoff and
landing ßights.
This work was partially supported by the National Science Foundation
(award number CCF-0926148), and the Wyss Institute for Biologically
Inspired Engineering. Any opinions, Þndings, and conclusions or recom-
mendations expressed in this material are those of the authors and do not
necessarily reßect the views of the National Science Foundation.
The authors are with the School of Engineering and Applied Sciences,
Harvard University, Cambridge, MA 02138, USA, and the Wyss institute
for Biologically Inspired Engineering, Harvard University, Boston, MA,
02115, USA (email: chirarat@fas.harvard.edu; kevinma@seas.harvard.edu;
rjwood@eecs.harvard.edu).
1 cm
Fig. 1. Photograph of a biologically-inspired ßapping-wing robot next to
a 16-pin dual in-line package (DIP) integrated circuit for scale.
In ßight controlof MAVs ofsimilar dynamicsÐquadrotors,
it is common to divide a controller into an inner loop and an
outer loop [11], [12], [13]. This also applies to our previous
workin [10]. This approachrelies onthe assumptionthat the
dynamics of the inner loop is signiÞcantly faster than that
of the outer loop, hence two loops could be arranged in a
cascaded conÞguration. In this case of [10], the inner loop,
which control the attitude dynamics, takes the output from
the lateral controller in the form of an attitude setpoint as
its input. While this was shown to be an effective method
to produce steady hovering ßights, it is conceivable that the
cascaded control architecture may lead to unavoidable delay
due to the mentioned assumption, rendering the controller
unsuitable for more aggressive ßight trajectories.
As a consequence, in this paper we present the develop-
mentofaßightcontrollerthatdiscardthecascadedstructure,
integrating the lateral controller and the attitude controller
into a single block. Not only does this eliminate the delay
in the control loop, but it also effectively improves the
position tracking ability by taking into account the third
and fourth order derivative of the desired position while
generating the control outputs. We veriÞed the capability of
the proposed controller in trajectory following ßights using
smooth trajectories generated from an optimization routine
outlined in the later part of the paper.
Notation:
¥ In equations, bold letters indicate vectors.
¥ Given an unknown parameter ?, its estimate is rep-
resented by ö ?. The estimation error ÷ ? is deÞned as
÷ ?= ö ???.
¥ Otherwise,ö á represents a unit vector.
¥ High order derivatives are denoted by bracketed super-
script, i.e., ?
(n)
=d
n
?/dt
n
.
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 37
ö
z
?
x
Pitch axis
Yaw axis
Roll axis
ö
y
ö
x
?
y
?
z
X
Y
Z
Fig. 2. DeÞnitions of the inertial frame, the body frame, and roll, pitch,
and yaw axes.
II. ROBOT DESIGN AND DYNAMIC MODEL
A. Robot design
The robot prototype used in this paper was Þrst pre-
sented in [9]. The robot is fabricated in the Harvard Micro-
robotics Laboratory using the Smart Composite Microstruc-
tures (SCM) manufacturing process [14], [9]. The robot in
Þgure 1 weights 80mg and has a wing span of 3.5cm. It is
composed of two bimorph piezoelectric actuators, serving as
ßightmuscles. By applyinga voltageacrossthe piezoelectric
plates, the actuator acts as a bending cantilever beam. The
trajectory of the actuator tip approximates a linear motion.
This is then translated into a rotational ßapping motion of
the wing via a ßexure-based four-bar transmission.
The actuator, transmission, and wing compose a mechan-
ical system with properties resembling a second order linear
system, roughly equivalent to an ideal forced mass-spring-
damper system [15]. Energystorage and dissipation is domi-
nated by the elastic potential energy of the bending actuator,
thekineticenergyoftheßappingwingandsurroundingßuid,
and the aerodynamic damping from air drag on the wing.
As a consequence, nominal sinusoidal ßapping motion is
achieved by using a sinusoidal driving signal. By keeping
the frequencyconstantaroundthe system resonantfrequency
(Å 120Hz), the ßapping stroke amplitude is maximized.
Thrust can be regulated by amplitude modulation.Alteration
ofwingtrajectoriesallowstherobottogeneratebodytorques
along its pitch, roll, and yaw axes as deÞned in Þgure 2.
Moredetailsonthegenerationofbodytorquesandrespective
ßapping schemes can be found in [6], [10].
Usinga combinationoftheoreticalapproximationandem-
pirical data, we generated a mapping between input signals
and four output signals: thrust, roll torque, pitch torque,
and yaw torque [6], [10]. This leaves the remaining task
of devising a controller to determine the thrust and torques
required by the robot to realize pre-planned trajectories.
B. Dynamic model
Ignoring oscillating components, we treat the robot as a
rigid body in three dimensional spaceÐthe standard approach
taken in the literature[2], [16]. In bodyattached coordinates,
roll, pitch, and yaw axes and their respective angular veloc-
ities ?
x
, ?
y
, and ?
z
are deÞned along ö x, ö y, and ö z directions
as illustrated in Þgure 2.
Given the symmetry of the vehicle, we assume that the
moment of inertia matrix J is diagonal and its elements
are J
x,
, J
y
, and J
z
. The attitude dynamics in the body
frame depends on the total torque acting on the robot and is
described by the EulerÕs equation for rigid body dynamics:
Jú ? =
X
??(??J?). (1)
Let R denote a rotation matrix relating the orientation of a
vectorinthebodyframeintotheinertialframe,itcanalsobe
presented as R=

ö x ö y ö z

. Its derivative can be written
as a function of angular velocity and vice versa.
ú
R=

?
z
ö y??
y
ö z ?
x
ö z??
z
ö x ?
y
ö x??
x
ö y

,

?
x
?
y
?
z

=

ö zá
ú
ö y ö xá
ú
ö z ö yá
ú
ö x

=
?
?
R
13
ú
R
12
+R
23
ú
R
22
+R
33
ú
R
32
R
11
ú
R
13
+R
21
ú
R
23
+R
31
ú
R
33
R
12
ú
R
11
+R
22
ú
R
21
+R
32
ú
R
31
?
?
T
.
The translational dynamics of the robot also depends on
the orientation of the robot. In other words, the normalized
thrust ? (which has a dimension of acceleration, not force)
is nominally aligned with the ö z axis of the robot. It follows
that we can write the equation of motion of the robot as
m

¬
X
¬
Y
¬
Z

T
=mg+m?ö z, (2)
wherem denotes the mass of the robot,g is a gravityvector,
and X, Y, and Z are position of the robot in the inertial
frame.
Note that we have not taken into consideration additional
aerodynamic effects that arise in free ßight. Such effects,
including unsteady ßow, are difÞcult to capture using simple
models that are suitable for real-time control purposes [3],
[17]. As a result, they are regarded as unmodeled dynamics
by the controller.
III. CONTROLLER DESIGN
The inherent instability of ßapping-wing MAVs [2], [3]
requires active ßight control. To prevent the robot from
crashing, the attitude controller must nominally align the
robotÕs thrust vector against gravity. In [6], we demonstrated
that using a ßight controller that possessed a large region
of attraction over the SO(3) space, the ßapping-wing robot
achieved stable hovering ßights. One distinctive character of
the proposed controller is the relaxation of control over the
exact yaw orientation as it is dispensable in controlling the
heading of the robot, and hence the lateral position of the
vehicle.
To attain more precise hovering, we identiÞed several
criticalunknownparametersthatsigniÞcantlyaffecttheßight
performance and re-designed an adaptive ßight controller
using sliding mode control techniques [10]. In this case, the
38
lateral position of the robot is regulated by changing the
attitude setpoint of the robot, while the altitude is controlled
separately. In other words, the lateral controller and the
attitude controller operate in a cascaded fashion. The lateral
controller determines the attitude setpoint by assuming that
the attitude dynamics are considerably faster than the lateral
dynamics, and therefore the closed-loop attitude dynamics
can be treated as a Þrst order lowpass system. In the mean
time, the attitude controller attempts to realize the attitude
setpoint and minimize the angular velocity of the robot. The
block diagram summarizing key components of this control
architectureisshowninÞgure3.Thismarkedlyimprovedthe
accuracy in position and substantially reduced visible oscil-
lations during hovering ßights as compared with [6]. Simple
lateral maneuverswere also demonstrated,nonetheless,there
was signiÞcant room for improvement.
Another drawback of cascading the lateral controller and
the attitude controller in the way implemented in [10] is that
the attitude controller always tries to minimize the rotational
rate. Since the rotational rate is related to the third order
derivative of the position, it is anticipated that a controller
that also determines a suitable angular velocity setpoint
wouldbringaboutbetterperformanceintrajectoryfollowing,
particularly when more aggressive movements are involved.
However, it is not trivial to evaluate the angular velocity
setpoint from the pre-planed trajectory and the current state
of the vehicle. The complication arises as we try to retain
provable Lyapunov stability while the exact yaw orientation
of the robot is not directly controlled. In this paper, we
propose a Lyapunov function that comprises of variables
made of various derivatives of position error projected on
to suitable directions. The outcome is a lateral position
controller that directly regulates the desired torques from
position error, bypassing the attitude controller and, thus,
dropping the assumption regarding the response of the at-
titude controller. The product is a more versatile controller
that is capable of more aggressive trajectory following in
addition to only steady hovering.
In this section, we present the derivation of the proposed
altitude controller and the lateral position controller based
on the sliding mode control method. Although they are
presented separately as illustrated in Þgure 4, they operate
in parallel rather than in a cascaded conÞguration. As a
consequence, they can technically be classiÞed as a single
control loop. Later, the controller is modiÞed to accommo-
date an adaptive component and the stability is veriÞed via
LyapunovÕs direct method.
A. Altitude Control
To begin, we deÞne a position vector (r) and the desired
position vector (r
d
) with respect to the inertial frame:
r =

X Y Z

T
r
d
=

X
d
Y
d
Z
d

T
. (3)
Given the robotÕs thrust ? and the gravity vector g from
equation (2), the translational dynamics of the robot is
Lateral
controller
Attitude
Controller
orientation
position
-
reference
position
attitude setpoint
thrust
torque
Altitude
Controller
Fig. 3. A block diagram illustrating the structure of the ßight controller in
[10]. Here the lateral controller computes the attitude setpoint as an input
for the attitude controller.
Lateral
controller
thrust
torque
Altitude
Controller
orientation
position
-
reference
position
Fig. 4. A simpliÞed block diagram showing the underlying structure of the
proposed single-loop controller. The attitude controller is incorporated into
the lateral controller which operates in parallel to the altitude controller.
described by
¬ r = ?ö z+g
= ?

R
13
R
23
R
33

T
?

0 0 g

T
. (4)
The altitude dynamics are given by the third row of equation
(4).
¬
Z = ¬ rá

0 0 1

T
= ?

ö zá

0 0 1

T

?g. (5)
For controlpurposes, we deÞne a sliding surface variableS
?
and the variable
¬
Z
r
as the following:
S
?
=

¬
Z?
¬
Z
d

+?
1

ú
Z?
ú
Z
d

+?
2
(Z?Z
d
)
=
¬
Z?
¬
Z
r
, (6)
where ?
i
Õs are positive constants. In this work, we presume
that the generated normalized thrust is approximately a
lowpass Þltered signal of the thrust input T, with ? being a
respective Þlter coefÞcient such that
ú
?=?(T ??). The time
derivative of S
?
is
ú
S
?
=
ú
?R
33
+?
ú
R
33
?
d
dt
¬
Z
r
= ?(T ??)R
33
+?(?R
32
?
x
+R
31
?
y
)?
d
dt
¬
Z
r
(7)
39
Here we propose a Lyapunov candidate function
V
?
=
1
2
S
2
?
.
Subsequently, the following control law
T =???
?1
R
?1
33

?(?R
32
?
x
+R
31
?
y
)?
d
dt
¬
Z
r
+K
?
S
?

,
with a positive constant gain K
?
and the measured thrust
given as ?=k¬ r+gk render the derivative of the Lyapunov
function negative deÞnite
ú
V
?
= S
?
ú
S
?
= ?K
?
S
2
?
² 0 .
According to the invariant set theorem, the system is stable
in a Lyapunov sense [18].
B. Lateral position control
Since the angular velocity is related to the third-order
derivative of the robotÕs position, we consider a variable e,
made up of the differences between the robotÕs position and
the setpoint and their derivatives.
e =

r
(3)
?r
(3)
d

+?
1
(¬ r?¬ r
d
)
+?
2
(ú r? ú r
d
)+?
3
(r?r
d
)
= r
(3)
?r
(3)
r
(8)
Note that for the lateral controller, we assume that thrust
is approximately constant, that is
ú
? is neglected. This is
a reasonable assumption given that, apart from the initial
takeoff period, the thrust rarely varies by more than 5%.
The third derivative of r then becomes
r
(3)
Å?
ú
ö z = ?(??
x
ö y+?
y
ö x). (9)
We propose the following sliding surface S
?
and the Lya-
punov function candidate V
?
:
S
?
=

?eá ö y/? eáö x/? ?
z

T
=
?
?
?
?
?
x
+?
?1

r
(3)
r
áö y

?
y
??
?1

r
(3)
r
áö x

?
z
?
?
?
?
, (10)
V
?
=
1
2
S
T
?
JS
?
. (11)
Notice that angular velocity terms appear in (10), linking the
attitude dynamics to the lateral dynamics. Using equations
(1)and(10),wecanwritethederivativeoftheslidingsurface
as
J
ú
S
?
=? ?(??J?)??
?1
J
d
dt
?
?
?
?
?

r
(3)
r
áö y


r
(3)
r
áö x

0
?
?
?
?
.
This suggests the commanded body torque
? = ??
?1
?
?
?
r
(3)
r
áö y
?r
(3)
r
áö x
0
?
?
??J?
+?
?1
J
d
dt
?
?
?
?
?

r
(3)
r
áö y


r
(3)
r
áö x

0
?
?
?
?
?K
?
S
?
, (12)
sothatthetimederivativeoftheproposedLyapunovfunction
is negative deÞnite and the system is proven stable:
ú
V
?
= ?S
T
?
K
?
S
?
?S
T
?
(S
?
?J?)
= ?S
T
?
K
?
S
?
²0.
Examining the control law in equation (12), it can be seen
that the third derivative of r could be written in terms
of angular velocity as in equation (9). Therefore, only
the second derivative of r is required, alongside the body
orientation and its Þrst derivative. Furthermore, that fact that
r
(3)
d
is included in r
(3)
r
implies that the controller effectively
tracks a setpoint for the angular velocity and its derivativeÐ
the property lacking in previous work [10].
C. Adaptive Control
In [10], we identiÞed six unknown parameters that were
crucial to accomplish steady hover: the misalignment of the
thrust vector from the ö z axis (?
x
and ?
y
), three unknown
torque offsets (?
o
=

?
ox
?
oy
?
oz

T
), and the normal-
ized thrust offset (T
o
). In this section, we present how the
proposedcontrolleris adaptedtotakeintoaccounttheaffects
of these unknowns. A predictor and an adaptive component
are also implemented to ensure that these estimates of this
unknowns converge to their true values and stability is still
guaranteed in the Lyapunov analysis.
1) Altitudecontrollaw: Forasmalldeviationofthethrust
vector from the presumed robot ö z axis, the thrust takes on
small lateral components, resulting in a slight modiÞcation
to equation (4).
¬ r=?(ö z+?
x
ö x??
y
ö y)?g (13)
Similarly, the thrust dynamics is modiÞed to include
the unknown offset by substituting T by T
c
? T
o
,
ú
?=?(T
c
?T
o
??),whereT
c
isthecommandedthrustinput.
The derivative of the sliding surface deÞned in equation (6)
becomes
ú
S
?
= (T
c
?T
o
??)(R
33
+?
x
R
31
??
y
R
32
)
+??
x
(?R
33
?
y
+R
32
?
z
)
+??
y
(?R
33
?
x
+R
31
?
z
)?
d
dt
¬
Z
r
.
DeÞning
µ = ?ö ?
x
(?R
33
?
y
+R
32
?
z
)+?ö ?
y
(?R
33
?
x
+R
31
?
z
)
+?R
31
?
y
??R
32
?
x
?d
¬
Z
r
/dt,
40
the following control signal
T
c
=
ö
T
o
+???
?1
R
?1
33
 
1?ö ?
x
R
31
R
?1
33
+ö ?
y
R
32
R
?1
33

?(µ +K
?
S
?
) (14)
makes the derivative of the sliding surface expressible as
ú
S
?
=
?
?
?(R
33
+R
31
ö ?
x
?R
32
ö ?
y
)
?R
33
?
y
??R
32
?
z
?R
31
R
?1
33
µ ?R
33
?
x
??R
31
?
z
?R
32
R
?1
33
µ ?
?
T
?
?
÷
T
o
÷ ?
x
÷ ?
y
?
?
?K
?
S
?
+?
÷
T
o
(?R
31
÷ ?
x
+R
32
÷ ?
y
)
= Y
?
÷ a?K
?
S
?
+?
÷
T
o
(?R
31
÷ ?
x
+R
32
÷ ?
y
), (15)
where we have deÞned a as a vector consisting of the three
unknownparametersandY
?
accordingly.The Þrst two terms
in equation (15) are the typical form that usually appears in
the derivation of adaptive sliding mode controller [18], [10].
The last term is handled explicitly in the last paragraph of
section III-C.4.
2) Lateral control law: Including the effect of ?
x
and ?
y
,
we deÞne an estimate of r
(3)
based on the estimates of ?
x
and ?
y
:
ö r
(3)
=?

ú
ö z+ö ?
x
ú
ö x?ö ?
y
ú
ö y

. (16)
It follows that the estimate of e from equation (8) can also
be written as ö e = ö r
(3)
? r
(3)
r
, where no change has been
made to r
(3)
r
. As a consequence, the sliding surface of the
lateral position controller is re-deÞned:
ö
S
?
=

?ö eáö y/? ö eáö x/? ?
z

=
?
?
?
?
?
x
?ö ?
x
?
z
+?
?1

r
(3)
r
á ö y

?
y
+ö ?
y
?
z
??
?1

r
(3)
r
áö x

?
z
?
?
?
?
. (17)
Using the deÞnition in equation(8), we deÞne
ú
ö r
(3)
r
= r
(4)
d
??

ö r
(3)
?r
(3)
d

??
2
(¬ r?¬ r
d
)??
3
(ú r? ú r
d
)
= ú r
(3)
r
+?
1

ö r
(3)
?r
(3)

, (18)
such that equations (16) and(18) give
ú r
(3)
r
áö y =
ú
ö r
(3)
r
á ö y??
1
??
z
÷ ?
x
ú r
(3)
r
áö x =
ú
ö r
(3)
r
áö x??
1
??
z
÷ ?
y
. (19)
Expressing the bodytorque as the commandedtorque?
c
and
theunknownoffset?
o
,? =?
c
+?
o
, weproposethefollowing
control law:
?
c
= ö ?
o
?
?
?
?
?
?1
r
(3)
r
áö y??
z
ö ?
x
??
?1
r
(3)
r
áö x+?
z
ö ?
y
0
?
?
??J?
+?
?1
J
?
?
?
?
?

r
(3)
r
á
ú
ö y+
ú
ö r
(3)
r
áö y


r
(3)
r
á
ú
ö x+
ú
ö r
(3)
r
áö x

0
?
?
?
?
+
?
?
ö ?
x
ú ?
z
-ö ?
y
ú ?
z
0
?
?
+
?
?
ú
ö ?
x
?
z
-
ú
ö ?
y
?
z
0
?
?
?K
?
ö
S
?
.
It can be shown that using the proposed control law and
equations (11), (17), and (19) the time derivative of the re-
deÞned sliding surface is
J
ú
ö
S
?
= ?K
?
ö
S
?
+(÷ ?
o
+Y
?
÷ a), (20)
where
Y
?
=
?
?
0 ?
1
J
x
?
z
0
0 0 ??
1
J
y
?
z
0 0 0
?
?
.
Observe that this proposed commanded torque ?
c
only con-
tains measurable variables and the adaptive parameters (
ú
ö ?
x
and
ú
ö ?
y
) that will be given in section III-C.4.
3) Predictor: Prior to presenting the adaptive algorithm,
we Þrst design a predictor. The idea is that some parameter
errors are reßected in prediction errors. This information
could be used in conjunction with the regular tracking
error to estimate the unknown parameters. This strategy is
generally known as composite adaptation [18]. In our case,
the predictor also has a vital role in the stability property of
the Lyapunov function candidate shown in the next section.
First, let s be a Laplace variable, we deÞne a Þrst-order
lowpass Þlter function f
?
(á) = ?(s+?)
?1
. The generated
thrust, therefore, can be written in the form
?=f
?
(T
c
?T
o
)=T
f
?T
o
,
where?
f
=f
?
(T
c
). The translational dynamics of the robot
in equation (13) then becomes
¬ r = g+(T
f
?T
o
)(ö z+?
x
ö x??
y
ö y)
¬ r?T
f
ö z?g = ?
x
T
f
ö x??
y
T
f
ö y?T
o
ö z+O(?T
o
). (21)
By neglecting the second-order effects, we can apply the
lowpass Þlter throughout twice and express the quantity on
the right hand side of equation (21) in vector form as
f
2
?
(¬ r?T
f
ö z?g) Å
?
?
?f
2
?
 
ö z
T

f
2
?
 
T
f
ö x
T

?f
2
?
 
T
f
ö y
T

?
?
T
a
= Wa. (22)
At this point, we can substitute the vectora by its estimate ö a
and the estimation error ÷ a and rearrange the terms so that all
measurable and known quantities are on the left hand side
of the equation and call it ?,
f
2
?
(¬ r?T
f
ö z?g)+Wö a = W÷ a
? = W÷ a. (23)
Note that the matrix W is also measurable in real time.
4) Adaptive implementation: Here we propose a single
Lyapunovfunctioncandidateforcontroloftheßapping-wing
MAV:
V =
1
2
S
2
?
+
1
2
ö
S
?
J
ö
S
?
+
1
2
T
÷ a
T
?
?1
÷ a+
1
2
÷ ?
T
o
?
?1
÷ ?
o
. (24)
The Þrst two terms in equation (24) correspond to altitude
controlandlateralpositioncontrol,whilethelattertwoterms
are penalty terms for errors in the estimation of unknown
41
Adaptive
Component
Aeromechanic Model
and
Waveform Generator
Robot
Motion Capture
System
orientation
Altitude
Controller
Lateral
Controller
-
position
reference
position
dynamics
driving
signals
thrust
torque
S
?
S
p
^ a
^
a
^
.
Adaptive Tracking Controller
      
Fig. 5. A block diagram showing the details of the adaptive controller and
complete feedback loop.
parameters. ? and ? are positive diagonal matrices acting
as adaptive gains.
Usingthecontrollaws presentedintheprecedingsections,
the derivativeofthe Lyapunovfunctioncandidateis obtained
by substituting in the results from equation (15) and (20),
ú
V = ?K
?
S
2
?
?
ö
S
T
?
K
?
ö
S
?
+S
?
Y
?
÷ a+
ö
S
T
?
(÷ ?
o
+Y
?
÷ a)
+?
÷
T
o
(?R
31
÷ ?
x
+R
32
÷ ?
y
)
+
ú
ö a
T
?
?1
÷ a+
ú
ö ?
T
o
?
?1
÷ ?
o
. (25)
Hence, we obtain the adaptive law for the unknown torque
offset,
ú
ö ?
o
=??
ö
S
?
.
For the estimation of a, we propose the following adaptive
algorithm:
ú
ö a = ??

Y
?
S
?
+Y
?
ö
S
?

??(?+?)
 
W
T
W

?1
W
T
?, (26)
where? is a positivediagonalmatrix and? is a matrixwith
zero diagonal elements:
?=
?
2
?
?
0 ?R
31
0
?R
31
0 R
32
0 R
32
0
?
?
. (27)
This incorporation of ? enables us to cancel out terms
that are the product of two parameter errors. Invertibility of
W
T
W depends on the rank condition of W. From equation
(22), it can be seen that W always has full rank before
Þltered. This might no longer be true after Þltered. However,
physically W is unlikely to be ill-conditioned. In practice
W
T
W was alwaysfoundtobeinvertible.Lastly,substitution
of equations (23), (26), and (27) into (25) yields
ú
V =?K
?
S
2
?
?
ö
S
T
?
K
?
ö
S
?
?÷ a
T
?÷ a²0, (28)
that is, the derivative of the Lyapunov function candidate is
negative deÞnite. To Þnalize the stability proof, the invariant
set theorem is applied. The value of V keeps diminishing as
long as S
?
,
ö
S
?
, and ÷ a are not all zeros. The fact that
ö
S
?
approaches zero does not immediately imply that the lateral
dynamics would be stabilized since when
ö
S
?
was deÞned
in equation (17), it includes ö ?
x
and ö ?
y
rather than their true
values. It is the inclusion of information from the predictor
that results in the last term of equation (28) which ensures
that the parameter estimates converge to their true values,
and hence
ö
S
?
eventually approaches S
?
and lateral stability
is satisÞed along with altitude stability.
IV. TRAJECTORY GENERATION
In smooth trajectory planning of robot manipulators, it
is common to minimize the average squared jerk along the
trajectory considered. This is in accordance with Þndings
in psychophysical experiments on human arm movements
[19]. In path planning of non-holonomic MAVs similar to
our robot or quadrotors, minimum squared snap is preferred
as the fourth order derivative in position can be related to
torque. Hence, the optimization becomes the problem of
minimizing some function of effort or torque inputs [16].
In this paper, we devised an algorithm similar to those
found in [16], [20]. The optimization routine computes a
smooth polynomial trajectory from speciÞed waypoints by
minimizing feedforward torque inputs while keeping the
Þrst four order derivatives of the position at the starting
and ending points zero. The derivatives of the position at
intermediate points are left unconstrained. The generated
trajectories appear similar to those generated by minimizing
the average squared snap along the trajectories.
V. EXPERIMENTS
A. Experimental Setup
Without onboard sensors and control, ßight control ex-
periments are carried out in a ßight arena equipped with
eight motion capture VICON cameras. These cameras pro-
vide real-time position and orientation feedback by tracking
retroreßective markers attached to the robot at the rate of
500Hz, covering a tracking volume of 0.3?0.3?0.3m.
Computation is performed by external computers running
an xPC target (MathWorks) environment. The control algo-
rithm is implemented at the rate of 10kHz for both input
sampling and output signal generation. Drive signals are
delivered to the robot via a bundle of four 51-gauge copper
wires after passing through a digital-to-analog converter and
a high voltage ampliÞer.
The closed-loop latency of the experimental setup was
found to be 12ms, sufÞciently small to experimentally
achieve stable ßights [6], [10]. The effect of a wire tether is
not taken into consideration due to its unpredictable nature.
However, simple calculations suggest its contribution should
not affect the ßight dynamics signiÞcantly.
Without direct measurements, velocity, acceleration, and
angular velocity are not available. In this paper, they are
estimated from the use of Þltered derivatives, resulting in a
slight inevitable delay to these measurements.
42
X (cm)
-10
0
10
Y (cm)
-5
0
5
Z (cm)
0
2
4
6
X position (cm)
?10 0 10
Y position (cm)
?5 0 5
Z position (cm)
4.0 5.0 6.0
0.0 0.5 1.0 1.5 2.0 2.5
time (s)
Fig. 6. (top) A 3D reconstruction of the trajectory from a 1.5-second
trajectory following ßight. The red line indicates a desired path and the blue
line is the actual trajectory. Grey lines and dashed lines are projections of
the colored lines. (bottom) Position-vs-time plots of the reference trajectory
and ßight path from the top Þgure along three axes.
Prior to performing unconstrained ßight experiments, the
robot prototype underwent a characterization process. This
began with visual inspection of the ßapping amplitude at
variousfrequenciestoidentifyasuitableoperatingfrequency,
where ßapping trajectories of both wings are large and
most symmetrical. Next, several open-loop takeoff ßightsÐ
or trimming ßightsÐwere carried out in the ßight arena. This
process allowed us to preliminarily identify inherent torque
offsets. These torque offsets vary considerably from robot to
robotas aresultofmanufacturingimperfections.Information
obtainedfromthesesteps is sufÞcienttoperformclosed-loop
experiments.
B. Hovering Flight
To verify that the proposed controller is capable of stabi-
lizingtherobot,we Þrstcommandtherobottohoveratasta-
tionarysetpoint.Afteraseveral5-secondßights,theadaptive
components tuned the parameter estimates sufÞciently close
X (cm)
-10
0
10
Y (cm)
-5
0
5
Z (cm)
0
2
4
6
X position (cm)
?10 0 10
Y position (cm)
?5 0 5
Z position (cm)
4.0 5.0 6.0
0.0 0.5 1.0 1.5 2.0 2.5 3.0
time (s)
Fig. 7. (top) A 3D reconstruction of the trajectory from a 2.0-second
trajectory following ßight. The red line indicates a desired path and the blue
line is the actual trajectory. Grey lines and dashed lines are projections of
the colored lines. (bottom) Position-vs-time plots of the reference trajectory
and ßight path from the top Þgure along three axes.
to their true values. In the absence of mechanicalfatigue, the
robot regularly stayed close to the setpoint with a position
error smaller than one body length. The Root Mean Square
(RMS) errors in position for example hoveringßights can be
found in Table I. This conÞrms that the performance of the
proposed controller is comparable to the previous adaptive
controller in [10]. This is consistent with hovering ßights
which the setpoint is stationary. Theoretically, the robot is
able to stay aloft indeÞnitely without crashing. In practice,
we attempt to minimize the total operating time to prevent
mechanical fatigue.
C. Trajectory Following
To demonstratethe trackingability ofthe proposedsingle-
loop controller, we demonstrate our ßapping-wing robot
performing smooth trajectories generated by the algorithm
described in section IV. The aim here is to inspect the robot
following similar trajectories at various speed.
43
TABLE I
COMPARISON OF THE RMS POSITION ERRORS FROM HOVERING
FLIGHTS AND TRAJECTORY FOLLOWING FLIGHTS.
Trajectory
RMS errors (cm)
X Y Z
hovering ßight 1 0.72 0.70 0.15
hovering ßight 2 1.25 0.57 0.12
1.0-second trajectory 1.24 1.01 0.16
1.5-second trajectory 0.84 0.82 0.13
2.0-second trajectory 0.93 0.57 0.10
The trajectories in the following experiment were gen-
erated from three setpoints. The robot was set to initially
hover at the starting position, navigate to the middle point
at speciÞed times, and come to stop at the Þnal waypoint in
1.0s, 1.5s and 2.0s. First to fourth order derivatives of the
position at the starting point and ending point were set to
zero as detailed in the previous section.
Figures 6 and 7 show the reference trajectories and
recorded paths of the robot ßying through the waypoints in
1.5sand2.0srespectively.TheRMS positionerrorsforthese
ßights, along with the 1.0-second ßight, are also listed in
Table I. The errors listed are the average from the maneuver
interval and 0.5s before and after. It can be seen that in
these cases, the robot was able to follow the predeÞned path
with no evident increase in position errors compared with
hoveringßights. The exceptionis observedin the1.0-second
ßight, of which the RMS errors are slightly larger than the
rest.
VI. DISCUSSION AND FUTURE WORK
Towards the goal of aggressive maneuvers such as perch-
ing or acrobatic movementsas demonstrated by other MAVs
[11], [21], [22], we developed a single-loop controller that
enables an insect-scale ßapping-wing robot to follow dy-
namic trajectories with small errors. The single-loop de-
sign eliminates a few assumptions required in the previous
controller [10]. We demonstrated that the approach brought
aboutimprovedtrajectoryfollowingwhile retainingan adap-
tive ability without compromising stability.
However, it is noticeable that position errors rose as
ßight time was reduced. This is unsurprising as additional
aerodynamic effects were not incorporated into the dynamic
modelduetothelackofsimpleandaccuratemodel.Itiscon-
ceivable that an improved dynamic model could contribute
towards the goal of achieving more aggressive movements.
Alternatively, iterative learning techniques as illustrated in
[11], [22] should also allow the robot to iteratively adapt the
model based on information obtained from previous ßights
andeventuallysucceedinrealizingpre-calculatedtrajectories
with relatively small errors.
REFERENCES
[1] S. P. Sane and M. H. Dickinson, ÒThe aerodynamic effects of wing
rotation and a revised quasi-steady model of ßapping ßight,Ó Journal
of Experimental Biology, vol. 205, no. 8, pp. 1087Ð1096, 2002.
[2] C. T. Orlowski and A. R. Girard, ÒDynamics, stability, and control
analyses of ßapping wing micro-air vehicles,Ó Progress in Aerospace
Sciences, vol. 51, pp. 18Ð30, 2012.
[3] L. Ristroph, A. J. Bergou, G. J. Berman, J. Guckenheimer, Z. J. Wang,
and I. Cohen, ÒDynamics, control, and stabilization of turning ßight in
fruit ßies,Ó in Natural locomotion in ßuids and on surfaces. Springer,
2012, pp. 83Ð99.
[4] D. Lentink, S. R. Jongerius, and N. L. Bradshaw, ÒThe scalable design
of ßapping micro-air vehicles inspired by insect ßight,Ó in Flying
Insects and Robots. Springer, 2010, pp. 185Ð205.
[5] T. N. Pornsin-Sirirak, Y.-C. Tai, C.-M. Ho, and M. Keennon, ÒMicro-
bat: A palm-sized electrically powered ornithopter,Ó in Proceedings of
NASA/JPL Workshop on Biomorphic Robotics, 2001, pp. 14Ð17.
[6] K.Y. Ma,P.Chirarattananon, S.B.Fuller, andR.J.Wood,ÒControlled
ßight of a biologically inspired, insect-scale robot,Ó Science, vol. 340,
no. 6132, pp. 603Ð607, 2013.
[7] P. S. Sreetharan, J. P. Whitney, M. D. Strauss, and R. J. Wood,
ÒMonolithic fabrication of millimeter-scale machines,Ó Journal of
Micromechanics and Microengineering, vol. 22, no. 5, p. 055027,
2012.
[8] R. Wood, E. Steltz, and R. Fearing, ÒOptimal energy density piezo-
electric bending actuators,Ó Sensors and Actuators A: Physical, vol.
119, no. 2, pp. 476Ð488, 2005.
[9] K. Y. Ma, S. M. Felton, and R. J. Wood, ÒDesign, fabrication, and
modeling of the split actuator microrobotic bee,Ó in Intelligent Robots
and Systems (IROS), 2012 IEEE/RSJ International Conference on.
IEEE, 2012, pp. 1133Ð1140.
[10] P. Chirarattananon, K. Y. Ma, and R. J. Wood, ÒAdaptive control for
takeoff, hovering, and landing of a robotic ßy,Ó in Intelligent Robots
and Systems (IROS), 2013 IEEE/RSJ International Conference on.
IEEE, 2013, to appear.
[11] D. Mellinger, N. Michael, and V. Kumar, ÒTrajectory generation
and control for precise aggressive maneuvers with quadrotors,Ó The
International Journal of Robotics Research, vol. 31, no. 5, pp. 664Ð
674, 2012.
[12] M. W. Achtelik, S. Lynen, M. Chli, and R. Siegwart, ÒInversion
based direct position control and trajectory following for micro aerial
vehicles,Ó in Intelligent Robots and Systems (IROS), 2013 IEEE/RSJ
International Conference on. IEEE, 2013, pp. 2933Ð2939.
[13] G. M. Hoffmann, H. Huang, S. L. Waslander, and C. J. Tomlin,
ÒQuadrotor helicopter ßight dynamics and control: Theory and ex-
periment,Ó in Proc. of the AIAA Guidance, Navigation, and Control
Conference, vol. 2, 2007.
[14] J. Whitney, P. Sreetharan, K. Ma, and R. Wood, ÒPop-up book
MEMS,Ó Journal of Micromechanics and Microengineering, vol. 21,
no. 11, p. 115021, 2011.
[15] B. M. Finio, N. O. Prez-Arancibia, and R. J. Wood, ÒSystem
identiÞcation and linear time-invariant modeling of an insect-sized
ßapping-wing micro air vehicle,Ó in Intelligent Robots and Systems
(IROS), 2011 IEEE/RSJ International Conference on. IEEE, 2011,
pp. 1107Ð1114.
[16] D. Mellinger and V. Kumar, ÒMinimum snap trajectory generation
and control for quadrotors,Ó in Robotics and Automation (ICRA), 2011
IEEE International Conference on. IEEE, 2011, pp. 2520Ð2525.
[17] W. Shyy, H. Aono, S. K. Chimakurthi, P. Trizila, C.-K. Kang, C. E.
Cesnik, and H. Liu, ÒRecent progress in ßapping wing aerodynamics
and aeroelasticity,Ó Progress in Aerospace Sciences, vol. 46, no. 7, pp.
284Ð327, 2010.
[18] J.-J. E. Slotine, W. Li et al., Applied nonlinear control. Prentice hall
New Jersey, 1991, vol. 199, no. 1.
[19] T. Flash and N. Hogan, ÒThe coordination of arm movements: an
experimentally conÞrmed mathematical model,Ó The journal of Neu-
roscience, vol. 5, no. 7, pp. 1688Ð1703, 1985.
[20] M. Achtelik, S. Weiss, M. Chli, and R. Siegwart, ÒPath planning for
motion dependent state estimation on micro aerial vehicles,Ó in Proc.
of the IEEE International Conference on Robotics and Automation
(ICRA), May 2013.
[21] A.L.Desbiens, A.T.Asbeck, andM.R.Cutkosky, ÒLanding, perching
and taking off from vertical surfaces,Ó The International Journal of
Robotics Research, vol. 30, no. 3, pp. 355Ð370, 2011.
[22] S. Lupashin, A. Schllig, M. Sherback, and R. DÕAndrea, ÒA simple
learning strategy for high-speed quadrocopter multi-ßips,Ó in Robotics
and Automation (ICRA), 2010 IEEE International Conference on.
IEEE, 2010, pp. 1642Ð1648.
44
