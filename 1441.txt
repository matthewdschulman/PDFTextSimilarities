Modeling a Multi-Robot System with Fractional-Order Differential
Equations*
Bill Goodwine
1
Abstract—This paper shows that a fractional-order differ-
ential equation may be used to accurately model the dynamic
relationship between the ﬁrst and last generations in a ﬂeet
of coordinating robots, even when the individual robots and
interconnections have the usual integer-order dynamics. Such
a fractional-order model offers the possibility of general ap-
plicability, particularly in the case of heterogeneous ﬂeets of
robots. Such systems tend to be very high order, and therefore
model reduction is useful in modeling, simulation and control.
Resultsarepresentedfor thesystem consideredillustratingthat
the fractional-order model achieves signiﬁcant computational
savings compared to simulating the full system.
I. INTRODUCTION
This paper investigates fractional-order modeling for
multi-robot coordinated control problems. We study a spe-
ciﬁc system with a topological structure for the interactions
illustrated in Figure 1, which is motivated by a viscoelastic
model from the literature [1], [2]. We show that even
with linear springs and dampers as interconnection models
and robots as dynamic double integrators (all integer-order
dynamics),fractional-ordereffectsarepresent,andhenceisa
consequence of the interconnection topology. While it is the
subject of continuedinvestigation,we believethat fractional-
order dynamics may be very common in formation control
of systems of mobile robots and other complex and cyber-
physical systems.
Recognizing this fractional-order nature of the dynamics
is important for several reasons. First, it leads to a deeper
understanding of the system and broadens the “toolbox”
of control possibilities for multi-robot systems. Second, it
provides for substantial model reduction and computational
savingsformodelingandcontrollingthesystem.Third,when
considering loop shaping, large frequency ranges character-
ized by non-integer order dynamics (non-integer magnitude
slopes and non-multiple of 90
?
phases) may need to be
addressed by fractional-order control methods.
Control of multi-robot systems is a well-studied area in
robotics and control with many signiﬁcant contributions. For
example, see [3] (decentralized nearest-neighbor rules), [4]
(consensusproblems),[5] (graphtheory),[6] (potentialfunc-
tions and virtual leaders), [7] (behavior-based), [8] (vision-
based formation control) and survey papers [9], [10]. Some
of the author’s prior work is directed toward exact model
reduction for symmetric systems [11]–[13].
*The partial support of the US National Science Foundation under the
CPS Large Grant No. CNS-1035655 is gratefully acknowledged.
1
Bill Goodwine is with Faculty of Aerospace & Mechanical Engi-
neering, University of Notre Dame, Notre Dame, Indiana 46556 USA
bill@controls.ame.nd.edu.
. . .
. . .
. . .
. . .
. . .
. . .
k
b
p
in
p
out
x
1
x
last
f(t)
Fig. 1. Structure of robotic formation.
Fractional calculus has a much longer history. As a
mathematical subject, it naturally dates back to near the
foundations of calculus, and it has been used in engineering
and robotic applications for at least several decades. Books
on the mathematics and engineering applications include
[14], [15] and there are a number of review articles as
well [16], [17]. One closely related study is [18], [19]
which studied formationcontrolof fractionalsystems. While
involvingfractional-ordersystemsandformationcontrol,that
paper considered a different problem in that the individual
components are fractional in nature; whereas, in this present
paper, the fractional dynamics arise from the structure of the
interaction among the agents. Other related studies include
[20] (walking robots),[21],[22] (ﬂexiblemanipulators),[23]
(time delays) and control using fractional-order PID control
[22], [24].
The rest of this paper is organized as follows. Section II
introduces a simple multi-robot motivational example with
some attributes that suggest fractional-order dynamics. Sec-
tion III gives an overview of fractional calculus. Section IV
veriﬁes that the system from Section II is, indeed,fractional-
order in nature, illustrates the manner in which the dynamics
of the system converge to the fractional-order model and
presents computational results related to scaling and compu-
tational complexity. Finally, Section V presents conclusions
and future work.
II. SYSTEM FORMATION DYNAMICS
Consider a potential-driven formation control problem, an
example appliction of which would be for contamination
mapping and control. For example, if toxic waste is spilled
at a speciﬁc location and has started to diffuse or advect to
the surrounding environment, a ﬂeet of robots to map and
clean the spill could require that many robots be located
where the contamination level is high, and fewer would be
required where it is low. When the spread of contamination
is very dynamic (such as in a river) or extremely dangerous
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 1763
Fig. 2. Schematic of desired robot formation.
(radiation for example), then precise control of the dynamic
response of the system is needed.
One way to accomplish such a task could be with a
formation with a tree graph structure. In this case, there is
one robot at the ﬁrst generation, two at the second, four
at the third, etc., where each successive generation with a
greater number of robots is positioned in areas of greater
contamination. This scenario is schematically illustrated in
Figure 2 where the black dots illustrate the robots and the
lines represent the contamination disbursement ﬂow lines.
Hence, where the contours are closer together we desire
a great number of robots per unit area (to the left) and
converselytotherightweneedfewerperunitarea.Ofcourse
in a real-world deployment the robots in each generation
would be arranged along the level sets of the contamination
concentration, which may have a very complicated shape.
The rest of this paper considers the asymmetric control
structureillustratedinFigure1.Weillustratetheinterconnec-
tions with mechanical components; whereas, obviously for
mobile agents these are not mechanical but are implemented
by a controller. In each generation the number of robots is
doubled.Each robot in the lower generation is related to two
in thesubsequentgenerationwherethecontrolforcebetween
thelowergenerationrobotandoneofthenextrobotsisgiven
by a linear spring relationship and the relationship to the
other robot is represented by a viscouse damper. We assume
all the robots in the ﬁnal generation are at the same potential
and f(t) represents the force on the ﬁnal generation by all
the robots in the penultimate generation.
For clarity of presentation, consider the case where the
interior robots have high-gain controllers or small masses
and treat their dynamics as algebraic rather than second-
order. In that case [2] shows that the network is self-similar
and the transfer function from the differencein force exerted
by the ﬁrst and last generation to how much the network
is compressed or extended from equilibrium given by a
repeated fraction. Speciﬁcally, let
G(s)=
X
1
(s)?X
last
(s)
F(s)
,
where x
1
denotes the position of the ﬁrst generation and
x
last
denotes the position of the last generation. If we let
G
1
(s)=1/k and G
2
(s)=1/(bs), then
G(s)=
1
1
G
1
(s)+
1
1
G
1
(s)+···
+
1
G
2
(s)+···
+
1
G
2
(s)+
1
1
G
1
(s)+···
+
1
Gs(s)+···
. (1)
-30
-20
-10
0
10
10
?4
10
?3
10
?2
10
?1
10
0
10
1
10
2
|G(i?)| [dB]
-80
-60
-40
-20
0
10
?4
10
?3
10
?2
10
?1
10
0
10
1
10
2
?G(i?) [deg]
Frequency [rad/s]
Fig. 3. Network stress-strain frequency response.
This transfer has a denominator with order 2
N
where N is
the number of generations in the system.
1
The frequency
response for this transfer function for k = b = 1 and for 7
generations is illustrated in Figure 3.
The important feature of Figure 3 is that there is a large
frequencyband overwhich theslopeof themagnitudeplotis
?10db/decadeandthephaseis?45
?
.Naturally,thisleadsus
to consider to what extent this system can be approximated
by a transfer function containing a term of the form
√
s, or
equivalently, in the time domain, a derivative of order 1/2,
which is essentially the focus of the rest of this paper.
To understand the fractional-order nature of the Bode
plot, Figure 4 illustrates the pole-zero map for this system
with 5 generations. The poles and zeros are evenly spaced
(logarithmically), so that half way between any two poles
is a zero. Hence as frequency is increased, any pole that
adds ?20 db/decade to the slope is offset by a zero half
way to the next pole, so if they are closely spaced over a
broad frequency range, a persistent range with a slope of
?10 db/decade results.
2
Clearly, this mechanism can to lead
to just about any slope and could be constructed by varying
the spacing between the poles and zeros.
III. FRACTIONAL-ORDER DIFFERENTIAL
EQUATIONS
Itis, of course,naturalto ask,givena function, f(t) with a
ﬁrstderivative, f
(1)
(t)andsecondderivative, f
(2)
(t),whether
there are operators“in between”the integer order derivatives
such as
d
1
2
dt
1
2
f = f
(
1
2
)
which generalizes the notion of an integer-order derivative.
We start with f(t)=t
k
, and observe that
d
n
dt
n
t
k
=
k!
(k?n)!
t
k?n
(2)
1
This can be considered a stress-strain relationship because it relates how
much the network is compressed or extended to the difference in force
exerted on the ﬁrst and last elements.
2
The pole-zero map for the 7-generation network is similar, but has many
complex pole-zero pairs, which makes the interpretation less transparent, but
it is essentially the same.
1764
-1
-0.5
0
0.5
1
-10 -8 -6 -4 -2 0
Imaginary Axis
Real Axis
Fig. 4. Pole-zero map for 5 generation network.
0
5
10
15
20
25
30
0 1 2 3 4 5
?(?)
?
Fig. 5. Gamma function (line) and the ﬁrst several values of (n?1)! (?).
for the usual case where n is an integer. Recall that a
generalizationof thefactorialfunctionis thegammafunction
deﬁned by by
?(?)=
Z
∞
0
e
?t
t
??1
dt,
and illustrated in Figure 5. In the case where? is an integer,
this can beintegratedby partsmultipletimes to eliminatethe
t-term in the integrand and it is clear that ?(n) = (n?1)!
which are indicated by the? marks in Figure 5.
Replacing the factorials in Equation 2 with gamma func-
tions gives
d
?
dt
?
t
k
=
?(k+1)
?(k+1??)
t
k??
,
which provides a nice generalization of the derivative, as is
illustrated in Figure 6 for several ??[0,1] for f(t)=t
2
.
Toextendthisnotionbeyondsimplepolynomials,consider
Cauchy’s formula for repeated integration,which is given by
Z
t
0
Z
?
1
0
···
Z
?
n?1
0
f (?
n
)d?
n
d?
n?1
···d?
1
=
1
(n?1)!
Z
t
0
(t??)
n?1
f(?)d?, (3)
and is easily proven by induction.
One interpretation of this formula is that “integrating the
function, f, n times” is given by the single integral on the
right-handside of Equation 3. In that expression,the number
-4
-2
0
2
4
6
8
10
12
-2 -1.5 -1 -0.5 0 0.5 1 1.5 2
d
?
dt
?
 
t
2

t
? =0
? =0.2
? =0.4
? =0.6
? =0.8
? =1
Fig. 6. Fractional-order derivatives for f(t)=t
2
for various orders between
0 and 1. Note that the zeroth derivative is the parabola, the ﬁrst derivative
the expected straight line and the fractional derivatives between these two
vary in a reasonably expected manner.
ofintegrations,n,onlyappearsinthefactorialfunctionandin
theexponentin theintegrand.Of thesetwo,onlythefactorial
function requires n to be an integer. Hence, if we denote n
such integrations by f
?n
(t), we can write
f
??
(t)=
1
?(?)
Z
t
0
(t??)
?
f(?)d?, (4)
which provides a means for fractional-order integration,
from which fractional-order derivatives immediately follow.
Importantcomplications arise, but the easiest way to see this
if, for example, if we want the 2.3 derivative, we integrate
0.7 times and then differentiate (normally) 3 times.
It is worth emphasizing that, unlike integer-order deriva-
tives, fractional-order derivatives require more than local
information. In fact, it is apparent from the integral in the
deﬁnition in Equation 4, that all past values of a function
enter into the computation for the fractional derivative. Here
we will take a standard linear control-theoreticapproach and
assume that all initial conditions are zero and also that all
the history for all signals for negative times are zero as well.
While closed-form solutions for fractional-order differen-
tial equations do exist, we also must resort to numerical
approximations. To that end, if we consider the ﬁrst and
second derivatives of a function to be deﬁned as
df
dt
(t)= lim
?t?0
f(t)? f(t??t)
?t
d
2
f
dt
2
(t)= lim
?t?0
f(t)?2f(t??t)+ f(t?2?t)
(?t)
2
or in general for an integer n
d
n
f
dt
n
(t)= lim
?t?0
∑
0≤m≤n
(?1)
m

n
m

f (t+(n?m)?t)
(?t)
n
,
where the usual binomial coefﬁcient is given by

n
m

=
n!
m!(n?m)!
,
1765
0
0.5
1
1.5
2
2.5
0 2 4 6 8 10
x(t)
t
? =0.33
? =0.67
? =1.00
? =1.33
? =1.67
? =2.00
Fig. 7. Solution to Equation 5 using Equation 6.
which, consistent with what we have done so far is easily
generalized to non-integers by gamma functions

?
m

=
?(?+1)
?(m+1)?(??m+1)
.
UsingthiswearriveattheGr¨ unwald -Letnikovderivative:
d
?
f
dt
?
(t)= lim
?t?0
1
(?t)
?
∞
∑
j=0
(?1)
j

?
j

f (t+(?? j)?t),
which, similar to Equation 4 includes all past values of f(t).
If?t?1 and t =m?t, then the time shift by? is small and
if all the initial conditions are zero, then we have
d
?
f
dt
?
(t)≈
1
(?t)
?
m
∑
j=0
(?1)
j

?
j

f (t? j?t),
which is a useful approximation to solve fractional-order
differential equations.
For example, for
d
?
x
dt
?
(t)+2x(t)=1 (5)
substituting the ﬁnite-difference approximation from the
Gr¨ unwald - Letnikov deﬁnition and letting t =m?t, then
d
?
x
dt
?
(m?t)+2x(m?t)=1
is approximated by
1
(?t)
?
m
∑
j=0
(?1)
j

?
j

x((m? j)?t)+2x(m?t)=1.
Solving for x(m?t) gives
x(m?t)≈
1?
1
(?t)
? ∑
m
j=1
(?1)
j

?
j

x((m? j)?t)
2+
1
(?t)
?
. (6)
Solutions for various ? ? [0.25,2.0] are illustrated in Fig-
ure 7. When? =1 and 2 we observe the expected exponen-
tial and harmonicsolutions, respectively.Intermediatevalues
for the order of the derivative produce reasonably intuitive
intermediate responses.
Octave code computing these solutions is:
for alpha = [1/3 2/3 1 4/3 5/3 2]
x = 0;
coefs = 0;
coefs(1) = -bincoeff(alpha,1);
for i = 2:length(t)
sum = dot(fliplr(x),coefs);
x(i) = (1 - sum/(dtˆalpha))/...
(2 + 1/dtˆalpha);
coefs(i) = (-1)ˆi
*
bincoeff(alpha,i);
endfor
endfor
IV. RESULTS
Returning to the robot formation control problem, note
that in the limit of an inﬁnite number of generations, the
transfer function in Equation 1 may be written as [2]
G
∞
(s)=
1
1
G
1
(s)+G
∞
(s)
+
1
G
2
(s)+G
∞
(s)
=
p
G
1
(s)G
2
(s)=
r
1
kbs
.
This transfer function clearly will have a Bode plot com-
prised of a magnitudeplot that is a straightline with slope of
?10 db/decade and a constant phase of?45
?
, i.e., the entire
Bode plot will look like the interesting parts of Figure 3.
Hence, in the limit, the network produces a fractional-
order relationship between the positions of the ﬁrst and last
robots given by
X
1
(s)?X
last
(s)
F(s)
=

1
√
kb

1
√
s
.
If we take as the input to the network the position of the
ﬁrst robot, then we have
m
last
s
2
X
last
(s)=(X
1
(s)?X
last
(s))
√
kbs
or the fractional-order transfer function
X
last
(s)
X
1
(s)
=
√
kbs
m
last
s
2
+
√
kbs
,
which can be represented by the reduced system illustrated
in Figure 8. This can be represented in the time domain by
m
d
2
x
last
dt
2
(t)+
√
kb
d
1
2
x
last
dt
1
2
(t)=
√
kb
d
1
2
x
1
dt
1
2
(t).
Using the Gr¨ unwald - Letnikov deﬁnition for the fractional
derivatives and solving for x
last
(t) gives the following nu-
merical approximation at t =n?t:
x
last
(n?t)≈
?
?
1
m
(?t)
2
+
√
kb
√
?t
?
?
?
"
m
(?t)
2
(2x((n?1)?t)?x((n?2)?t))
?
n
∑
j=1
(?1)
j

1
2
j

x
last
((n? j)?t)
+
√
kb
√
?t
n
∑
j=0
(?1)
j

1
2
j

x
1
((n? j)?t)
#
.
1766
√
kbs
m
last
s
2
+
√
kbs ?p
Fig. 8. Fractional order transfer function between ﬁrst and last generations
in the robotic formation.
1
2
3
4
5
6
0 5 10 15 20
x
i
t
Fig. 9. Comparison of fractional-order solution with full solution for k=
b=1 and four generations.
Nowweconsiderto whatextentaﬁnitenetworkis charac-
terized by such fractional-order dynamics. If the fractional-
order representation is only true in the limit, then this paper
is only of academic interest. If it is accurate for a relatively
small number of generations, then it is of practical control
and robot ﬂeet design importance.
We specify the acceleration proﬁle of the ﬁrst robot as
d
2
x
1
dt
2
(t)=
?
?
?
?
?
1, 0<t≤1
?1, 1<t≤2
0, t >2
and numerically solve for the solution of x
last
. In the case
where k=b=1,?t =0.005 and there are only four genera-
tions, the solution for all 8 robots is illustrated in Figure 9.
In the ﬁgure, it is assumed that the uncompressed length of
the springs is one and each generation starts from rest at the
equilibrium conﬁguration. A comparison of the fractional-
order solution and the full solution for the last robot is
illustrated in Figure 10. Clearly the match is excellent.
The accuracy of the fractional-order approximation is
dependentonthenumericalvalueschosenfor thesimulation.
Taking k =1, b=1/4, ?t =0.005 and varying the number
of generations, a comparison of the full solution and the
fractional-order solution is illustrated in Figure 11, where
the convergence of the fractional-order solution to the full
solution as the number of generations increases is apparent.
To study the computational aspects of the problem, the
simulations were performed on a HP DL165 G6 server with
4
4.2
4.4
4.6
4.8
5
5.2
5.4
0 5 10 15 20
x
last
t
fractional
full
Fig. 10. Comparison of fractional-order solution with full solution for
k=b=1 and four generations.
0
0.5
1
1.5
2
2.5
3
3.5
4
0 5 10 15 20
x
last
t
generations = 3
generations = 5
generations = 7
generations = 9
fractional
Fig. 11. Convergence to fractional-order solution for k?1, b=1/4, ?t =
0.005 and various numbers of generations.
dual six-core 2.4 GHz AMD Opteron processors (Model
2431), 12 cores per node and 12 GB RAM. The software
used was the lsode() function in octave for the full solu-
tionsandanoctavescriptsimilartothatillustratedpreviously
for the fractional-order solution. The computation times are
in seconds and were reported by the octave cputime()
function and are illustrated in Figure 12 and summarized in
TableI.Asis apparentfromthetable,addingonegeneration,
which doubles the number of robots and interconnections,
roughly increases the computation time by a factor of four.
For the problem at hand, the fractional-order computation
becomes more efﬁcient for the system with more than four
generations.
V. CONCLUSIONS AND FUTURE WORK
This paperstudied the accuracyand computationalaspects
of modeling a multi-robot system using fractional-order
differential equations. We showed that even for a relatively
small system comprised of simple elements with integer-
order dynamics, the resulting relationship between the ﬁrst
and last generation of robots exhibited signiﬁcant fractional-
order effects. This was demonstrated both in a frequency-
response analysis as well as simulations comparing the full
integer-order solutions and a fractional-order approximation.
1767
10
?1
10
0
10
1
10
2
10
3
10
4
2 3 4 5 6 7 8 9 10
computation time (s)
generations
full solution
fractional
Fig. 12. Computation time for full solution and fractional-order solutions
for various numbers of generations.
Generations Full Simulation (s) Fractional Simulation (s)
3 .43393 2.4596
4 1.2768 2.4596
5 4.4983 2.4596
6 19.398 2.4596
7 70.408 2.4596
8 261.22 2.4596
9 938.74 2.4596
10 3769.9 2.4596
11 14822 2.4596
TABLE I
COMPUTATION TIMES FOR DIFFERENT NETWORK SIZES.
The contributions of this work is putting forth the fractional-
order model as a useful tool in the multi-robot control area,
which has been relatively unstudied.
Future work left to do is substantial. While the mere
presence of fractional-order dynamics is important for full
understandingof the problem,if we are to effectivelycontrol
such systems, incorporating the fractional-order effects into
control design is necessary. Fractional-order control is not
new (fractional PID, for example), but it is new in the
present context and the nature of the problem naturally leads
to the question of fractional-order loopshaping. Another
important area is related to fractional-order system identiﬁ-
cation for complex multi-robot and cyber-physical systems.
In our view, the largest open question is to what extent
fractional-order dynamics are present in general for multi-
agent systems? This paper illustrated the fact that fractional-
order effects can arise simply from the interconnections,and
complex and cyber-physical systems are characterized, in
general, with such structure. If such effects are relatively
commonplace, then fractional-order modeling may have a
huge impact and be recognized more signiﬁcantly by the
mainstream engineering communities.
REFERENCES
[1] N. Heymans and J.C. Bauwens. Fractal rheological models and
fractional differential equations for viscoelastic behavior. Rheologica
Acta, 33:210219, 1994.
[2] Jayson Mayes. Reduction and Approximation in Large and Inﬁnite
Potential-Driven Flow Networks. PhD thesis, University of Notre
Dame, 2012.
[3] Ali Jadbabaie, Jie Lin, and A. Stephen Morse. Coordination of groups
of mobile autonomous agents using nearest neighbor rules. IEEE
Transactions on Automatic Control, 48(6):988–1001, 2003.
[4] WeiRen,Randal W.Beard, andEllaM.Atkins. Information consensus
in multivehicle cooperative control. IEEE Control Systems Magazine,
pages 71–82, April 2007.
[5] J. Alexander Fax and Richard M. Murray. Information ﬂow and
cooperative control of vehicle formations. IEEE Transactions on
Automatic Control, 49(9):1465– 1476, 2004.
[6] N.E. Leonard and E. Fiorelli. Virtual leaders, artiﬁcial potentials,
and coordinated control of groups. In Proceedings of the 40th IEEE
Conference on Decision and Control, pages 2968–2973, December
2001.
[7] Tucker Balch and Ronald C. Arkin. Behavior-based formation control
for multirobot teams. IEEE Transactions on Robotics and Automation,
14(6):926–939, 1998.
[8] Aveek K. Das, Rafael Fierro, Vijay Kumar, James P. Ostrowski,
John Spletzer, and Camillo J. Taylor. A vision-based formation
control framework. IEEE Transactions on Robotics and Automation,
18(5):813–825, 2002.
[9] Richard M Murray. Recent research in cooperative control of multive-
hicle systems. Journal of Dynamic Systems Measurement and Control,
129(5):571, 2007.
[10] Yongcan Cao, WenwuYu,WeiRen, andGuanrong Chen. Anoverview
of recent progress in the study of distributed multi-agent coordination.
Industrial Informatics, IEEE Transactions on, 9(1):427–438, 2013.
[11] M. Brett McMickell and Bill Goodwine. Reduction and non-linear
controllability of symmetric distributed systems. International Journal
of Control, 76(18):1809–1822, 2003.
[12] M. Brett McMickell and Bill Goodwine. Motion planning for
nonlinear symmetric distributed robotic formations. The International
journal of robotics research, 26(10):1025–1041, 2007.
[13] Bill Goodwine and Panos J. Antsaklis. Multi-agent compositional
stability exploiting system symmetries. Automatica, pages 3158–3166,
2013.
[14] Dumitru Baleanu, Jos Antnio Tenreiro Machado, and Albert C. J.
Luo. Fractional Dynamics and Control. SpringerPublishing Company,
Incorporated, 2011.
[15] Manuel Duarte Ortigueira. Fractional Calculus for Scientists and
Engineers, volume 84 of Lecture Notes in Electrical Engineering.
Springer, 2011.
[16] M.D. Ortigueira. An introduction to the fractional continuous-time
linear systems: the 21st century systems. Circuits and Systems
Magazine, IEEE, 8(3):19–26, 2008.
[17] J. Tenreiro Machado, Virginia Kiryakova, and Francesco Mainardi.
Recent history of fractional calculus. Communications in Nonlinear
Science and Numerical Simulation, 16(3):1140 – 1153, 2011.
[18] Yongcan Cao and Wei Ren. Distributed formation control for
fractional-order systems: Dynamic interaction and absolute/relative
damping. Systems & Control Letters, 59(34):233 – 240, 2010.
[19] Yongcan Cao, Yan Li, Wei Ren, and Yang Quan Chen. Distributed co-
ordination of networked fractional-order systems. Systems, Man, and
Cybernetics, Part B: Cybernetics, IEEE Transactions on, 40(2):362–
370, 2010.
[20] Manuel F Silva, JA Tenreiro Machado, and AM Lopes. Fractional
order control of a hexapod robot. Nonlinear Dynamics, 38(1-4):417–
433, 2004.
[21] H. Delavari, P. Lanusse, and J. Sabatier. Fractional order controller
design for a ﬂexible link manipulator robot. Asian Journal of Control,
15:783795, 2013.
[22] Chunna Zhao, Dingyu Xue, and YangQuan Chen. A fractional
order pid tuning algorithm for a class of fractional order plants. In
Proceedings of the IEEE International Conference on Mechatronics
& Automation, 2005.
[23] YangQuan Chen and Kevin L. Moore. Analytical stability bound
for a class of delayed fractional-order dynamic systems. Nonlinear
Dynamics, 29(1-4):191–200, 2002.
[24] Concepcin A. Monje, Blas M. Vinagre, Vicente Feliu, and YangQuan
Chen. Tuning and auto-tuning of fractional order controllers for
industry applications. Control Engineering Practice, 16(7):798 – 812,
2008.
1768
