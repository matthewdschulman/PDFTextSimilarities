A Probabilistic Approach to High-Conﬁdence Cleaning Guarantees
for Low-Cost Cleaning Robots
J¨ urgen Hess Maximilian Beinhofer Wolfram Burgard
Abstract— Cleaning is widely regarded as one of the most
relevant applications of autonomous service robots. The goal
of robotic cleaning is to achieve low dirt levels in the whole
environment. Low cost consumer robots, however, are typically
prone to high motion and sensor uncertainties. Additionally,
their cleaning units do not always remove the dirt entirely. As
a result, there is a substantial probability that some parts of
the environment are not cleaned sufﬁciently. In this paper, we
propose an approach to robotic cleaning that guarantees that
in the whole environment, the dirt levels after cleaning are
reduced below a user-deﬁned threshold with high conﬁdence.
We introduce a novel probabilistic model for jointly estimating
the trajectory of the robot and the current dirt distribution in
the environment. Based on this estimate, we adapt the future
cleaning path during operation such that the robot re-visits
areas in which high dirt levels are still likely. We demonstrate
the effectiveness of our approach in extensive experiments
carried out both in simulation and with a real vacuum cleaning
robot, also in comparison to previous approaches.
I. INTRODUCTION
Cleaning robots are one of the most popular consumer
products applying robotics technologies. They aim at remov-
ing the dirt in the entire environment. Low cost consumer
robots, however, are typically subject to high motion and
sensor uncertainties and therefore might miss certain areas.
Additionally, these robots do not always remove the dirt
entirely on the ﬁrst pass. Thus, some parts of the environment
may need repeated cleaning. Obviously, if the robot knows
which trajectory it took thus far and what the results of its
cleaning actions were, it can more easily identify such parts.
In this paper, we propose a probabilistic model for jointly
estimating the trajectory of the robot and the current dis-
tribution of dirt in the environment. We furthermore show
how this model can be used to achieve low dirt levels. We
consider a cleaning robot with a range sensor to perceive its
environment and a dirt sensor to measure the amount of dirt
currently cleaned. The robot has access to an occupancy map
of its environment and a prior estimate of the dirt distribution
in the environment. Based on the prior dirt distribution, we
select the parts of the environment that need to be cleaned
(see Fig. 1 for an example) and compute an initial cleaning
path. We model the execution of the cleaning path in a
probabilistic framework. In addition to the uncertainties of
the odometry and the range sensor, we explicitly model the
uncertainties of the cleaning unit and the dirt sensor. Using
this framework, we jointly estimate the trajectory of the robot
All authors are with the University of Freiburg, Germany. This work has
partially been supported by the German Research Foundation (DFG) within
the Research Training Group 1103 and under contract number SFB/TR 8.
hess@informatik.uni-freiburg.de
Fig. 1. The Roomba robot in the experimental environment (top) and its
planned path (blue line) in the map (bottom). The bottom part shows a map
of the environment (black obstacles) together with a set of particles (red
dots) representing the probability distribution about the pose of the robot.
The grid denotes the dirt distribution with dirty (red) and clean cells (white).
and the current dirt distribution. This estimate enables the
robot to identify the parts of the environment that have not
yet been sufﬁciently cleaned. We exploit this knowledge for
iteratively adapting the cleaning path during operation, until
the maximum dirt level in the environment is below a user-
deﬁned threshold with high conﬁdence.
The contribution of this paper is an approach for robotic
cleaning that guarantees low dirt levels in the whole en-
vironment with high conﬁdence. Depending on the actual
distribution of dirt, it typically needs considerably less time
than approaches that always traverse the entire environment.
Due to the estimation of the uncertainties in the task ex-
ecution, our approach even works on low cost consumer
robots with high noise levels. As a side effect, the integration
of dirt measurements into the estimation can signiﬁcantly
improve the localization performance of the robot. Extensive
experiments, both in simulation and with a real cleaning
robot, demonstrate the above claims in practice.
II. RELATED WORK
In the area of robotic cleaning, many systems have been
developed [10], [11], [12], [15], ranging from cleaning robots
for chain stores [12] to pipe cleaning robots [10]. Katsuki et
al. [11], for example, developed a window cleaning robot
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 5600
with a dirt detection sensor and aim at guaranteeing that the
robot cleans the complete window using a specialized motion
control method. However, in contrast to our approach, they
do not consider motion and sensor uncertainties.
Most robotic cleaners either perform random movements
or do coverage path planning, i.e., they seek for the shortest
path that covers the entire environment. Choset et al. [3] give
an overview of existing coverage path planning techniques.
Bretl et al. [2] prove that if the position and velocity errors of
the robot are bounded, complete coverage can be guaranteed
for a particular choice of the coverage path. In contrast,
we do not aim at complete coverage, considering worst
case errors beforehand, but re-plan the path during operation
according to our estimate of the remaining dirt.
To estimate the joint distribution of the trajectory of
the robot and the dirt in the environment, we factor the
distribution similar to approaches in the area of simulta-
neous localization and mapping (SLAM) [17]. There exist
several SLAM approaches for cleaning robots [6], [9], [18].
Gutmann et al. [6], for example, simultaneously estimate
a vector ﬁeld induced by stationary signal sources and the
robot pose in the vector ﬁeld. Jeong and Lee [9] propose
a landmark-based SLAM algorithm for a single camera
pointing towards the ceiling. The approach of Zhang et
al. [18] shows that SLAM is also solvable even with limited
range sensors like bumpers. In contrast to typical SLAM
approaches, which initially have no information about the
environment and estimate a static map, our approach uses an
initially available occupancy grid map and an initial guess
of the dirt distribution. It simultaneously estimates the pose
of the robot and the changing state of the dirt distribution.
Closer to our estimation framework is the work of Stachniss
and Burgard [16], who jointly estimate the pose of the robot
and the actual conﬁguration of dynamic areas.
In this paper, we derive probabilistic models for the dirt
actuator (cleaning unit) of the robot and for the dirt sensor
inside the cleaning unit. There exists a large body of literature
on modeling novel sensors and actuators for robots, e.g., air
ﬂow sensors [13], whisker sensors [14], or WiFi receivers [4].
However, to the best of our knowledge, there exists no other
approach that models dirt actuators and sensors inside a
probabilistic framework.
Our previous work [8] introduced a probabilistic approach
for representing the distribution of dirt in the environment
and proposed efﬁcient cleaning policies. It furthermore as-
sumed that the execution of the cleaning task is deterministic.
Compared to this previous method, the approach proposed
here explicitly considers the uncertainties in the entire clean-
ing task. Thus, it can guarantee low dirt levels with high
conﬁdence even for robots with high noise levels (see Sec. V
for an experimental comparison).
III. PROBABILISTIC MODELS FOR LOCALIZATION AND
CLEANING
In the following, we consider a mobile cleaning robot
equipped with a cleaning unit (dirt actuator), a sensor inside
the cleaning unit that measures the amount of dirt sucked
in at the moment (dirt sensor), and a sensor measuring the
distances to the obstacles in the environment (i.e., a depth
camera or a laser scanner). We assume that the robot has a
geometric map of its environment (e.g., an occupancy map),
which it uses to match its distance measurements against.
Additionally, the robot has access to an estimate of the dirt
distribution in the environment at the beginning of the clean-
ing cycle. To represent the dirt distribution, we follow the
approach of Hess et al. [8] and use a regular tessellation of
the environment intoM grid cells. We assume that, for every
grid cellc
i
, the amount of dirt in the cell at timet is Poisson
distributed with parameter 
i
t
. Together, the values 
i
t
for
all cells c
i
deﬁne the dirt distribution d
t
= (
1
t
;:::;
M
t
).
Hess et al. [8] show how to estimate this distribution, its
dynamics over time and how it can be updated during and
between cleaning runs. At the time of cleaning, we also
obtain the initial dirt distribution d
0
using these techniques.
We will now describe how to jointly estimate the trajectory
already traveled by the robot and the current dirt distribution
from the observations of the robot. Furthermore, we will
introduce probabilistic models describing the cleaning unit
and the dirt sensor of the robot.
A. Estimation of the Trajectory and the Dirt Distribution
Our goal is to estimate the joint posterior distribution of
the trajectory of the robot and the dirt distribution that is
p(x
0:t
;d
0:t
ju
1:t
;z
r
1:t
;z
d
1:t
); (1)
where x
0:t
and d
0:t
are the full histories of the pose of the
robot and the dirt distribution starting from the beginning of
the current cleaning cycle. Here,u
1:t
are the motion controls
of the robot, z
r
1:t
are the range measurements, and z
d
1:t
are
the dirt measurements. We assume that while the robot cleans
the environment, the values of the dirt distribution are only
changed through the cleaning actions of the robot. Thus, the
current dirt distribution d
t
depends only on the previous
dirt distribution d
t 1
and the path taken by the cleaning
robot. Similarly, the dirt measurement z
d
t
depends only on
the change of the dirt distribution from time t 1 to time t.
We describe the resulting dynamical system by the graphical
model shown in Fig. 2.
Applying Bayes’ rule and the rules of d-separation [1]
to the graphical model yields the following factorization of
Eq. (1):
p(x
0:t
;d
0:t
ju
1:t
;z
r
1:t
;z
d
1:t
)
= p(z
r
t
jx
t
)
| {z }
range sensor model
p(z
d
t
jd
t 1
;d
t
)
| {z }
dirt sensor model
p(d
t
jd
t 1
;x
t 1
;x
t
)
| {z }
dirt actuator model
p(x
t
jx
t 1
;u
t
)
| {z }
robot motion model
p(x
0:t 1
;d
0:t 1
ju
1:t 1
;z
r
1:t 1
;z
d
1:t 1
)
| {z }
prior distribution
;
(2)
where  is a normalization constant. Eq. (2) deﬁnes a
recursive update rule, which allows to compute the desired
distribution at time t from the distribution at time t  1,
5601
u
t 2
u
t 1 u
t
x
t 2
x
t 1 x
t
z
r
t 2
z
r
t 1
z
r
t
d
t 2
d
t 1 d
t
z
d
t 2
z
d
t 1
z
d
t
Fig. 2. Graphical model of the dynamical system describing the evolution
of the robot pose xt and the dirt distribution dt .
given all sensor and actuator models. For the range sensor
and the robot motion, we employ standard models from the
literature [17]. In the following, we introduce models for the
dirt actuator and the dirt sensor.
B. Dirt Actuator Model
The dirt actuator model describes how the values in the
dirt distribution change from one time step to the next,
depending on the area covered by the cleaning unit, i.e.,
the path traveled by the robot. Every speck of dirt that
the cleaning unit passes over is either sucked in or left on
the ﬂoor. Every such event can be modeled by a Bernoulli
distribution with a probabilityp for cleaning the speck of dirt.
The parameterp is speciﬁc to the cleaning unit, type of dirt,
and ﬂoor to be cleaned and has to be calibrated accordingly.
To determine how many such events occur in each cell of
the dirt distribution, we apply unweighted area sampling [5]
to calculate the proportionP
i
(x
t 1
;x
t
) of each cell c
i
that
the cleaning unit passed over (see Fig. 3 for an illustration).
Under the assumption that inside each single cell, the dirt
is distributed uniformly, multiplyingP
i
(x
t 1
;x
t
) with the
amount of dirt d
i;t 1
that was in the cell at timet 1 yields
the number of Bernoulli events in this cell. As a series of
independent Bernoulli events follows a Binomial distribution,
the reduction of dirt (d
i;t 1
 d
i;t
) in cell c
i
is distributed
according to Binom(d
i;t 1
  d
i;t
;P
i
(x
t 1
;x
t
)d
i;t 1
;p),
whereBinom(k;n;p) is the probability of drawing samplek
from a Binomial distribution with parameters n and p.
Assuming that the amounts of dirt cleaned in different cells
are independent, this leads to the dirt actuator model
p(d
t
jd
t 1
;x
t 1
;x
t
) (3)
=
M
Y
i=1
Binom(d
i;t 1
 d
i;t
;P
i
(x
t 1
;x
t
)d
i;t 1
;p):
C. Dirt Sensor Model
The dirt sensor model in Eq. (2) is a probabilistic model
describing the measurement z
d
t
received if the dirt distribu-
tion changes fromd
t 1
tod
t
. The dirt sensor included in our
robot, which is the iRobot Roomba, is a small metal plate
inside the cleaning unit, which sends a signal if it gets hit
by a speck of dirt during cleaning. As dirt measurement z
d
t
,
x
t 1
xt
Fig. 3. Visualization of the area covered by the cleaning unit when the robot
moves from pose x
t 1
to pose xt . The dotted circles mark the diameter
of the robot. The width of the covered rectangle depends on the width of
the cleaning unit. We use unweighted area sampling to estimate the covered
percentage of each grid cell.
we use the number of these signals received between the
time steps t  1 and t. The rate with which the metal
plate gets hit in this time interval depends on the amount
of dirt (d
t 1
 d
t
) sucked in. Assuming that the individual
hitting events occur independently of each other, this process
can be described by a Poisson distribution with intensity
parameter  = (d
t 1
  d
t
). Therefore, we deﬁne the dirt
sensor model as
p(z
d
t
jd
t 1
;d
t
) Poiss(d
t 1
 d
t
): (4)
IV. A GUARANTEE FOR CLEANING WITH HIGH
CONFIDENCE
The goal of our robotic cleaning approach is to guarantee
that the maximum dirt value in the environment is reduced
below the user-deﬁned threshold with conﬁdence 1 . In
this section, we describe our implementation of the recursive
update rule in Eq. (2). Furthermore, we show how we use the
resulting estimated dirt values to adapt the future cleaning
path to achieve the desired cleaning guarantee.
A. Particle Filter Implementation
To implement the recursive estimation scheme, we use a
particle ﬁlter [17]. The particle ﬁlter represents the probabil-
ity distribution in Eq. (2) as a set of K sample hypotheses,
called particles. The particle set has the form
Y
t
=f(x
[k]
0:t
;d
[k]
1;0:t
;:::;d
[k]
M;0:t
)jk2 1;:::;Kg; (5)
where x
[k]
0:t
is the hypothesis of the k-th particle about the
history of the robot pose and d
[k]
i;0:t
is its hypothesis about
the history of dirt values of cell c
i
. At each time step, we
create the updated hypothesis of each particle by drawing
a random sample ﬁrst from the robot motion model, and
then, given its outcome, from the dirt actuator model. Then,
we assign to all K particles weights w
[k]
that describe the
likelihood of the sensor readings given the sampled states.
We compute the weights as the product of the densities of
the dirt sensor model and the distance sensor model. Finally,
in a resampling step, we create a new set of particles from
the actual set by drawing K times with replacement from
the probability distribution induced by the weights w
[k]
.
Compared to the standard particle ﬁlter for robot local-
ization, the extended particle state deﬁned in Eq. (5), of
course, has an increased dimensionality and thus an increased
computational complexity, as it requires more particles. How-
ever, as changes in the dirt distribution happen only in parts
5602
TABLE I
RESULTS OF THE REAL WORLD EXPERIMENTS.
Successes Distance [m] Time [s]
Our approach 10/10 20.54 321.54
No replanning 4/10 10.98 138.51
Systematic 6/10 81.12 891.85
Roomba 0/10 - 321.54
in which particles are at the moment, we can reduce the
computational complexity by sampling dirt values only from
those parts. In this efﬁcient approximation, we initialize the
dirt distribution of all cells c
i
in each particle k with the
mean
i
0
of the initial dirt distribution d
0;i
. Only if the robot
pose hypothesis of a particle enters a cell c
i
at some time
steps, we sample a concrete instantiation of the dirt value of
this cell from the Poisson distribution with parameter 
i
s 1
.
This value is updated according to the dirt actuator model
resulting in the sample d
[k]
s;i
. When, at some time step t 1,
the pose hypotheses of all particles are outside of c
i
again,
we estimate the new mean 
i
t
of the Poisson distribution of
c
i
and set the values d
[k]
t;i
of all particles to
i
t
. As estimator,
we use the weighted mean of the dirt values in all particles:

i
t
=
K
X
k=1
w
[k]
d
[k]
t 1;i
: (6)
Although some values d
[k]
t 1;i
are not samples but contain
the previously estimated mean, this is an unbiased estimator.
Due to this efﬁcient implementation, the computational com-
plexity of our approach does not depend on the size of the
environment but on the resolution of the dirt map. A ﬁner
resolution would require a increased number of particles. In
the experiments we show that our approach runs online and
effectively with a reasonable number of particles.
B. Localization-Based Replanning of the Cleaning Path
To achieve the desired cleaning guarantee, the robot starts
cleaning by following the bounded dirt time minimization
cleaning path introduced by Hess et al. [8]. This path is
created from the policy(d
0
) =fc
i1
;:::;c
in
g that consists
of all cells in which the(1 ) quantile of the dirt distribution
is above . Given (d
0
), we generate the path by solving
the traveling salesman problem (TSP) on the fully connected
graph with all cells in (d
0
) and the actual robot position
as vertices and with the Euclidean distances of the shortest
collision-free paths between the cells as edge costs.
The contribution of our approach is that during cleaning,
we re-compute the cleaning path based on the current dirt
distribution to re-visit previously imperfectly cleaned cells.
Concretely, at ﬁxed intervals during operation, we consider
the parameters 
i
t
of all cells c
i
of the dirt distribution that
are currently empty of particles. The currently traversed cells
are not considered as their cleaning is in progress and their
state might be changing. From the values 
i
t
, we calculate
the (1 ) quantiles of the dirt distributions in every cell.
From the quantiles, we compute the cells that have to be
cleaned, i.e., the policy 
t
(
^
d
t
) at time t, and compare it
with the policy
t 1
(
^
d
t 1
) that is currently followed. If the
new policy 
t
(
^
d
t
) includes cells that the policy 
t 1
(
^
d
t 1
)
would not visit anymore, we re-compute the TSP path using
the previous path as an initial guess. The robot ends the
cleaning cycle if, after a ﬁnal re-planning step, the policy
contains no cells anymore, i.e., the(1 ) quantiles of the dirt
distributions in every cell are below . Thus, after cleaning,
our approach can guarantee that the dirt levels in the whole
environment are below  with conﬁdence 1 .
V. EXPERIMENTAL EVALUATION
We evaluated the performance of our approach in extensive
experiments both in simulation and with a real cleaning
robot. In all experiments, we used a conﬁdence level of
1  = 99%, and a maximum allowed dirt level of  = 5.
In preliminary experiments, we found that it sufﬁces to set
the number of particles to K = 500. To compute cleaning
paths, we applied a state-of-the-art TSP solver that runs in
approximatelyO(n
2:2
) [7].
A. Evaluation on a Real Cleaning Robot
To evaluate the effectiveness of our approach in practice,
we used an iRobot Roomba 560 vacuuming cleaning robot,
which is by default equipped with a dirt sensor. This dirt
sensor is a small metal plate inside the suction unit that
generates a measurement whenever a speck of dirt hits the
plate. In the experiment, we used larger grained ﬂour as dirt.
A calibration of the sensor yielded that every measurement
(and therefore also every unit of 
i
t
and of ) corresponds
to approximately 0:16 g of ﬂour. We additionally equipped
the robot with an Asus Xtion Pro Live sensor that we used
for range measurements, with a gyroscope to improve the
odometry readings of the robot, and with a notebook. The
robot and the experimentation area are shown in the upper
part of Fig. 1. The lower part of the ﬁgure shows the
occupancy grid map and the initial dirt distribution used
in the experiment. The resolution of the cells of the dirt
distribution is 0:10 m. For this experiment, we manually
speciﬁed the initial values of the dirt distribution. Concretely,
we selected 25 cellsc
i
(see Fig. 1), for which we speciﬁed a

i
0
value of the Poisson distribution of 10, 15, 20, or 25. For
all other cells of the dirt distribution, we set 
i
0
to zero. For
each run of the robot, we sampled a concrete instantiation
from the speciﬁed initial dirt distribution as ground truth.
We performed ten cleaning cycles using our approach. To
measure the amount of ﬂour that we put into the environment
and the amount that was still there after cleaning, we used
a precision balance. The ﬁrst row of Table I shows the
number of successes, i.e., the number of runs after which
the 99% quantile of ground truth dirt was not above . It
also shows the average distance traveled per cleaning cycle
as estimated by the particle ﬁlter, and the average travel
time. As the table shows, our approach successfully met the
threshold  in every run, in fact even in every cell. During
one run, it performed on average 22:7 replanning operations
that actually changed the path traveled by the robot. The
5603
Fig. 4. Environments used for the simulation experiments. The maps in
the upper row were recorded using the real robot.
planning and re-planning times were below 0:3 seconds. For
comparison, we also applied three other cleaning strategies
to the same scenario. The three other strategies were the
bounded-dirt strategy without replanning (no replanning) as
described in our previous work [8], a systematic approach,
and the built-in strategy of the Roomba robot. For the
systematic approach, we let the robot execute a sweeping
path that covers the whole environment and overlaps0:025 m
parallel to the direction of movement of the robot, to account
for some of the localization error in the path execution. The
Roomba strategy mostly performs randomized movements
but also makes use of the dirt sensor. If the robot detects dirt,
it performs rotational movements to clean more thoroughly.
We started the Roomba strategy at the same pose as our
approach and let it run for the same amount of time as our
approach. Table I shows the results of the comparison. All
other approaches did not meet the desired threshold  in
at least four out of ten runs. The no replanning strategy
needed shorter times and distances than our approach, as it
only visits each selected cell once. The systematic strategy
needed more than double the time of our approach and did
not succeed in four cases due to slight localization errors.
The Roomba strategy always missed at least one dirty cell
entirely in the time in which our approach cleaned the whole
environment. For the Roomba strategy, no average distance
is available, as our distance estimate is based on the particle
ﬁlter data. As t-tests showed, the 99% quantile of the dirt
values after cleaning with our approach is signiﬁcantly lower
than 99% quantiles for all other approaches on a 5% level.
Also, our approach needs signiﬁcantly shorter times and
distances than the systematic strategy on a 5% level. Still,
the results of this experiment raise additional questions: Does
the structure of the environment inﬂuence the result? Is our
approach still efﬁcient if the dirt is more widely distributed?
Does the incorporation of the dirt sensor measurements in
the particle ﬁlter inﬂuence the localization performance?
To answer these questions, we performed a number of
simulation experiments.
B. Evaluation of the Cleaning Performance in Simulation
In the ﬁrst set of simulation experiments, we evaluated
the inﬂuence of the structure of the environment and of the
amount of dirt in the environment on the performance of
our approach. We applied our approach in four different
0-5 5-10 10-15 15-20 20-25
0
50
100
Ranges of 
i
0
values
Cleaning Successes [%]
0-5 5-10 10-15 15-20 20-25
0
10
20
30
Ranges of ?
i
0
values
99% Quantile [?]
(Dirt after cleaning)
0-5 5-10 10-15 15-20 20-25
0
50
100
Ranges of ?
i
0
values
Traveled Distance [m]
Our Approach No Replanning Systematic Random
Fig. 5. Results of the simulation experiments averaged over all environ-
ments and percentages of dirty cells. The horizontal line in the middle plot
marks the maximum allowed dirt level .
environments, two maps obtained from real world robotic
experiments and two artiﬁcial ones (see Fig. 4). In addition
to the different environments, we evaluated three different
percentages (5%, 10% and 20%) of dirty cells in the envi-
ronments and ﬁve different ranges of
i
0
values (5-10, 10-15,
15-20, 20-25, and 25-30) of expected dirt in the dirty cells.
We sampled the dirty cells in the environment uniformly
from the set of all cells of the dirt distribution, and the 
i
0
values of each dirty cell uniformly from the considered range
of values. For the sensors and actuators of the simulated
cleaning robot, we used the parameters obtained in the real
world experiments. For comparison, we also applied the no
replanning and the systematic approach described in the
previous section. As the Roomba strategy was not available
in simulation, we considered another random strategy. This
strategy drives straight ahead until it hits a wall, randomly
rotates on the spot, and drives forward again. In each run,
we stopped the random strategy as soon as the robot traveled
the same Euclidean distance as with our approach. For each
strategy, environment, percentage of dirty cells, and range
of dirt levels, we performed 100 trials. We evaluated the
distance traveled by the robot and the 99% quantile of the
ground truth dirt remaining after each run. We consider a
run as successful if the 99% quantile is not above  = 5.
5604
0 200 400 600 800 1;000 1;200 1;400
0
0:02
0:04
0:06
0:08
Time Step
Translational Error [m]
Range Measurements Only
Range + Dirt Measurements
Fig. 6. Translational localization error with and without dirt measurements.
Fig. 5 shows the results of the simulation experiments
averaged over all environments and percentages of dirty
cells in the environments. The individual results for the
different environments and percentages were qualitatively
similar. Only the random strategy performed slightly better
in the plain rectangular environment than in the others, but
in general resulted in a very high value of remaining dirt.
As the ﬁgure shows, our approach succeeded in every single
trial and maintained its success rate for increasing values of
dirt per cell, while the success rates of all other approaches
decreased. For every range of
i
0
values, t-tests revealed that
the 99% quantiles of the dirt remaining in the environment
after cleaning with our approach are signiﬁcantly lower than
the 99% quantiles for all other approaches on a 5% level.
As shown in Fig. 5, the no replanning approach yielded
the shortest distance. As our approach re-visits previously
imperfectly cleaned cells, it needs to travel a longer distance,
which increases with the amount of dirt per cell. Still,
compared to the systematic approach, t-tests showed that our
approach resulted in signiﬁcantly shorter traveled distances
for every evaluated range of 
i
0
values on a 5% level.
Note that in real world environments, the dirty cells are
typically not uniformly distributed but clustered, e.g., around
the dinner table or the entrance area. This would reduce the
distance traveled by our approach even more, as the average
distance between two dirty cells would be smaller.
C. Evaluation of the Localization Performance
In a second set of simulation experiments, we evaluated
the inﬂuence of the dirt sensor measurements on the localiza-
tion performance of the robot. We used the occupancy grid
map and the dirt distribution from the real world experiments
described in Sec. V-A and simulated 100 runs with the no
replanning strategy. In each run, we applied a particle ﬁlter
localization without integrating the dirt sensor measurements
as well as the particle ﬁlter localization with the dirt sensor
integration described in Sec. III-A. For each time step, we
recorded the translational error between the ground truth and
the most likely particle.
Fig. 6 shows the resulting errors averaged over all runs.
Especially in parts of the trajectory with high localization
errors, integrating the dirt measurements can substantially
reduce the localization error. A t-test revealed that averaged
over all time steps, our state estimation approach results in
signiﬁcantly smaller localization errors than the particle ﬁlter
localization without dirt sensor measurements on a 5% level.
VI. CONCLUSIONS
In this paper, we presented a novel approach for jointly
estimating the trajectory of the cleaning robot and the dis-
tribution of dirt in the environment. For this, we developed
probabilistic models of the cleaning unit as well as the dirt
sensor of the robot. We showed how to use our approach
to adapt the cleaning path during operation, leading to
guaranteed low dirt levels in the entire environment with
high conﬁdence. Extensive experiments, also with a real
cleaning robot, demonstrated that our approach outperforms
other approaches in terms of cleanliness after operation and,
as a side effect, even improves the localization performance
of the robot. One option for future research is to extend our
approach to work with a representation of the dirt distribution
that considers spatial dependencies.
REFERENCES
[1] C. Bishop. Pattern recognition and machine learning. Springer, 2007.
[2] T. Bretl and S. Hutchinson. Robust coverage by a mobile robot of
a planar workspace. In Proc. of the IEEE Intl. Conf. on Robotics &
Automation (ICRA), 2013.
[3] H. Choset. Coverage for robotics – a survey of recent results. Annals
of Mathematics and Artiﬁcial Intelligence, 31(1):113–126, 2001.
[4] B. Ferris, D. Fox, and Neil D Lawrence. Wiﬁ-slam using gaussian
process latent variable models. In Proc. of the Intl. Conf. on Artiﬁcial
Intelligence (IJCAI), 2007.
[5] J. Foley, A. Van Dam, S. Feiner, J. Hughes, and R. Phillips. Introduc-
tion to computer graphics. Addison-Wesley Reading, 1994.
[6] J. Gutmann, E. Eade, P. Fong, and M. Munich. A constant-time
algorithm for vector ﬁeld SLAM using an exactly sparse extended
information ﬁlter. In Proc. of Robotics: Science and Systems (RSS),
2010.
[7] K. Helsgaun. An effective implementation of the Lin-Kernighan trav-
eling salesman heuristic. European Journal of Operational Research,
126:106–130, 2000.
[8] J. Hess, M. Beinhofer, D. Kuhner, P. Ruchti, and W. Burgard. Poisson-
driven dirt maps for efﬁcient robot cleaning. In Proc. of the IEEE
Intl. Conf. on Robotics & Automation (ICRA), 2013.
[9] W. Jeong and K. Lee. CV-SLAM: A new ceiling vision-based SLAM
technique. In Proc. of Robotics: Science and Systems (RSS), 2005.
[10] C. Jung, W. Chung, J. Ahn, M. Kim, G. Shin, and S. Kwon. Optimal
mechanism design of in-pipe cleaning robot. In Proc. of the IEEE
Intl. Conf. on Mechatronics and Automation (ICMA), 2011.
[11] Y . Katsuki, T. Ikeda, and M. Yamamoto. Development of a high
efﬁciency and high reliable glass cleaning robot with a dirt detect
sensor. In Proc. of the IEEE/RSJ Intl. Conf. on Intelligent Robots and
Systems (IROS), 2011.
[12] G. Lawitzky. A navigation system for cleaning robots. Autonomous
Robots, 9(3):255–260, 2000.
[13] J. M¨ uller, O. Paul, and W. Burgard. Probabilistic velocity estimation
for autonomous miniature airships using thermal air ﬂow sensors. In
Proc. of the IEEE Intl. Conf. on Robotics & Automation (ICRA), 2012.
[14] M. Pearson, C. Fox, J. Sullivan, T. Prescott, T. Pipe, and B. Mitchin-
son. Simultaneous localisation and mapping on a multi-degree of free-
dom biomimetic whiskered robot. In Proc. of the IEEE Intl. Conf. on
Robotics & Automation (ICRA), 2013.
[15] E. Prassler, A. Ritter, C. Schaeffer, and P. Fiorini. A short history of
cleaning robots. Autonomous Robots, 9(3):211–226, 2000.
[16] C. Stachniss and W. Burgard. Mobile robot mapping and localization
in non-static environments. In Proc. of the AAAI Conf. on Artiﬁcial
Intelligence (AAAI), 2005.
[17] S. Thrun, W. Burgard, and D. Fox. Probabilistic Robotics. MIT Press,
2006.
[18] Y . Zhang, J. Liu, G. Hoffmann, M. Quilling, K. Payne, P. Bose,
and A. Zimdars. Real-time indoor mapping for mobile robots with
limited sensing. In Proc. of the 3rd Intl. Workshop on Mobile Entity
Localization and Tracking, 2010.
5605
