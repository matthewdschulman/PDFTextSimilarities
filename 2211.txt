Model Predictive Control Architectures with Force Feedback for
Robotic-Assisted Beating Heart Surgery
Michel Dominici and Rui Cortes˜ ao
University of Coimbra, Institute of Systems and Robotics, 3030 Coimbra, Portugal
emails: michel.dominici@gmail.com cortesao@isr.uc.pt
Abstract— Minimally invasive surgery (MIS) offers consid-
erable advantages for patients, lowering infection risks, and
reducing trauma and convalescence times. Dedicated surgical
robots signiﬁcantly improve surgeon’s skills especially for tasks
requiring high precision such as lead placement and suturing.
However, these robotic setups do not allow yet beating heart
surgery with motion compensation functionalities. This paper
tackles autonomous heart motion compensation with force
feedback. We propose a cascade model predictive control (MPC)
architecture with a Kalman Active Observer (AOB) in the loop,
and compare it with the classical MPC approach. The cascade
MPC-AOB control architecture has two loops. The inner one
performs model-reference adaptive control, guaranteeing a de-
sired force tracking dynamics. The outer one generates control
actions to compensate physiological motions. Both MPC-based
architectures are analyzed and experimentally evaluated. Two
robots are used. A lightweight 4-DoF surgical robot generates
desired surgical forces and a 3-DoF robot equipped with an ex
vivo heart at the end-effector reproduces realistic heart motions.
I. INTRODUCTION
In cardiac surgery, surgical procedures can be very prob-
lematic due to physiological motions. Performing complex,
skillful and precise tasks on a moving organ, demands high-
dexterous surgeons and enhanced concentration. Respiration
is the most important source of disturbance, yielding large
cyclic heart movements. Additionally, heartbeat motions
involve high acceleration displacements. All of these dis-
turbances cannot be manually compensated by the surgeon
without phase and amplitude errors [1], [2], especially for
accurate surgical procedures such as needle insertion, artery
bypass graft, lead placement and suturing. Two classical
techniques tackle this problem. An external machine can be
used to substitute the heart while doing surgery. However,
the use of a heart-lung system implies more risks and
longer recovery times [3]. Another technique is based on
a passive mechanical device called stabilizer. Placed around
the workspace (e.g., coronary artery), it constraints motions
by suction or pressure giving the idea of a quasi-static heart.
Many improvements have been done since the ﬁrst versions
(in early 90’s). Nevertheless, stabilizers still have several
drawbacks [4] and [5]. For accessibility reasons, stabilizers
can only be used for surgeries on the front of the heart.
Additionally, intense pressure necessary to cancel motions
may affect heart circulatory stability. Sucker-type stabilizers
do not present this problem, but they introduce vacuum
pressure that can rise to a level causing epicardial damage.
Robotic-assisted beating-heart surgery can efﬁciently cir-
cumvent surgical procedure difﬁculties through a proper
control design. Compensating physiological motions au-
tonomously through sensory data (e.g., vision and/or force)
allows the surgeon to work on a virtual static organ. Archi-
tectures based on visual servoing have been ﬁrst developed
to compensate heart motions [6]. They proposed a hand
support which tracks an interest point of the surgical site.
A camera ﬁxed to the support gives the distance information
between the platform and the organ. Using this information,
a control loop maintains the support at a constant distance.
The surgeon’s hand attached to the support is synchronized
with the moving organ, while images from the camera system
provide a stable view of the surgical site. More recently,
Bachta and co-authors [7] proposed an active stabilizer to
improve classical solutions. A common stabilizer has been
piezo-electrically actuated to decrease residual heart motions.
A high speed camera (frame rate: 333 [Hz]) tracks vertical
displacements which have been used by an H
1
control
architecture. Solutions only based on visual servoing present
drawbacks [8]. Minimally invasive surgery is performed in
a cluttered environment where surgical instruments occlude
artiﬁcial and natural landmarks. This situation entails track-
ing efﬁciency deterioration, disturbing the overall motion
compensation. Moreover, contact tasks deform locally the
surface of soft tissues (suturing, incision, ablation, etc.),
affecting dramatically landmark calibration. Also, physiolog-
ical motions induce disturbance forces during contact tasks
that can hardly be compensated with vision information only.
Control architectures based on force information allow to
manage interaction forces between tool and environment. In
addition, force information may be used to give a haptic
feedback to the surgeon. Kitagawa and co-authors [9] have
quantiﬁed force feedback effects during precise surgery such
as suturing. Experimental results have shown that force
feedback improves robot-assisted performances during suture
knot tying. Cagneau and co-authors [10] have proposed
a force control architecture able to compensate periodic
motions. An advanced iterative learning control have been
implemented as an outer loop to reject periodic disturbances,
reducing bad transients during the learning phase. No speciﬁc
model is necessary for the robot and environment, although
the perturbation period needs to be known in advance. This
assumption is problematic for cardiac surgeries, due to ran-
dom and chaotic nature of heart motions [11]. More recently,
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 2276
Kesner and Howe [12] have presented a catheter robotic
system dedicated to beating heart surgery. A home made 1-
DoF distal force sensor provides force feedback information.
Additionally, a force-modulated position controller with fric-
tion and dead zone compensation was developed to apply a
constant force on the mitral valve. Based on observations of
previous cardiac motion cycles, a predictive autoregressive
ﬁlter estimates the desired catheter acceleration, which is
added to the control loop as a feedforward term. The results
showed good capability to maintain a constant force on a
fast moving target, although catheter-based solutions have a
limited force range.
Based on the precedent work [13], we propose in this
paper to improve the classical model predictive control
architecture. We merge into two cascade loops the MPC
approach presented in [14] with the AOB design described
in [15], and compare it with the classical MPC architecture
(cMPC). The new cascade control architecture is called
MPC-AOB. Our predictive formulation is based on a pulse
response model requiring an asymptotically stable plant. The
inner loop based on a Kalman active observer guarantees
an asymptotically stable system behavior. The external force
control loop is based on a predictive formulation which
has a mathematical model of the inner loop to predict
system behavior. Both cMPC and MPC-AOB approaches are
analyzed and assessed based on heart motion compensation
capabilities. The paper is organized as follows. The task
space formalism is given in Section II. Cascade MPC-AOB
and cMPC architectures are discussed in Sections III and IV.
Experimental results on physiological motion compensation
are presented in Section V. Finally, Section VI concludes the
paper.
II. COMPUTED TORQUE TECHNIQUES IN TASK SPACE
Given a set of generalized joint coordinates q describing
robot’s posture, the well-known robot dynamics is repre-
sented by
M(q) q +v( _ q;q) +g(q) =; (1)
where M(q) is the mass matrix, v( _ q;q) is the vector of
Coriolis and centripetal forces, g(q) is the gravity term, and
 is the generalized torque acting onq. Using the operational
space formulation, (1) can be written as

x
(q)

X
s
+ 

x
(q; _ q) =F
c
+F
e
; (2)
where X is the Cartesian position, 
x
(q) is the operational
space mass matrix, and 

x
(q; _ q) lumps Coriolis, centripetal,
and gravity terms, all in Cartesian coordinates. F
c
is the
command force and F
e
represents external forces acting on
the robot end-effector. Knowing robot dynamic parameters
and measuring F
e
, F
c
can be computed by
F
c
=F
e
+ 
x
(q)f
?
+ 

x
(q; _ q); (3)
to obtained the decoupled plant
1

X
s
=f
?
: (4)
1
Modeling errors in (3) corrupt (4), motivating the use of the AOB
architecture to compensate them.
Equation (4) represents the dynamics of a unitary mass. f
?
is an acceleration, being an input parameter. Introducing
a damping term K
2
and taking into account the system
delay T
d
(mainly due to signal processing), as well as a
contact model
2
represented by
^
K
s
(an estimation of the heart
stiffnessK
s
), the linear system plantG
ol
for each Cartesian
dimension is given by
G
ol
=
^
K
s
e
 sT
d
s(s +K
2
e
 sT
d
)
: (5)
For small T
d
,
G
ol

^
K
s
e
 sT
d
s(s +K
2
)
: (6)
Its equivalent temporal representation is
 y(t) +K
2
_ y(t) =
^
K
s
v(t T
d
); (7)
wherey(t) is the plant output (measured force at the robot’s
end-effector) and v(t) is the delayed plant input. Deﬁning
the state variablesx
1
(t) =y(t) andx
2
(t) = _ y(t), (7) can be
written as

_ x
1
(t)
_ x
2
(t)

=

0 1
0  K
2

x
1
(t)
x
2
(t)

+

0
^
K
s

v(t T
d
):
(8)
Discretizing with sampling time T
s
, the equivalent discrete
time system is of form
3

x
r;k
= 
r
x
r;k 1
+  
r
v
k 1
y
k
= C
r
x
r;k
: (9)
In our case,x
r;k
has dimension three. The ﬁrst two states of
the discretized system represent respectively the end-effector
force and its derivative (only the force is measured). The
other state is due to system delay T
d
= T
s
and equal to
v
k 1
.
III. CASCADE MPC-AOB CONTROL ARCHITECTURE
Due to a pole at the origin, the continuous plant (6) and
its discrete equivalent (9) are not asymptotically stable. Even
if classical MPC approaches can deal with this plant, well-
deﬁned stable plants are more robust to deal with external
disturbances (such as heart motions). Therefore we have
implemented an active observer to guarantee a stable plant.
A. Inner Loop
The AOB requires the description of the open loop system
plant (9) as well as the desired closed loop model G
cl
.
Deﬁning G
cl
by
G
cl
=
1
(1 +T
cl
s)
2
e
 sT
d
; (10)
which corresponds to a critically damped system with
time constant T
cl
, a state-feedback L
r
can be computed
in straightforward way. Additionally, an extra state ^ p
k
is
2
A more complex model taking into consideration the viscoelastic and
anisotropic behavior of the myocardial tissue can be used (not addressed in
this paper).
3
See [16], [17] for further details on discrete matrices.
2277
Fig. 1. Cascade MPC-AOB force control architecture for beating heart surgery. Computed torque techniques linked with the robot inverse dynamics model
(IDM) generate a decoupled and linearized system. The open loop transfer functionG
ol
also takes into account a damping factorK
2
and the environment
stiffness Ks . The desired closed loop transfer function G
cl
is obtained by the AOB architecture using the state-feedback gain Lr and the extra state ^ p
k
.
L
1
is the ﬁrst element ofLr . The MPC generates a processed reference forceu
k
for AOB control, based on the desired forceF
d
, the measured forcey
k
and G
cl
. The external torque e is mainly due to beating heart disturbances.
introduced to compensate system disturbances
4
. The AOB
closed-loop estimation is given by
5

^ x
r;k
^ p
k

= ^ x
 
a
+K
k
(y
k
  ^ y
k
) (11)
and
^ y
k
=

C 1

^ x
 
a
; (12)
where the a priori augmented state estimation ^ x
 
a
is given
by
^ x
 
a
=


r
   
r
L
r
0
0 1

^ x
r;k 1
^ p
k 1

+

 
r
0

u
k 1
:
(13)
The Kalman gain K
k
reﬂects uncertainties associated to the
system state

^ x
r
(k) ^ p (k)

T
, depending on system (Q
k
)
and measurement (R
k
) noise matrices. Q
k
is of form
Q
k
=

Q
x
r;k
0
0 Q
p
k

: (14)
The absolute values of R
k
and Q
k
are not important, since
only the relative relation is relevant for the Kalman gain [15].
The AOB is inserted in the cascade architecture depicted in
Fig. 1. The MPC generates a processed reference forceu
k
for
AOB control, based on the prediction of the overall system
dynamics, which includes the desired forceF
d
, the measured
force y
k
and G
cl
.
B. Outer Loop
The MPC is a model based control architecture developed
around a ﬁnite receding horizon strategy, and it requires a
discrete state space model of G
cl
. From (10), G
cl
can be
represented by

x
k
= Ax
k 1
+Bu
k 1
y
k
= Cx
k
; (15)
4
Further details on AOB methodologies can be seen in [18], [17] and
[15].
5
A ﬁrst-order AOB has been chosen.
u
k?1
˜ u
k+i
F
d
y
k
˜ y
k+i
H
p
k
...
H
u
...
k+H
u
...
k+i k+H
p
Fig. 2. Strategy of model predictive control. Based on G
cl
, predicted
outputs ~ y
k+i
(blue dash-dot-dotted curve) are computed along Hp . The
reference F
d
is the desired force (red curve). Optimal control commands
~ u
k+i
(green dash-dotted curve) are computed to minimize the cost function
W .
where the small system delay T
d
can be neglected for the
MPC approach
6
. Therefore,x
k
has dimension two represent-
ing the end-effector force and its derivative.y
k
is the applied
force. From (15), the x
k
prediction i samples ahead, ~ x
k+i
,
is based on u
k 1
, y
k
, ~ u
k+i
and ^ x
k
, where ^ x
k
is a state
estimation of (15). Along the prediction horizon H
p
, the
future control sequence ~ u
k+i
is computed by minimizing
a cost function W to keep y
k
as close as possible to the
desired forceF
d
at timek, since future values ofF
d
are not
known in advance for our system. Only the ﬁrst element of
the computed control sequence, ~ u
k+1
, is sent to the AOB
control loop. As the prediction horizon is displaced towards
the future, new output predictions ~ x
k+i
and new control
sequences ~ u
k+i
are computed at each sampling time.
1) MPC Strategy: The methodology of the MPC is char-
acterized by the following strategy:
 The ﬁnite time horizon H
p
deﬁnes the slot where
predicted outputs ~ y
k+i
should follow F
d
. H
p
is bigger
than the G
cl
rise time, and its length greatly inﬂuences
control tracking capabilities. Extending H
p
improves
6
Further details can be found in [19].
2278
performance, but increases computational time.
 At each time k, based on (15), the future outputs ~ y
k+i
are predicted alongH
p
, wherei2 [1;H
p
]. ~ y
k+i
depends
on ^ x
k
, u
k 1
, y
k
and ~ u
k+i
.
 The command vector ~ u
k+i
(i2 [0;H
p
 1]) is computed
to minimize the cost function W , which is a quadratic
function of the predicted errors between ~ y
k+i
and F
d
.
W also includes predicted control efforts. Two diagonal
matrices  and  are associated to control efforts and
tracking errors, respectively. The relation between 
and  deﬁnes the aggressiveness of the controller in
recovering from disturbances [20] and [21].
 A control horizon H
u
 H
p
is introduced to reduce
computation time.H
u
deﬁnes the time slot along which
the control command ~ u
k+i
is active (forH
u
i<H
p
,
~ u
k+i
is kept constant). AlthoughH
u
= 1 has acceptable
performance for stable plants, increasingH
u
makes the
control more active up to a limit where any further
increase inH
u
has little effect. For high-performance a
larger value of H
u
is desirable.
 Once ~ u
k+i
has been computed, only the ﬁrst element
~ u
k+iji=0
is applied to system. The whole cycle of output
measurement y
k
, output predictions ~ y
k+i
, and control
sequence ~ u
k+i
computation is repeated and updated at
each sampling time.
The overall MPC strategy is depicted in Fig. 2. In our system,
F
d
is constant during the entire time horizon H
p
. The MPC
control signals ~ u
k+i
are computed based on the system
model and cost function W . A good control performance
can be achieved with H
u
< H
p
, entailing good tracking
capabilities between F
d
and y
k
.
2) MPC Formulation: From (15) and assuming ~ u
k
is
composed of two terms, the control increment ~ u
k
and the
previous command u
k 1
,
~ u
k
= ~ u
k
+u
k 1
; (16)
we compute future states along the prediction horizon
~
X
k
= 	^ x
k
+ u
k 1
| {z }
past
+  
~
U
k
| {z }
future
; (17)
with
~
X
k
=

~ x
k+1
 ~ x
k+i
 ~ x
k+Hp

T
; (18)

~
U
k
=

~ u
k
 ~ u
k+Hu 1

T
; (19)
	 =

A  A
Hu
A
Hu+1
 A
Hp

T
; (20)
 =
2
6
6
6
6
6
6
6
6
6
4
B
.
.
.
P
Hu 1
i=0
A
i
B
P
Hu
i=0
A
i
B
.
.
.
P
Hp 1
i=0
A
i
B
3
7
7
7
7
7
7
7
7
7
5
(21)
and
 =
2
6
6
6
6
6
6
6
6
6
6
6
4
B  0
AB +B  0
.
.
.
.
.
.
.
.
.
P
Hu 1
i=0
A
i
B  B
P
Hu
i=0
A
i
B  AB +B
.
.
.
.
.
.
.
.
.
P
Hp 1
i=0
A
i
B 
P
Hp Hu
i=0
A
i
B
3
7
7
7
7
7
7
7
7
7
7
7
5
: (22)
Equation (17) is composed of three terms. 	,  and  only
depend onA andB matrices, and can be computed off-line.
Along the prediction horizon, the ﬁrst two terms represent
the free response and the last term is the forced one. The
increment sequence 
~
U
k
is computed by minimizing the
cost function
W = (
~
Y
k
 
~
F
d
)
T
(
~
Y
k
 
~
F
d
) + 
~
U
k
T

~
U
k
; (23)
with
~
Y
k
=

C~ x
k+1
 C~ x
k+i
 C~ x
k+Hp

T
; (24)
and
~
F
d
=

F
d
 F
d
 F
d

T
: (25)
Deﬁning the prediction error
~
E
k
as the difference between
~
F
d
and the free response of the system,
~
E
k
=
~
F
d
  diag(C) [	^ x
k
+ u
k 1
] ; (26)
the cost function (23) can be written as
W = (
~
U
k
 
~
E
k
)
T
(
~
U
k
 
~
E
k
)+
~
U
k
T

~
U
k
: (27)
Developing (27), computing the gradient and set it to zero,
we obtain the optimal and unique solution 
~
U
k
equal to

~
U
k
= (
T
 +)
 1

T

~
E
k
: (28)
Making   0 and imposing  > 0 assures the Hessian
of (27) is a positive-deﬁnite matrix, which is enough to
guarantee that (28) is a the minimum. According to the MPC
strategy previously described, the ﬁrst element ~ u
k+iji=0
of
the optimal increment sequence (28) is added to the previous
commandu
k 1
and sent to the AOB control loop asu
k
. All
the computation is repeated at each sampling time.
IV. CLASSICAL MPC CONTROL ARCHITECTURE
The MPC-AOB controller is an improvement of previ-
ous work ([14]), where we presented a cMPC architecture
dedicated to heart motion compensation. Both are based on
the model predictive control algorithm presented above. This
section highlights differences between cMPC and MPC-AOB
approaches. cMPC is based on the discretized plant model
(9) of G
ol
, neglecting time delay
7
. Modeling errors are not
compensated, corrupting theG
ol
model which affects control
7
The system state has dimension two representing the end-effector force
and its derivative, and y
k
is the applied force.
2279
Fig. 3. cMPC force control architecture for beating heart surgery. G
ol
represents the model of the unstable and linearized system plant. Based on
a discrete G
ol
model, desired forces F
d
and applied forces y
k
, the cMPC
controller computes u
k
to perform surgical tasks with autonomous heart
motion compensation.
performance. From (9), future states are computed and equal
to
~
X
k
= 	^ x
k
+ u
k 1
| {z }
past
+  
~
U
k
| {z }
future
; (29)
with

~
U
k
=

~ u
k
 ~ u
k+Hp 1

T
; (30)
	 =


r
 
r
Hp

T
; (31)
 =
h
 
r

P
Hp 1
i=0

r
i
 
r
i
T
(32)
and
 =
2
6
6
6
4
 
r
 0

r
 
r
+  
r
 0
.
.
.
.
.
.
.
.
.
P
Hp 1
i=0

r
i
 
r
  
r
3
7
7
7
5
: (33)
Along the prediction horizon, the ﬁrst two terms represent
the free response and the last term is the forced one. Since
the free response is based on the unstable system plant G
ol
and the previous control command u
k 1
6= 0, the increment
sequence 
~
U
k
has to be deﬁned all over H
p
, to maintain
the system free response under “control”. Therefore H
u
is set equal to H
p
. A large control horizon implies high
dynamic control actions and increases computation time. As
a consequence,H
p
has to be decreased which affects tracking
performance. The cMPC control architecture is depicted in
Fig. 3. Based on G
ol
, desired forces F
d
and applied forces
y
k
, the cMPC generates a processed reference force u
k
for
the unstable and linearized system plant.
V. EXPERIMENTAL RESULTS
This section presents experimental results based on heart
motion compensation capabilities. The robotic platform is
presented in Fig. 4. It is composed by a lightweight 4-DoF
WAM robot used as a tool holder, a 6-DoF JR3 force sensor
8
and a Heartbox. The Heartbox is a 3-DoF robot able to
reproduce 3D motions with a precision of 0:1 [mm], where
an ex vivo heart is attached and used as targets. The cMPC
controller and the cascade MPC-AOB control described in
Sections II, III and IV are implemented on a 2:1 GHz
Intel Core 2 processor running Xenomai-Linux. The com-
munication to the WAM robot is performed by CAN bus.
Integrity of the WAM robot is checked through protection
8
A Kalman ﬁlter is used to ﬁlter the force signal.
Fig. 4. Two views of the experimental setup. A lightweight 4-DoF WAM
robot from Barrett Technology equipped with a 6-DoF JR3 force sensor
interacts with a 3-DoF robot (called Heartbox) that generates 3D beating
heart motions. An ex vivo heart is attached to the Heartbox and used as
target for the WAM robot.
functions, such as maximum joint velocity, maximum joint
torque, workspace limitation and maximum Cartesian forces.
The control sampling time is set to 1 [ms].
A. Cascade MPC-AOB Control Design
1) Inner loop: Critically damped behaviors are appropri-
ate for force-based tasks, since they represent the fastest
response without overshoot. For a desired contact model
^
K
s
= 900 [N/m], a damping K
2
= 10, and a desired G
cl
given by (10) withT
cl
= 3 [ms], the following state feedback
gain
L
r
=

161:5 1:189 0:557

(34)
is obtained. The stochastic parameters reﬂect the model
reference adaptive control strategy, where the uncertainties
are lumped in p
k
. R
k
is set to 1 and Q
k
is given by (see
(14))
Q
x
r;k
=
2
4
10
 12
0 0
0 10
 12
0
0 0 10
 12
3
5
(35)
and
Q
p
k
= 0:5 : (36)
This stochastic design entails the AOB Kalman gain
K
k;f
=

0:1236 8:145 0:662 0:662

T
: (37)
2) Outer loop: The length of the prediction horizon H
p
greatly inﬂuences control tracking capabilities. Extending
H
p
, a more accurate system is achieved but the computa-
tional time increases. Since our control sampling time is
T
s
= 1 [ms], a good trade-off is achieved with H
p
= 30
andH
u
= 5. The optimal command ~ u
k+iji=0
is computed
by minimizing the cost function W , with
 = 0:1I
u
(38)
and
 = 0:9I
p
; (39)
2280
Heartbox motion [mm]
?6
2
?2
0
Time [s]
?4
4
0 5 10 15
Fig. 5. Disturbances seen by the WAM robot and introduced by the
Heartbox, X, Y and Z signals are represented by blue, green and red
curves, respectively. The Heartbox is turned on after 1 [s].
where I
u
and I
p
are identity matrices of size H
u
and H
p
,
respectively.
B. cMPC Control Design
Due to the unstable model G
ol
to predict system outputs,
the length H
u
and H
p
are equal. Extending the prediction
horizon greatly increases control tracking capabilities leading
to high dynamic control actions and a larger computational
time. A good trade-off is achieved withH
p
= 12. The matrix
 is increased to limit the control dynamics,
 = 0:15I
u
; (40)
which leads to
 = 0:85I
p
: (41)
C. 3D Physiological Motion Compensation
Both control architectures are designed to compensate
respiration and heartbeat disturbances autonomously. To
evaluate compensation capabilities, respiration and heartbeat
signals along three axes are generated by the Heartbox. They
are based on physiological motion data recorded during in
vivo experiments on a pig’s heart [22]. The WAM robot
applies forces on the moving heart attached to the Heartbox,
and the goal is to track desired forces. Due to the soft nature
of the heart, Heartbox motion seen by the WAM robot is
signiﬁcantly different. Fig. 5 represents the heart motion
seen by the WAM robot along three axis. This motion is
based on WAM robot Cartesian positions and residual force
measurements recorded during two consecutive experiments:
Heartbox turned on and off. Making spectral analysis, we can
clearly identify two main sources of disturbance: breathing
and heartbeat motions (see Fig 6). The ﬁrst two peaks repre-
sent respiration (0:34 [Hz] and 0:72 [Hz]), corresponding to
20 breathing cycles per minute. The last ﬁve peaks are due
to heartbeats (1:25 [Hz], 2:53 [Hz], 3:78 [Hz], 5:08 [Hz] and
6:32 [Hz]), which correspond to 75 heartbeats per minute.
Figs. 7 and 8 present 3D motion compensation results
for cMPC and cascade MPC-AOB approaches, respectively.
System force responses along three directions are represented
separately. Colored curves represent applied forces and black
curves are constant desired forces equal to 0 [N] for X and
Y axes and 5 [N] forZ axis. The Heartbox is turn on after
1 [s]. The cascade MPC-AOB architecture reduces peak-to-
peak amplitudes by more than 80% w.r.t. the cMPC.
Disturbance PSD
 
 1.4
1
0.2
0
Hertz [Hz]
1 2 3 4 5 6 7
Fig. 6. Power spectral density analysis of the disturbance seen by the
WAM robot and induced by beating heart motion. X, Y and Z directions
are represented by blue, green and red curves, respectively.
VI. CONCLUSIONS
This paper has presented a comparative study of two
force control architectures (cMPC and cascade MPC-AOB)
dedicated to the beating heart surgery. The cMPC control
approach is based on a model of the robotic system to predict
future outputs. Due to a pole at the origin the model is
unstable, increasing control action dynamics and computa-
tional time. Moreover, modeling errors are not compensated,
corrupting the plant model. Based on these limitations which
greatly affect control tracking performance, we improved the
cMPC approach by introducing a Kalman active observer
(AOB) in the control architecture. The MPC drives the AOB
for autonomous heart motion compensation. This cascade
MPC-AOB controller has two loops. The inner loop imposes
a desired and stable closed loop dynamics, based on non-
linear feedback linearization, augmented state feedback, and
stochastic design. The outer loop generates force references
for AOB control by predicting applied forces in a ﬁnite
time horizon. Heart motion compensation capabilities have
been evaluated for both controllers. A 3-DoF Heartbox robot
equipped with an ex-vivo heart generates 3D heart motions,
which have been recorded during in vivo experiments on a
pig’s heart. A 4-DoF WAM robot with a force sensor at the
tip applies controlled surgical forces on the moving heart. As
expected, cMPC control tracking is affected by the unstable
plant. Residual peak-to-peak forces are bigger than 2 [N],
which is not adequate for beating heart surgery. However,
introducing an inner AOB loop to stabilize the system plant,
tracking performance greatly improved. The cascade MPC-
AOB architecture control showed high quality compensa-
tion capabilities. Residual peak-to-peak forces smaller than
0:5 [N] have been attained without knowingapriori complex
and chaotic heart motions.
ACKNOWLEDGMENTS
This work was supported in part by the Portuguese
Science and Technology Foundation projects PTDC/EEA-
CRO/110008/2009.
REFERENCES
[1] V . Falk, “Manual control and tracking-a human factor analysis relevant
for beating heart surgery,” The Annals of Thoracic Surgery, vol. 74,
pp. 624–628, 2002.
[2] S. Jacobs, D. Holzhey, F. W. Mohr, and V . Falk, “Limitations for
manual and telemanipulator-assisted motion tracking and dexterity for
endoscopic surgery,” in Proc. of the Int. Conf. on Computer Assisted
Radiology and Surgery (CARS), June 2003, pp. 673–677.
2281
Force in X [N]
Time [s]
0 5 10 15
?1.5
1
0.5
0
?0.5
?1
1.5
Force in Y [N]
Time [s]
0 5 10 15
1.5
1
0.5
0
?0.5
?1
?1.5
Force in Z [N]
Time [s]
?6
?5.5
?5
?4.5
?4
0 5 10 15
Fig. 7. cMPC experimental results for 3D motion compensation. Applied
forces alongX,Y andZ directions on an moving heart for constant desired
forces (0 [N] for X and Y axis and  5 [N] for Z axis). Physiological
motions are introduced at 1 [s] along three directions.
[3] M. F. Newman, J. L. Kirchner, B. Phillips-Bute, V . Gaver, H. Grocott,
and R. H. Jones, “Longitudinal assessment of neurocognitive function
after coronary-artery bypass surgery,” The New England Journal of
Medicine, vol. 344, no. 6, pp. 395–402, February 1991.
[4] V . Falk, A. Diegler, T. Walther, R. Autschbach, and F. Mohr, “Devel-
opments in robotic cardiac surgery,” Current Opinion in Cardiology,
vol. 15, pp. 378–387, 2000.
[5] R. Dzwonczyk, C. del Rio, B. Sun, R. Michler, and M. Howie, “De-
vices used to expose the posterior coronary artery in opcabg surgery
may cause ischemia,” in Proceedings of the 31th Bioengineering
conference, vol. 2-3, 2005, pp. 148–149.
[6] A. L. Trejos, S. E. Sulcudean, F. Sassani, and S. Lichtenstein, “On
the feasibility of a moving support for surgery on the beating heart,”
in Proc. of the Second Int. Conf. on Medical Image Computing and
Computer-Assisted Intervention (MICCAI). London, UK: Springer-
Verlag, 1999, pp. 1088–1097.
[7] W. Bachta, P. Renaud, E. Laroche, A. Forgione, and J. Gangloff,
“Cardiolock: an active cardiac stabilizer, ﬁrst in vivo experiments using
a new robotized device,” J. of Computer Aided Surgery, vol. 13, no. 5,
pp. 243–254, September 2008.
[8] R. Richa, A. P. L. B´ o, and P. Poignet, “Beating heart motion prediction
for robust visual tracking,” in Proceedings of IEEE Conference on
Robotics and Automation (ICRA ’10), Anchorage, USA, 2010, pp.
4579–4584.
[9] M. Kitagawa, A. Okamura, B. Bethea, V . Gott, and W. Baumgartner,
“Analysis of suture manipulation forces for teleoperation with force
feedback,” in Proc. of the Int. Conf. on Medical Image Computing
and Computer-Assisted Intervention (MICCAI), Tokyo, Japan, 2002,
pp. 155–162.
[10] B. Cagneau, N. Zemiti, D. Bellot, and G. Morel, “Physiological motion
compensation in robotized surgery using force feedback control,” in
Proc. of the IEEE Int. Conf. on Robotics and Automation (ICRA),
Roma, Italy, April 2007, pp. 1881–1886.
[11] Y . Nakamura, K. Kishi, and H. Kawakami, “Heatbeat synchronization
for robotic cardiac surgery,” inProc.oftheIEEEInt.Conf.onRobotics
and Automation (ICRA), vol. 2, Seoul, Korea, May 2001, pp. 2014–
Force in X [N]
Time [s]
0
0.2
?1.5
1.5
?0.2
15 10 5 0
Force in Y [N]
Time [s]
?0.2
0
0.2
0 5 15 10
1.5
?1.5
Force in Z [N]
Time [s]
0 5 10 15
?4
?4.8
?5
?5.2
?6
Fig. 8. Cascade MPC-AOB experimental results for 3D motion compen-
sation. Applied forces alongX,Y andZ directions on an moving heart for
constant desired forces (0 [N] for X and Y axis and 5 [N] for Z axis).
Physiological motions are introduced at 1 [s] along three directions.
2019.
[12] S. Kesner and R. Howe, “Force control of ﬂexible catheter robots for
beating heart surgery,” in Proc. of the IEEE Int. Conf. on Robotics and
Automation (ICRA), Shanghai, China, May 2011, pp. 1589 –1594.
[13] M. Dominici, R. Cortes˜ ao, and C. Sousa, “Heart motion compensation
for robotic-assisted surgery predictive approach vs. active observer,”
in Proc. of the IEEE Int. Conf. on Robotics and Automation (ICRA),
Shanghai, China, May 2011.
[14] M. Dominici, P. Poignet, R. Cortes˜ ao, E. Dombre, and O. Tem-
pier, “Compensation for 3D physiological motion in robotic-assisted
surgery using a predictive force controller. experimental results,” in
Proc. of the IEEE Int. Conf. on Intelligent Robots and Systems (IROS),
St Louis, USA, September 2009.
[15] R. Cortes˜ ao, “On kalman active observers,” Journal of Intelligent and
Robotic Systems, vol. 48, pp. 131–155, 2007.
[16] K. J.
˚
Astr¨ om and B. Wittenmark, Computer controlled systems: theory
and design, 2nd ed. Prentice Hall, 1997.
[17] R. Cortes˜ ao, J. Park, and O. Khatib, “Real time adaptive control
for haptic telemanipulation with kalman active observers,” IEEE
Transactions on Robotics, vol. 22, no. 5, pp. 987–999, October 2006.
[18] R. Cortes˜ ao, “Kalman techniques for intelligent control systems:
Theory and robotic experiments,” PhD thesis, University of Coimbra,
Coimbra, Portugal, 2003.
[19] J. M. Maciejowski, Predictive control with constraints. Prentice Hall,
2002.
[20] D. W. Clarke, C. Mohtadi, and P. S. Tuffs, “Generalized predictive
control - part i. the basis algorithm,” Automatica, vol. 23, no. 2, pp.
137–148, 1987.
[21] ——, “Generalized predictive control - part ii. extensions and inter-
pretations,” Automatica, vol. 23, no. 2, pp. 148–160, 1987.
[22] M. Sauve, A. Noce, P. Poignet, J. Triboulet, and E. Dombre, “Three-
dimensional heart motion estimation using endoscopic monocular vi-
sion system: From artiﬁcial landmarks to texture analysis,” Biomedical
Signal Processing and Control, vol. 2, no. 3, pp. 199–207, 2007.
2282
