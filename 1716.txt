Grasp Moduli Spaces and Spherical Harmonics
Florian T. Pokorny Yasemin Bekiroglu Danica Kragic
Abstract— In this work, we present a novel representation
which enables a robot to reason about, transfer and optimize
grasps on various objects by representing objects and grasps
on them jointly in a common space. In our approach, objects
are parametrized using smooth differentiable functions which
are obtained from point cloud data via a spectral analysis. We
show how, starting with point cloud data of various objects,
one can utilize this space consisting of grasps and smooth
surfaces in order to continuously deform various surface/grasp
conﬁgurations with the goal of synthesizing force closed grasps
on novel objects. We illustrate the resulting shape space for a
collection of real world objects using multidimensional scaling
and show that our formulation naturally enables us to use
gradient ascent approaches to optimize and simultaneously
deform a grasp from a known object towards a novel object.
I. INTRODUCTION
The problem of determining a suitable representation
which enables a robot to reason about the manipulation
of objects in its environment is fundamental to robotics.
While most current grasp synthesis approaches are based on
non-smooth object representations such as triangle meshes,
this work considers smooth representations of objects that
can be continuously varied. Furthermore, while previously
objects such as boxes, cylinders, spheres and quadric sur-
faces have been considered as primitives for the purpose of
grasping and manipulation (see [9] and references therein),
we shall argue that shape primitives deﬁned in terms of a
spectral analysis of the underlying objects provides a useful
alternative. Our work extends the approach of [1], where
an inﬁnite dimensional space – the Grasp Moduli Space
– for contact conﬁgurations on surfaces parametrized by a
cylindrical coordinate chart was introduced. It was shown
that shape deformation based approaches in this space can
The authors are with the Computer Vision and Active Perception
Lab, Centre for Autonomous Systems, School of Computer Science and
Communication, KTH Royal Institute of Technology, Stockholm, Sweden,
ffpokorny, yaseminb, danig@kth.se. This work was sup-
ported by the EU grants FLEXBOT (FP7-ERC-279933), eSMCs (FP7-ICT-
270212) and RoboHow.Cog (FP7-ICT-288533).
be used to synthesize and transfer stable grasps if a smooth
surface representation of the object is known. In this work,
we utilize a spectral object representation, which has also
recently been used in neuroanatomy [2], and show how
such a representation can form a basis for a deformation
based grasp synthesis framework. Our present work extends
the approach of [1], since it allows us to use point cloud
data directly. Furthermore, grasps on any genus zero (i.e.
without holes) surface can in principle be modeled with
the techniques we consider here, vastly extending the set of
objects usable within this approach. The main contributions
of this paper can be summarized as follows:
a) We discuss the inﬁnite-dimensional shape spacesM
sph
andM
rad
for representing shapes for the purpose of
robotic grasping, and we investigate convexity proper-
ties ofM
rad
in particular.
b) For a set of example surfaces, we show how a point
cloud representation P leads to a smooth surface S
f
2
M
sph
using a spectral analysis of P .
c) We deﬁne the Grasp Moduli SpacesG
sph
andG
rad
for
m contacts on parametrized shapes inM
sph
andM
rev
respectively. We show how distances of spectral coef-
ﬁcient can be used to reason about nearby grasp/object
conﬁgurations.
d) We evaluate the success of a simple gradient ascent
approach in G
rad
in order to locally optimize grasp
quality on a ﬁxed surface.
e) We show how to efﬁciently transfer grasps in G
rad
between objects using a gradient based optimization and
evaluate our approach in simulation.
The paper is structured as follows: In Sec. II, we discuss
our motivation for this work and review common shape
representations in robotic manipulation and the basics of
spherical harmonics. In Sec. III, we discuss the theoretical
aspects of our work, and in Sec. IV we present experimental
results. We conclude in Sec. V and discuss future work.
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 389
II. BACKGROUND AND MOTIVATION
A. Grasp Synthesis
For a robot to grasp and manipulate objects, it is necessary
to ﬁrst determine an appropriate mathematical abstraction of
this process. Grasp synthesis classically relies on a notion of
grasp quality [3] and force-closure in particular (see [4] for
a review). In order to determine if a grasp is force closed,
one then typically assumes that all contacts between the
robot hand and the object are point contacts, and that the
geometry of the object is explicitly described – in practice
usually by a triangle mesh. We hence think of a grasp g on
a surface S with centre of mass z, with m contact points
c
i
and associated inward-pointing normal vectors n
i
as a
conﬁguration
g = (c
1
;:::;c
m
;n
1
;:::;n
m
;z)2R
3m
 (S
2
)
m
R
3
and will use the L
1
grasp quality measure Q deﬁned in [3]
to determine if such a conﬁguration is force closed or not,
given a surface friction coefﬁcient> 0.Q is deﬁned to be
the radius of the largest ball around the origin and entirely
inside the grasp wrench space if such a sphere exists and zero
otherwise. Q takes positive values if wrenches in arbitrary
direction can be withstood by the grasp g and the grasp
is considered more stable the larger Q is. State of the art
approaches such as [5] then typically incorporate a grasp
quality ranking with sampling and a decomposition of the
object in order to return a list of viable grasp hypotheses.
B. Shape Representations for Grasping
Triangle meshes provide a commonly used object repre-
sentation for robotic grasping. To determine contact con-
ﬁgurations on a mesh, a common approach used e.g. by
the popular simulation environment GraspIT [6] is based on
sampling hand poses that establish contact with the object
and to then rank the result by a grasp quality measure such
as the previously mentionedQ function. The work of [7] also
uses a sampling based approach to determine stable contact
conﬁgurations. A reduced object representation based on the
medial axes of a surface has been investigated in [8] for the
purpose of grasp synthesis. An alternative approach is based
on a hierarchical decomposition of objects into primitives
such as spheres, boxes or quadrics. The work of [9] focusses
on a box based decomposition in particular.
A problem with these representations is that it is not clear
how a robot can utilize learned grasps in novel situations,
e.g. when an object which is slightly different from previ-
ously investigated cases is encountered. Unlike problems in
Computer Vision, where it is possible to obtain millions of
training examples for a given learning problem, a robot will
typically not grasp a given object more than a few dozen
times and even simulated grasps are difﬁcult to obtain in
sufﬁcient numbers so that the high-dimensional state-space
consisting of robot hand conﬁgurations is densely sampled
for each object instance.
A guiding motivation for our work is hence the desire
to determine a representation allowing us to transfer grasps
between similar objects and to enable a statistical analysis of
‘similar’ grasps on ‘similar’ surfaces on a uniﬁed space of
shapes and grasps. The work of [10] has taken a step in this
direction, using point cloud matching and a combinatorial
search to transfer grasps between objects. The approach of
[11] instead decomposes an object into parts that can be
studied separately. There, graspable parts are then matched
between objects for the purpose of grasp transfer.
Note that, in both approaches, the surface geometry is
represented using discrete surface descriptors. Our approach
is instead based on a smooth object parametrization and
extends the work of [1], where the space of surfaces with
cylindrical coordinates, M
cyl
, was considered. The space
M
cyl
is convex, allowing us to deform between any two
surfaces S
1
, S
2
using a curve  : [0; 1]!M
cyl
,
(t) = (1 t)S
1
+tS
2
:
A further beneﬁt of the convexity is the fact that any ﬁnite set
of surfaces X =fS
1
;:::;S
n
g induces a ﬁnite dimensional
shape subset Conv(X) consisting of convex combinations of
elements of X. In [1], this shape space is combined with a
space of conﬁgurations of contact points to deﬁne a Grasp
Moduli SpaceG
cyl
parametrizing both a shape and a set
of contact points on the shape. A metric onG
cyl
can then
be deﬁned and one can continuously move between any two
points inG
cyl
. A particular advantage of this approach is that
there exist subsets of shapes on which grasp synthesis can be
carried out very efﬁciently, such as the surfaces of revolution
M
rev
M
cyl
considered in [1]. Using a deformation in
G
cyl
, these grasps can then be generalised to nearby surfaces
which are not themselves rotationally symmetric.
Noise can also naturally be described inG
cyl
, since we are
able to describe ‘shape-noise’ and ‘contact point conﬁgura-
tion noise’. Three important cases are 1) when the shape
is precisely perceived, but the hand cannot be controlled
sufﬁciently precisely, 2) when a slightly deformed shape
is encountered but the grasp was planned on the original
internal model of the shape, and 3) when both the shape
and the ﬁnal hand position are not precisely the same as an
internal representation had predicted.
We will utilize spherical harmonics to obtain a smooth
surface representation which have surfaced for manipulation
in the work of [12], where the resulting smooth parametriza-
tion was used to control a rolling interaction between a
simple gripper and an object. Based on the resulting surface
parametrizations, we discuss a shape space which generalises
M
cyl
since, in principle, any closed surface of genus zero
can be modelled given dense samples of points from the
object’s surface.
C. Spherical Harmonics
In order to extract smooth surfaces from point cloud data,
we shall make use of a spectral analysis on the sphere
which provides an analogue of classical Fourier analysis.
Consider the space L
2
(S
2
) of integrable functions on the
sphere S
2
 R
3
. We choose a coordinate chart p(;') =
(sin cos'; sin sin'; cos) on the sphere, with (;')2
(0;) (0; 2). For integers l;m, the real valued spherical
390
(a)Y
3;2
(b)Y
5; 2
(c)Y
8;5
Fig. 1: Illustration of some eigen-functions of  on S
2
.
harmonic function of degree l and order m,jmj 6 l, is
deﬁned by
Y
l;m
(;') =
8
>
<
>
:
c
l;m
P
jmj
l
(cos) sin(jmj')  l6m6 1
c
l;m
p
2
P
0
l
(cos) m = 0
c
l;m
P
m
l
(cos) cos(m') 16m6l;
where c
l;m
=
q
2l+1
4
(l m)!
(l+m)!
and P
m
l
denotes the associated
Legendre polynomial of orderm and degreel. The functions
Y
l;m
arise as an eigen-function of the Laplace operator  =
1
sin
@
@
(sin
@
@
+
1
sin
2

)
@
2
@
2
'
onS
2
[2]. For ﬁxedl, there are
2l + 1 eigenfunctionsfY
l;m
:m2f l;:::;lgg satisfying
Y
l;m
=
l
Y
l;m
;
where 
l
= l(l + 1) denotes the corresponding eigen-
value. These eigen-functions, for all l;m, form an inﬁnite
orthonormal basis for L
2
(S
2
) with respect to the standard
inner producthf;gi =
R
S
2
fg dVol, for f;g2 L
2
(S
2
) and
where dVol = sindd'. Fig. 1 displays a few of these
eigen-functions. Any f2L
2
(S
2
) can hence be expanded as
f(;') =
1
X
l=0
l
X
m= l
a
l;m
Y
l;m
(;');
for some a
l;m
2 R. Suppose now that we have samples
p
i
= p(
i
;'
i
) 2 S
2
on the sphere and associated noisy
function values f
i
, for 1 6 i 6 n, of some underlying
function f : S
2
! R. We can approximately reconstruct
f using a function h2L
2
(S
2
) such that h lies in the direct
sumH
L
of the eigen-spaces of  up to degreeL. The vector
space H
L
has dimension (L + 1)
2
and any such h is of the
form
h(;') =
L
X
l=0
l
X
m= l

l;m
Y
l;m
(;');
for some
l;m
2R. A least-squares ﬁt, minimizing the error
term
n
X
i=1
jh(
i
;'
i
) f
i
j
2
is given as follows (see [13] for details): letf = (f
1
;:::;f
n
),

l
= (
l; l
;:::;
l;l
),
Y
l
=
2
6
4
Y
l; l
(
1
;'
1
) ::: Y
l;l
(
1
;'
1
)
.
.
.
.
.
.
.
.
.
Y
l; l
(
n
;'
n
) ::: Y
l;l
(
n
;'
n
)
3
7
5:
Furthermore, deﬁne Y = [Y
0
;:::;Y
L
] and  =
(
0
;:::;
L
)
t
. Then, as explained in more detail in [13],
a choice of coefﬁcients given by  = (Y
t
Y)
 1
Y
t
f yields
a solutionh2H
L
minimizing the error term. This approach
is part of the theory of spline based regression which can be
extended by a regularization term [20]. The above procedure
hence yields a regression methodology for functions deﬁned
on spheres. As can be seen in examples in [2], the ﬁrst
L = 70 eigen-spaces are usually sufﬁcient to capture even
minute details of f. The work of [14] uses the above
approach to ﬁnd a spherical parametrization for surface
meshes. As a ﬁrst step, the mesh-vertex x;y;z coordinates
are parametrized as functions on S
2
using the methods
outlined in [15]. The resulting functions x;y;z : S
2
! R
are then approximated using an expansion in terms of Y
l;m
as above. Given a sufﬁciently densely sampled general point
cloud of a closed surface with genus zero (i.e. without
holes), one can also determine an embedding mapping the
point cloud onto a sphere. One approach for this is based
on energy minimization [16], while a recent method uses
an approximated Laplace-Beltrami operator for this purpose
[17], see [18] for an overview. Once thex;y;z coordinates of
the sampled points (x
i
;y
i
;z
i
) are mapped to corresponding

i
;'
i
values, the above regression method can be applied
and yields a smooth parametrization (x;y;z) : S
2
! R
3
of the point cloud. In neuroanatomy, [13] recently used
a spherical harmonics expansion of highly curved brain
surfaces to characterize cortical thickness. There, a subject’s
brain surface is ﬁrst mapped onto a sphere and regression is
then performed on this transformed data based on the least
squares approach outlined above.
III. THEORETICAL FRAMEWORK
We now describe how to extract a suitable object repre-
sentation from point cloud data. We formalize and study the
shape space which we will use in this paper.
A. Spaces of Shapes and Spherical Coordinates
In this work, we are interested in smooth closed embedded
surfaces in R
3
of genus zero. We make the following
deﬁnition:
Deﬁnition 3.1: Given f :S
2
!R
3
, we denote the image
by S
f
=ff(p) :p2S
2
gR
3
. And we deﬁne
M
sph
=ff2C
1
(S
2
;R
3
) :f is an smooth embedding.g
We furthermore denote byM
rad
thosef2M
sph
for which
there exists a radial function r :S
2
!R
>0
such that
f(p(;')) =r(;')(sin cos'; sin sin'; cos);
for all (;')2 [0;] [0; 2).
The setM
sph
describes parametrizations of closed embed-
ded smooth surfaces of genus zero, whileM
rad
M
sph
contains parametrizations of simpler such surfaces which
can be described by a single radial coordinate function
r :S
2
!R
>0
. The surfaces deﬁned by such radial functions
yield an interesting subsetM
rad
M
sph
which we shall
explore in this work in particular. Recall that the image S
f
391
of a smooth embedding does not have self-intersections and
yields a smooth closed surface suitable for representing a
variety of real world objects. We can mirror the observations
made about the space of surfaces with cylindrical coordinates
in [1] also in the case ofM
rad
:
Lemma 3.2: For any f
1
;f
2
2M
rad
and 
1
;
2
> 0, we
have 
1
f
1
+
2
f
2
2M
rad
. In particular,M
rad
is convex.
Proof: Let f
1
;f
2
2M
rad
with corresponding radial
functions r
1
;r
2
: S
2
! R
>0
. Then, for 
1
;
2
> 0, f =

1
f
1
+
2
f
2
has radial function
1
r
1
+
2
r
2
which is smooth
and positive. By a simple explicit computation of f and Jf
in smooth coordinate charts coveringS
2
, one can verify that
f is injective and that Jf has full rank everywhere. Hence
f is an injective immersion. Since S
2
is compact, it follows
thatf is in fact a smooth embedding. Hencef2M
rad
. The
statement about convexity follows at once.
Note that the above does not state that the shapes inM
rad
themselves have to be convex, but that the shape spaceM
rad
is. The above simple observation implies in particular that,
given any ﬁnite set of smooth functionsX =ff
1
;:::;f
n
g
M
rad
, Conv(X)M
rad
and any element of Conv(X)
yields a valid smooth embedded surface. Conv(X) hence
yields a natural ﬁnite dimensional subspace of surfaces
induced by a ﬁnite set of example surfaces. Similarly, we
can consider Cone(X) =ff :> 0;f2 Conv(X)g.
We can deform between any two surfaces f
1
;f
2
2M
rad
usingf(t;p) = (1 t)f
1
(p) +tf
2
(p),t2 [0; 1],p2S
2
and,
more generally, interpolate between any ﬁnite set of example
surfaces. For the larger setM
sph
, one can still consider such
convex combinations, but care has to be taken to verify that
the resulting surfaces are still elements ofM
sph
to make
sure no degeneracies or self-intersections occur.
Distances between Shape Parametrizations: Note that,
for f
1
;f
2
2 M
sph
, we can deﬁne a distance func-
tion d(f
1
;f
2
) = (
R
S
2
jf
1
 f
2
j
2
dVol)
1
2
, where dVol =
sindd'. If f
1
;f
2
2 M
rad
with corresponding radial
functions r
1
;r
1
, then in fact
d(f
1
;f
2
)
2
=
Z
S
2
jf
1
 f
2
j
2
dVol =
Z
S
2
jr
1
 r
2
j
2
dVol:
The above formula allows us to quantify the similarity be-
tween the corresponding parametrized surfaces S
f1
;S
f2
and
we shall use the notationd(f
1
;f
2
);d(r
1
;r
2
) interchangeably.
B. Spherical Harmonics and Point Clouds
Let us here describe our methodology for obtaining a
surface parametrizationf2M
sph
orf2M
rad
for a given
input point cloud P =fp
1
;:::;p
n
g R
3
sampled from
some genus zero surfaceSR
3
. Such point clouds arise for
example from laser range scanners or from a structured light
sensor such as the kinect sensor. As mentioned previously,
there are several methods available to assign spherical coor-
dinates for each point inP [16], [17], [18] and these methods
apply even for complicated non-convex objects. Once corre-
sponding (
i
;'
i
) coordinates are found, each of the functions
x;y;z : S
2
! R can then be recovered using the presented
methods. In the case where P was sampled from a surface
S
f
withf2M
rad
, corresponding
i
;'
i
coordinates can be
determined by computing the standard spherical coordinates
of each p2 P directly. Furthermore, instead of ﬁnding a
regression solution for thex;y;z coordinates separately, one
can then directly compute the standard radial coordinate r
i
for each p
i
2P and determine a radial function r :S
2
!R
approximating the data (r
i
;
i
;'
i
) using eigen-spaces up to
degree L > 0. Since the objects considered for grasping in
this paper can be modelled as elements ofM
rad
, we will
employ this simpliﬁed approach here and defer a full study of
more general objects to later work. The functionr :S
2
!R
is then given by
r(p) =
L
X
l=0
l
X
m= l

l;m
Y
l;m
(p);
and we denote by (r) = (
0;0
;
1; 1
;:::;
l;l
) the vector
of coefﬁcients characterizing r. Let r
1
;r
2
be two such
functions with coefﬁcients(r
1
);(r
2
). Observe that, since
hY
l;m
;Y
l
0
;m
0i = 
l;l
0
m;m
0, where  denotes the Kronecker
delta function, we can quickly compute the distance d
between the resulting surfaces using the vector norm:
d(r
1
;r
2
)
2
=
Z
S
2
jr
1
 r
2
j
2
dVol =k(r
1
) (r
2
)k
2
:
Fig. 2 displays a point cloudP and a resulting reconstructed
smooth surface parametrizationf2M
rad
which is obtained
by using all eigen-spaces of  up to degree L. As L is
increased, more and more detail about the surface is captured.
Note that – unlike common mesh representations for objects
– the reconstructed surface parametrization f is smooth and
derivatives of arbitrary order can be computed.
(a)P (b)L = 10 (c)L = 30 (d)L = 50
Fig. 2: Point cloud P with 25000 points and reconstructed
surfaces, where all eigen-spaces up to degree L are used.
C. Grasp Moduli Spaces and Spherical Coordinates
A long term goal of our work is the construction of a
shape and grasp conﬁguration space which allows us to
continuously move between shape/grasp conﬁgurations and
where we can employ a) natural optimization methods for
smooth objective functions and b) probabilistic methods
which incorporate shape and grasp uncertainties. We now
take a step in this direction by formalizing a space of grasps
onM
sph
and a natural grasp/shape distance function.
Deﬁnition 3.3: The Point-Contact Grasp Moduli Space
for m point-contacts onM
sph
is given byG
sph
=M
sph

(S
2
)
m
. The corresponding space for M
rad
is given by
G
rad
=M
rad
 (S
2
)
m
.
392
A point (f; (p
1
;:::;p
m
))2G
sph
now parametrizes both
a surface S = S
f
and a grasp g(f; (p
1
;:::;p
m
)) =
(c
1
;:::;c
m
;n
1
;:::;n
m
;z), where c
i
= f(p
i
) denotes the
i
th
contact point, n
i
the surface normal of S
f
at c
i
and z
the corresponding centre of mass of S
f
. As in [1], we can
deﬁne a metric on grasp contact conﬁgurations as follows:
consider g;g
0
2R
3m
 (S
2
)
m
R
3
,
g = (c
1
;:::;c
m
;n
1
;:::;n
m
;z)
g
0
= (c
0
1
;:::;c
0
m
;n
0
1
;:::;n
0
m
;z
0
)
and deﬁne
d(g;g
0
) = max
i
(d
R
3(c
i
;c
0
i
);d
R
3(n
i
;n
0
i
);d
R
3(z;z
0
)):
We can in turn combine this with our metric
on M
sph
to deﬁne a metric on G
sph
by
d((f; (p
1
;:::;p
m
))); (f
0
; (p
0
1
;:::;p
0
m
)) = d(f;f
0
) +
(1   )d(g;g
0
). Here, g = g(f; (p
1
;:::;p
m
)) and
g
0
= g(f
0
; (p
0
1
;:::;p
0
m
)). Using this metric, we can
quantify how far a given grasp/surface combination is
from a different such combination. The  parameter can
be chosen to weight the relative importance of these
distances. Note also that we can continuously deform
(f; (p
1
;:::;p
m
)) 2 G
sph
to (f
0
; (p
0
1
;:::;p
0
m
)) 2 G
sph
,
by a curve  = (;) : [0; 1] ! G
sph
, where e.g.
(t) = tf + (1  t)f
0
and  deforms each p
i
2 S
2
along a spherical geodesic towards p
0
i
. The same approach
can be attempted in G
sph
, but one has to take care that
S
(t)
2M
sph
for all t2 [0; 1].
IV. EXPERIMENTS
We now describe experiments which utilize the pre-
viously discussed framework in various ways in order
to generate force closed grasp hypotheses and to ex-
plore the resulting moduli space. Details about our ap-
proach and our implementation of spherical harmonics
based regression can be found on the ﬁrst author’s website
http://www.csc.kth.se/~fpokorny.
A. Object Data and Shape Space
We work with the collection of real world objects depicted
in Fig. 3. For each object, we generate a point cloud P
j
of 25000 uniformly sampled points on the object’s surface
which forms the basis of our approach. For this purpose we
used the laser scan data of [19] for all surfaces but S
2
, S
7
,
S
11
,S
12
in Fig. 4, for which we generated uniform samples
from our own mesh models.
This data is then centred at the mean of the point cloud
which we assume to be the centre of mass of the object, and
the spherical coordinates for each data-point are computed.
We utilize the spherical regression technique described in
Sec. III-B and all eigen-spaces up to degree L = 50 to
obtain a respective smooth radial function r : S
2
! R
>0
for each point cloud which then results in a surface S
f
,
f(;') = r(;')(sin cos'; sin sin'; cos). Fig. 4 dis-
plays the resulting surfaces S
1
up to S
12
. A more detailed
view of the point cloud for S
8
can also be seen in Fig. 2.
Fig. 3: A picture of the objects used in our experiments.
S
1
S
2
S
3
S
4
S
5
S
6
S
7
S
8
S
9
S
10
S
11
S
12
?100 ?50 0 50 100
?50
0
50
Fig. 4: The ﬁrst 3 rows display smooth parametrized surfaces
determined from point clouds (25000 points each) of our objects
from Fig. 3. The last row displays the MDS projection of vectors
parametrizing these objects in M
sph
(green dots), a sequence of
spheres (black dots) and example deformations (solid lines).
Each surface corresponds to a  coefﬁcient vector in
R
2601
. In the bottom part of Fig. 4, we visualize the distribu-
tion of the vectors for our 12 surfaces, indicated by green
dots. To enrich the set of available shapes, we also created
25000 uniformly distributed random points and respective
smooth reconstructions from 30 spheres with radii between
3cm and 6cm and we added examples of shape deformations
from shape S
5
to S
1
, S
2
, S
10
, S
11
, where a deformation
between S
i
and S
j
is obtained by a convex combination of
the respective vectors 
i
;
j
: (t) = (1 t)
i
+t
j
. On
the resulting set of  vectors, we then performed manifold
multidimensional scaling (MDS) to obtain Fig. 4. Note that,
393
(a)S
5
(b)S
8
(c)S
10
(d)S
5
(e)S
8
(f)S
10
Fig. 5: Random samples of points in G
rad
, where Gaussian noise
is added to
0
;:::;
9
in the top row and to
499
;:::;
599
in the
bottom row.
asS
5
is deformed, it passes the neighbourhood of the shapes
S
7
and S
8
. The deformations correspond to straight lines in
R
2601
. The sequence of spheres is furthermore also clearly
visible as a sequence of nearby points passing S
12
and S
11
.
B. Compatibility with probabilistic approaches
Note that the shape-space component of G
sph
as ap-
proximated by the ﬁrst L eigen-spaces of  is simply
corresponding to a (L + 1)
2
dimensional vector space con-
taining  coefﬁcients. It is hence clear that the full vector-
space based machinery of machine learning and statistical
analysis is available on this space. Additionally, appropriate
distributions on spheres exist, endowing the coordinate part
ofG
sph
with natural probability distributions. One can hence
consider building e.g. mixture models on our moduli space.
In future work, we intend to explore this direction. One could
for example consider modelling task constraints in grasping
probabilistically using such distributions. In order to illustrate
sampling in G
sph
, we created the deformed object/grasp
conﬁgurations in Fig. 5 by sampling three random (;')
grasp contact coordinates and by adding Gaussian i.i.d noise
to the ﬁrst 10 dimensions of  in the top row and to
dimensions 499 to 599 in the bottom row. As we can observe,
in a situation mirroring the familiar case of Fourier analysis
on the circle, modiﬁcations of the ﬁrst few  coefﬁcients
correspond to large scale object properties, while the higher
dimensions correspond to higher ‘frequencies’.
C. Initial grasp synthesis
We work with a Schunk dexterous hand (SDH, 7 DOF)
displayed in Fig. 6 for which we use a simpliﬁed collision
model displayed in the top left part of that ﬁgure. To detect
collisions with our reconstructed smooth surfaces, we used a
Fig. 6: Top row: SDH hand collision model and two pre-shapes.
Remaining rows: stable grasps from
ˆ
Gj and their execution in
reality (background whitened).
regular mesh on (;')2 [0;] [0; 2] with 10000 vertices
and mapped it onto the surface usingf(;'). These meshes
are also used in Fig.4 for visualization. We sampled SDH
hand positions oriented towards the origin and on the upper
hemisphere of varying radii in an approach similar to the one
used by GraspIT [6]. The hand was put either in a parallel
pre-shape with open ﬁngers or in a pre-shape where the
ﬁngers are equally spread out (see the two ﬁgures to the right
in the ﬁrst column of Fig. 6). We then closed the ﬁngers until
the ﬁnger-tips were less than 1mm away from the object.
Conﬁgurations where the ﬁngers did not reach the surface
vicinity, or where other hand-parts were less than 5mm away
from the object or closer than 5mm to each other were
discarded. The closest points p
1
;p
2
;p
3
on the object and
from the ﬁnger-tips were calculated and corresponding unit
normals n
1
;n
2
;n
3
of the surface S
f
were computed based
on our smooth representation by normalizing
df
d

df
d'
. From
an initial set of 1400 random hand-positions per surface, we
obtained a set of more than 200 stable grasps per object
which we ranked by grasp quality. Let us denote by G
i
the 50 best such grasps and by
^
G
i
the best 11 grasps on
394
0 0.2 0.4 0.6 0.8 1
0
0.2
0.4
0.6
0.8
1
Qstart
Q
final
S1
S2
S3
S4
S5
S6
S7
S8
S9
S10
S11
S12
Fig. 7: Initial vs. ﬁnal grasp quality with gradient ascent
surfaceS
i
. To verify that grasps in
^
G
i
corresponded to stable
grasps in reality, we performed a short evaluation where two
grasps from
^
G
i
were selected for each surface and executed
on a real Schunk (SDH) hand attached to a Kuka arm. 21 of
the resulting grasps were stable, while 1 failure occurred on
each of the objects S
1
;S
3
;S
6
– most likely due to errors
in the positioning of the hand. The supplementary video
contains more details on this evaluation and examples from
these experiments are also displayed in Fig. 6 alongside the
corresponding simulated grasps.
D. Point-contact based grasp synthesis and transfer onG
rad
The synthesis and optimization of stable point-contact
conﬁgurations are important sub-problems in grasp synthesis
since stable conﬁgurations can serve as goals for a planning
algorithm positioning the robot hand.
We now study the problem of grasp optimization given a
stable starting grasp. For this purpose, we consider a grasp
g on a surfaceS
f
with three contact points. Each such grasp
is determined byf and (;')2 [0;]
3
[0; 2]
3
R
6
. The
grasp quality Q can hence be thought of as a function of
;' which we attempt to maximize. We propose a straight-
forward gradient ascent approach as follows: we approximate
(rQ(x))
i

1

(Q(x +e
i
) Q(x)), where e
i
2R
6
denotes
the i-th basis vector, i2f1;:::; 6g, with  = 10
 5
as in
[1]. Starting from an initial grasp x
0
2 [0;]
3
 [0; 2]
3
,
we update x
n+1
= x
n
  0:01 clamp(rQ(x
n
)), where
clamp(x) = x ifkxk 6 1 and
x
kxk
otherwise. We applied
50 steps of this approach to each grasp in G
i
for each
surface S
i
. The resulting initial and ﬁnal grasp qualities
are summarized in Fig. 7 with grasps on different surfaces
indicated by differing symbols and colors. Note that grasp
quality is typically improved signiﬁcantly, but that, in some
cases, our simple ﬁxed step-length gradient ascend does not
converge. This behaviour could be partially avoided by using
Fig. 8: Initial grasp (long black, grey and red normals) and changes
during the gradient ascent (smaller lines) are displayed. The ﬁnal
contact conﬁgurations are depicted as long blue lines. The grasp
quality improved in all but the bottom right example.
an adaptive step size gradient ascent approach instead. Fig. 8
displays three successful gradient ascent results with an
improvement inQ from 0:60, 0:57 and 0:49 to 0:68 (top left),
0:65 (top right) and 0:65 (bottom left) respectively. In the
bottom right example, the gradient step-size is inappropriate
and the quality decreases from 0:68 to 0:53. Note that,
from an abstract point of view, the gradient ascent forms
a sequence of points inG
rad
, where the shape part is held
ﬁxed. Let us remark furthermore what we could use our
approach with any grasp grasp quality function for which
we can compute or approximate gradients, including quality
functions taking into account additional constraints. We now
investigate an approach where we vary the shape as well as
the grasp simultaneously.
E. Optimization-based grasp transfer inG
rad
Next, we investigate the ability of our approach to be
used to transfer stable grasps from one object to another
one. We consider, for i;j 2 f1;:::; 12g, i 6= j the
curve  : [0; 1]!M
rad
obtained by scaling the deﬁning
parametrizations f
i
;f
j
corresponding to the surface S
i
and
S
j
by(t) = (1 t)f
i
+tf
j
. The na¨ ıve approach to transfer
a grasp to a new surface is obtained by simply ﬁxing the
;' coordinates of the contact points and transplanting them
to the new surface. We study an alternative approach, as
introduced in [1] forG
cyl
, and start with a grasp g2
^
G
i
on
S
i
, apply 10 steps of our gradient ascent on S
fi
= S
(0)
,
then we move the grasp to the surface S
(0:1)
and transfer
the grasp to the slightly deformed surface by keeping the
same ;' coordinates per contact. We then apply again
10 steps of our gradient ascent and move to S
(0:2)
etc.
until we reach a grasp on S
(1)
= S
fj
which is again
optimized with 10 steps of our gradient ascent. We applied
this procedure for every one of the grasps in
^
G
i
and every
target surface S
j
6= S
i
. Note that we concentrate on the
problem of grasp transfer from a point-contact point of view
395
0 0.2 0.4 0.6 0.8 1
0
0.2
0.4
0.6
0.8
1
Qstart
Q
final
S1
S2
S3
S4
S5
S6
S7
S8
S9
S10
S11
S12
Fig. 9: We display initial vs. ﬁnal grasp quality when
transferring grasps from one surface to another.
S1 S2 S3 S4 S5 S6 S7 S8 S9 S10 S11 S12
0
50
100
% stable
Fig. 10: Percentage of stable grasps sorted by starting surface
when deforming each grasp in
^
G
i
fromS
i
toS
j
for alli6=j.
here. This approach can then be integrated at a later stage
with a motion planning approach to adapt the hand as the
point contact conﬁguration is deformed. The results of our
deformation based transfer are summarized in Fig. 9. As one
might expect, the grasp quality on the ﬁnal target surface is
not always positive since our simple optimization method can
get stuck in local maxima for this non-convex optimization
problem. However, the vast majority of the ﬁnal grasps is
indeed stable and of good grasp quality on the target surface.
The percentages of stable grasps sorted by initial starting
surfaces are presented in Fig. 10. The ﬁgure on the ﬁrst page
illustrates two deformations inG
rad
during this optimization.
The contact normals are indicated by red, grey and green
lines.
V. CONCLUSION AND OPEN PROBLEMS
In this work, we have further developed our long term
aim of formulating an object/grasp representation which
allows for a deformation based grasp synthesis in a combined
space of grasps and shapes. We have shown that commonly
available point cloud data can be used with our approach
and that it is naturally compatible with gradient based opti-
mization methods for point contact synthesis. Additionally,
our approach is compatible with probabilistic modelling
techniques since probability distributions can naturally be
deﬁned on our Grasp Moduli Space G
sph
. Fundamental
challenges however remain. It is clear that our smooth
parametrization will deteriorate with partial point cloud data.
However, since some spline based methods can be interpreted
probabilistically in terms of a Gaussian Process [20], we
are interested in studying suitable prior distributions on our
shape space to accommodate missing data while avoiding
unrealistic shape reconstructions in future. Similarly, our
method currently requires an initial matching of the object’s
rotation, e.g. using an iterative closest point method. It would
be interesting to further study rotationally invariant methods
with are compatible with our deformation based framework.
Finally, it is clear that our gradient ascent approach is not
guaranteed to converge to a global optimum since we are
dealing with a complicated objective function. We hence
intend to explore alternative, more sophisticated, approaches
to optimizing grasp quality during a deformation in future.
REFERENCES
[1] F. T. Pokorny, K. Hang, and D. Kragic, “Grasp moduli spaces,” in
Proceedings of Robotics: Science and Systems, 2013.
[2] M. K. Chung, Computational Neuroanatomy: The Methods. World
Scientiﬁc, 2013.
[3] C. Ferrari and J. Canny, “Planning optimal grasps,” IEEE ICRA, pp.
2290–2295, 1992.
[4] A. Bicchi and V . Kumar, “Robotic grasping and contact: A review,”
in IEEE ICRA, 2000, pp. 348–353 vol.1.
[5] J.-P. Saut and D. Sidobre, “Efﬁcient models for grasp planning with
a multi-ﬁngered hand.” Robotics and Autonomous Systems, vol. 60,
no. 3, pp. 347–357, 2012.
[6] A. T. Miller and P. K. Allen, “Graspit!: A versatile simulator for
robotic grasping,” IEEE Robotics and Automation Magazine, vol. 11,
pp. 110–122, 2004.
[7] C. Borst, M. Fischer, and G. Hirzinger, “Grasping the dice by dicing
the grasp,” in IEEE/RSJ IROS, 2003, pp. 3692–3697 vol.4.
[8] M. Przybylski, T. Asfour, and R. Dillmann, “Planning grasps for
robotic hands using a novel object representation based on the medial
axis transform,” in IEEE/RSJ IROS, 2011, pp. 1781–1788.
[9] K. Huebner, S. Ruthotto, and D. Kragic, “Minimum volume bounding
box decomposition for shape approximation in robot grasping,” in
IEEE ICRA, 2008, pp. 1628–1633.
[10] U. Hillenbrand and M. A. Roa, “Transferring functional grasps through
contact warping and local replanning,” in Intelligent Robots and
Systems (IROS), 2012 IEEE/RSJ International Conference on. IEEE,
2012, pp. 2963–2970.
[11] R. Detry, C. H. Ek, M. Madry, and D. Kragic, “Learning a dictionary
of prototypical grasp-predicting parts from grasping experience,” in
IEEE International Conference on Robotics and Automation, 2013.
[12] A. Bicchi and A. Marigo, “Dexterous grippers: Putting nonholonomy
to work for ﬁne manipulation,” The International Journal of Robotics
Research, vol. 21, no. 5-6, pp. 427–442, 2002.
[13] M. K. Chung, K. M. Dalton, L. Shen, A. C. Evans, and R. J.
Davidson, “Weighted fourier series representation and its application
to quantifying the amount of gray matter,” Medical Imaging, IEEE
Transactions on, vol. 26, no. 4, pp. 566–581, 2007.
[14] L. Shen and M. K. Chung, “Large-scale modeling of parametric
surfaces using spherical harmonics,” in Third Int. Symp. on 3D Data
Processing, Visualization, and Transmission. IEEE, 2006.
[15] M. S. Floater and K. Hormann, “Surface parameterization: a tutorial
and survey,” in Advances in multiresolution for geometric modelling.
Springer, 2005, pp. 157–186.
[16] M. Alexa, “Recent advances in mesh morphing,” in Computer graphics
forum, vol. 21, no. 2. Wiley Online Library, 2002, pp. 173–198.
[17] M. Zwicker and C. Gotsman, “Meshing point clouds using spherical
parameterization,” in Proc. of the First Eurographics conf. on Point-
Based Graphics. Eurographics Association, 2004.
[18] C. Gotsman, X. Gu, and A. Sheffer, “Fundamentals of spherical
parameterization for 3d meshes,” in ACM Transactions on Graphics
(TOG), vol. 22, no. 3. ACM, 2003, pp. 358–363.
[19] R. Dillmann, “Kit objectmodels web database,” 2013. [Online].
Available: http://i61p109.ira.uka.de/ObjectModelsWebUI/
[20] G. Wahba, Spline models for observational data. Siam, 1990, vol. 59.
396
