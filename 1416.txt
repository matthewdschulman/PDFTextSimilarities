Kinematics and Methods for Combined Quasi-Static
Stance/Reach Planning in Multi-Limbed Robots
Krishna Shankar, Joel W. Burdick
California Institute of Technology, Pasadena, CA 91125
{krishna, jwb}@robotics.caltech.edu
Abstract—This paper provides kinematic analysis and local
motion planning methods for multi-limbed robots. In particular,
we consider combined stance and reach tasks for robotic
mechanisms whose limbs can be used either as legs or manip-
ulator arms. An example of such a system is the RoboSimian
robot participating in the DARPA Robotics Challenge (Figure
1). We develop relationships which model the key quasi-
statics and kinematics of these mechanisms: the stance map,
the stance Jacobian, and the reach Jacobian, as well as the
stance constrained center-of-mass Jacobian. We also introduce
characterizations of multi-limbed mechanism conﬁgurations in
terms of the properties of these maps: local dexterity and
limberness. This paper also introduces local planning methods
which seek to balance the motion of legs, body, and arms of
such mechanisms so as to realize manipulation goals while also
maintaining awareness of stance stability issues. Examples with
a simple planar model illustrate the methods.
I. INTRODUCTION
Fig. 1. RoboSimian. Designed by NASA\JPL-Caltech
Figure 1 depicts the RoboSimian robot, a competitor in
the DARPA Robotics Challenge (DRC). Each of this robot’s
four limbs can be used either as a leg, or as a manipulator (a
3-ﬁngered hand is attached to the distal end of each limb).
To locomote over rough terrain, this vehicle can use standard
quasi-static gait planning and coordination techniques. How-
ever, many tasks which this robot must accomplish involve
using some limbs as legs to provide a stable stance, while one
or more other limbs simultaneously carry out a manipulation
task, such as turning a water valve, or picking up a ﬁre hose.
In practice, this robot and its peers will initially be used
in hazardous environments for activities, like disaster relief,
where there is a human operator in the loop, minimizing the
need for complete high level autonomy. However, the joint
motions required to move an end-effector as desired can be
extremely counterintuitive due to the complex workspace of
such mechanisms, their high number of mechanical degrees
of freedom, and the need to account for stance stability
throughout the task. Hence, local planning methods are
needed to assist the human operators, and these methods
would serve as a percursor to completely autonomous future
operation of such vehicles.
The local planning problem that motivates this paper is
the following:
Problem Statement. Consider a multi-limbed robot with
n ≥ 4 limbs in the presence of gravity. Let the end effectors
at the end of the limbs involved in stance be called feet, and
let the surfaces contacted by the feet be termed footholds
or holds. Assume that 3 or more feet are placed on holds
so as to form a quasi-statically stable stance. One limb is
used to carry out a manipulation task. How should all of
the limbs and joints be adjusted during the manipulation
task so as to satisfy the manipulation task constraints while
also accomodating postural stability? In particular, the robot
should move so as to
• Maintain the same contacts at the footholds,
• Maintain a suitable stance stability margin,
• Satisfy end-effector task motion and force constraints.
This paper develops the basic kinematic relationships as-
sociated with these problems, and some preliminary planning
solutions based on these relations. Our goal is to facilitate
the provision of guarantees for arbitrary legged robots.
Relation to Prior Work. Quasi-static multi-legged locomo-
tion has been well-studied, the foundation for which was
laid in [1], [2] and built upon in many works, for example
[3], [4]. The analysis of static equilibrium and quasi-static
stability for legged robots with attention to contacts (friction,
curvature etc.) has been approached from both theoretical
[5]–[8] and computational [7], [9] standpoints. The local
planning methods introduced in this paper build upon the
prior characterizations of stance equilibria, as we seek to
determine those motions which satisfy manipulation criteria
while also attempting to maintain the center of mass within
the support region.
The relationship between the center of mass motion and
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 2963
joint motion is central to the problem of free ﬂoating space
manipulators (e.g. [10]). In contrast to the space manipulator
problem, the center of mass location for the systems that we
study is not conserved, and its motion must also take into
account the reaction forces generated by the stance limbs.
Manipulation from a legged robot platform has not been
explored deeply, but some work has been done for humanoids
( [11]–[13]). Accounting for the position of the center of
mass is very important for those working with humanoids,
and Ref. [14] details the relationship between joint velocities
and center of mass motion in relation to notions of dynamic
disturbance rejection; a number of other works build on this
result. [15] provides methods for dynamic locomotion, and
describes the construction of a whole body Jacobian that is
applied as part of a hierarchical redundancy-resolution based
controller.
We take advantage of the fact that multi-limbed standing
manipulation has many similarities to dextrous manipulation
by multi-ﬁngered robotic hands. Many authors [4], [9], [16]–
[18] have previously noted these similarities. One of the
contributions of this paper is to make these analogies explicit.
The class of mechanisms studied in this paper invariably
have many degrees of freedom, and often have internal
motions that are analogous to the self motions of redundant
manipulators. Our local planning methods borrow several
concepts from the classical literature on manipulator redun-
dancy resolution [19], [20]. But the governing kinematic
equations have a slightly different linear algebraic structure,
requiring a new set of formulae to be derived.
While sampling based planners have proven effective in
many high dimensional problems [21], [22], we have found
them to be slow in this particular problem: Robosimian
has 28 joints - sampling without very special bias could
be prohibitively inefﬁcient
1
. Moreover, a straightforward
sampling planner would not take stance stability issues into
account. Thus, there is a need to develop the appropriate
physical relationships and local planning techniques for this
domain.
Structure of the Paper. Section II develops the basic kine-
matic relationships that govern combined stance and reach.
Section III induces some basic stance/reach properties which
can be assessed using these relations. Section IV derives the
stance-constrained center of mass Jacobian matrix. Section V
introduces several local kinematic motion planning problems
which build upon the results of Sections II and IV, while
Section VI illustrates the methods on a simple planar multi-
limbed mechanism.
II. MULTI-LIMBED STANCE AND REACH KINEMATICS
Figure 2 depicts an n-limbed robot with one limb used as
a manipulator, while the other limbs provide a (potentially)
quasistatically stable stance. The goal of this section is to
derive the kinematic relationships which relate end-effector
1
e.g. RRT-connect often takes a very long time or fails altogether to move
a particular end-effector towards a goal pose kinematically, even when mass
and contact are not accounted for.
A
W
E
C
i
F
j
?i,1
?i,2
?n,1
?n,2
S
j
Fig. 2. Key Reference Frames for Stance and Reach.
motions to mechanism joint motions. Section IV will derive
analogous relationships for center of mass motion. While we
focus on the case of a single manipulation limb, the methods
can be extended to multiple manipulating limbs.
Let a world (ﬁxed) reference frame be denoted by W.We
assume that a terrain model is available from which one can
derive the location, height, and contact normals associated to
each foothold. A user-selected frame attached to the robot’s
main body, or abdomen, is denoted by A (see Fig. 2). For
each limb, the shoulder reference frame, S
j
, is located at the
point where the j
th
limb attaches to the abdomen body, and
is ﬁxed with respect to A. Without loss of generality, the
stance legs are indexed j=1,...,n?1, while the reaching
limb has index n. The end effector frame at the distal end of
the n
th
limb is denoted by E. For limbs that are positioned
on holds, the foot frame, denoted F
j
, is rigidly attached to
the foot body, with origin at the point of ground contact
2
.
The i
th
contact frame, C
i
, is ﬁxed with origin at the contact
between the i
th
limb and the ground, and is oriented with
the surface of the i
th
hold. The joint angles corresponding
to the i
th
limb are

?
i
=(?
i,1
,...,?
i,mi
)
T
where m
i
is the
number of joints in the i
th
limb.
To ﬁnd the relationship between end-effector motions and
robot joint motions, let the homogeneous transformation
between end-effector frame E and ﬁxed frame W be denoted
g
WE
? se(3). Using Figure 2, g
WE
can be expanded as:
g
WE
= g
Wci
g
cifi
g
fisi
g
siA
g
AE
. (1)
The twist coordinates of the end-effector velocity, with
respect to W, as seen in the end effector frame (a.k.a. ‘body’
2
We assume point contact between the feet and ground in this paper, but
the methods be readily extended to other types of contact
2964
velocity), is
3

V
WE
= g
?1
WE
˙ g
WE
. (2)
Hereafter, every velocity is assumed to be a body velocity
unless otherwise noted by a superscript. Expanding Eq. (2)
using Eq. (1), applying the chain rule, and converting to twist
vector form yields:
V
E
WE
= Ad
g
Ec
i
V
Wci
+ Ad
g
Ef
i
V
cifi
+Ad
g
Es
i
V
fisi
+ Ad
g
EA
V
siA
+V
AE
. (3)
Velocities V
Wci
and V
siA
are zero since they describe motion
between frames that are relatively ﬁxed. Letting J
n
(

?
n
)
denote the Spatial Jacobian matrix
4
of the n
th
limb (being
used as a manipulator) V
AE
can be expressed as
V
AE
= Ad
?1
g
AE
J
n
(

?
n
)
˙

?
n
Similarly, letting J
i
(

?
i
) denote the Jacobian matrix of the
i
th
leg,
V
fisi
= ?V
si
sifi
= ?J
i
(

?
i
)
˙

i
?,
The velocity of the foot frame with respect to the contact
frame can be expanded as
V
cifi
= V
fi
ciA
+V
fi
Asi
+V
sifi
= Ad
g
f
i
A
V
ciA
+ Ad
g
f
i
s
i
J
i
(

?
i
)
˙

i
? (4)
where V
fi
Asi
=0 for all i since the shoulder frame is rigidly
attached to the abdomen. Substituting these results into Eq.
(3) yields
V
WE
= Ad
?1
g
f
i
E
(Ad
g
f
i
s
i
J
i
(

?
i
)
˙

?
i
+ Ad
g
f
i
A
V
ciA
)
?Ad
g
Es
i
J
i
(

?
i
)
˙

?
i
+ Ad
?1
g
AE
J
n
(

?
n
)
˙

?
n
(5)
Combining coordinate transformations and noting that the
ﬁrst and third terms in (5) cancel, one obtains:
V
WE
= Ad
g
EA
V
ciA
+ Ad
?1
g
AE
J(

?
n
)
˙

?
n
. (6)
At each foothold, we assume a contact constraint, which
implies that the foot cannot move in directions along which
forces can be applied and supported by the contact:
B
T
ci
V
fici
=0 (7)
where B
ci
is the wrench basis at the i
th
foot
5
.
Expanding the transform g
cifi
in terms of a different chain
of reference frames, one ﬁnds that
g
cifi
= g
fisi
g
siA
g
AW
g
Wci
.

V
fici
= g
?1
cifi
˙ g
cifi
.
3
This paper uses the notation and methodology of Chapter 2 in [23]. In
general, V
c
ab
is a twist that speciﬁes the velocity of frame a with respect to
frame b observed in frame c.
4
The Spatial Jacobian is deﬁned and discussed in [23]
5
The columns of the wrench basis matrix form a basis for all wrenches
that can be applied at a contact, as expressed in the contact frame [23]. A
wrench basis can model frictionless, point contact with Coulomb friction,
soft contact, and many other types of ground contact models
Expanding out the right-hand side of the velocity, convert-
ing to twist vector form, and dropping velocities between
relatively ﬁxed frames results in:
V
fici
= Ad
?1
gs
i
c
i
V
fisi
+ Ad
?1
g
Ac
i
V
siA
+ Ad
?1
g
Wc
i
V
AW
+V
Wci
= ?Ad
?1
gs
i
c
i
J(

?
i
)
˙

?
i
+ Ad
?1
g
Wc
i
V
AW
. (8)
Substituting Eq.s (4) and (8) into equation (7) and equating
results yields:
B
T
ci
Ad
?1
gs
i
c
i
J
i
(

?
i
)
˙

?
i
= B
T
ci
Ad
?1
g
Wc
i
V
AW
= ?B
T
ci
Ad
?1
g
Wc
i
Ad
g
WA
V
WA
= ?B
T
ci
Ad
?1
g
Ac
i
V
WA
.
Next, deﬁne the Stance Jacobian matrix (which is analogous
to the hand Jacobian in multi-ﬁngered grasping) as
J
S
(x
0
,

?)=
? ? ? B
T
c
1
Ad
?1
gs
1
c
1
J
1
(

?
1
)0
.
.
.
0 B
T
c
n?1
Ad
?1
gs
n?1
c
n?1
J
n?1
(

?
n?1
)
? ? ? .
where

? =(

?
1
,...,

?
n?1
), and x
0
describes the location
of the abdomen frame relative to the world frame (which
implicitly deﬁnes the contact points and normals via the
terrain model). Now equation (7) becomes
J
S
(x
0
,

?)
˙

? = ?
	
B
T
c1
Ad
?1
g
Ac
1
··· B
T
cn?1
Ad
?1
g
Ac
n?1


V
WA
.
We deﬁne the stance map as
S = ?
	
Ad
T
g
?1
Ac
1
B
c1
··· Ad
T
g
?1
Ac
n?1
B
cn?1


.
The stance map transforms contact forces to wrenches on the
abdomen –it is analogous to the grasp map in multi-ﬁngered
robotic manipulation. Using these deﬁnitions yields a more
descriptive version of equation (7):
J
S
(x
0
,

?)
˙

? = S
T
V
WA
. (9)
Eq. (9) describes the relationship between the motions of leg
joints and the motion of the abdomen frame, assuming that
the footholds are maintained.
We return to the consideration of the end-effector’s veloc-
ity. Applying the the fact that contacts and the world frame
are ﬁxed relative to each other to Eq. (6) and rearranging
yields the following important relationship:
Ad
g
AE
V
WE
= V
ciA
+J
n
(

?
n
)
˙

?
n
. (10)
Now, deﬁne the stance-constrained Reach Jacobian, or sim-
ply Reach Jacobian as follows:
J
R
(?,x
0
)=
	
J
S
(x
0
,

?) S
T
J
n
(

?
n
)


(11)
where?=(

?
1
,...,

?
n
) is the vector of all mechanism joint
velocities. Using (9) and (10), results in the following new
relationship:
J
R
(?,x
0
)
˙
?= S
T
V
A
WE
(12)
2965
We call (12) the stance constrained Reach Constraint,or
Reach Constraint, as it describes all of the ways that the robot
can reach for a certain goal by coordinating the motions of
its legs and its manipulator limb (assuming that the footholds
are maintained).
III. PROPERTIES OF A STANCE
This section provides some local,or instantaneous no-
tions of the properties of the combined stance/reach system
analyzed in the last section. Most of these properties are
analogous to those of multi-ﬁngered robotic grasps, with
modest extensions required to handle the presence of the
reaching limb.
Deﬁnition 1: A limbed robot stance is limber at a conﬁg-
uration (

?,x
0
) when for any motion of the abdomen V
A
WA
,
there exists
˙

? satisfying equation (9).
Deﬁnition 2: A limbed robot stance is locally dexterous
with respect to a free limb at a conﬁguration (?,x
0
) when
for any motion of the end effector, V
A
WE
, there exists
˙
?
satisfying (12).
A robot is limber if it can locally move its abdomen in all di-
rections via leg joint motions while maintaining its footholds,
and it is locally dextrous if the reaching end-effector can
instantaneously move in any direction by allowed mechanism
joint motions. The following propositions result directly from
Deﬁnitions 1 and 2, as well as Eq.s (9) and (12).
Proposition 1: Suppose that S is onto. A stance is limber
at a conﬁguration (?,x
0
) if and only if
Range(S
T
) ? Range(J
S
(

?,x
0
)).
Proposition 2: Suppose that S is onto. A stance is locally
dexterous with respect to a limb at a conﬁguration (?,x
0
)
if and only if
Range(S
T
) ? Range(J
R
(?,x
0
)). (13)
Furthermore, for a given conﬁguration, a robot is locally
dexterous if any of the following hold
i) it is limber.
ii) J
n
(?
n
) is onto the pre-image of Range(S
T
) (or equiv-
alently, onto the complement of Null(S
T
)).
This fact is a consequence of Eq. (12). The most interesting
situations occur when
• The robot is locally dexterous, but not limber, and the
free limb’s Jacobian matrix is not onto the compliment
of Null(S
T
). At these conﬁgurations, both the body
and the reaching arm must work in concert to realize
arbitarary end-effector motions.
• The robot is limber and the free limb Jacobian matrix is
onto the pre-image of the Range(S
T
). In this case, there
are many ways of producing the desired end effector
velocity. The solution might depend on other goals, and
this possibility is explored in Section V
Other properties which are standard in multi-ﬁngered grasp-
ing also extend to this situation. LetFC
ci
denote the friction
cone associated with each contact c
i
, and let FC denote
the totality of friction cone constraints: FC = FC
c1
?
... ? FC
cn?1
. Assuming that the robot is standing on an
immovable object or solid ground, The net wrench on the
abdomen body applied at the contacts is:
F
W
= S

f

f ?FC
where

f =(f
1
,...,f
n?1
)
T
are the contact forces at the
footholds.
Deﬁnition 3: A stance is wrench-resistant if it can coun-
teract any external wrench F
e
, i.e. there exists f ?FC such
that
Sf = ?F
e
Proposition 3: A stance is wrench-resistant if and only if
S restricted to FC is full rank, i.e.
S(FC)=R
6
IV. THE CENTER OF MASS STANCE JACOBIAN
It is well known that quasi-static stability of a given stance
depends upon the location of the mechanism’s center of
mass relative to the support region generated by the stance’s
footholds [1], [5]–[7], [9]. Hence, it is crucial to ﬁnd a
relationship between mechanism joint motions and center-
of-mass motion. This relationship can then be used during
the task planning process to maintain or enhance a suitable
stability margin whilte realizing manipulation goals.
The center of mass of a system of N rigid bodies, C ?R
3
,
is given by C=(1/M)

N
i=1
?
i
m
i
where m
i
and ?
i
are the
mass and position of the i
th
object respectively, and M is the
total system mass: M =

N
i=1
m
i
. Letting gWi denote the
location of each bodies’s center of mass frame, the system’s
center of mass position in homogenous coordinates is
¯
C = g
WC
? ? ? ? 0
0
0
1
? ? ? ? .
where g
WC
is the displacement of a reference frame located
at the system’s center of mass. Hereafter, the center of mass
will be described in terms of g
WC
, with the understanding
that only the translational component of g
WC
is relevant to
the analysis.
Let m
A
be the mass of the abdomen, located at the origin
of the frame A. The mass of the j
th
link on the i
th
limb
is denoted m
i,j
, and g
W(i,j)
maps positions in homogenous
coordinates from the (i,j)
th
link frame (whose origin is
located at the link’s center of mass) to W.
g
Wc
=
m
A
M
g
WA
+
1
M
N

i=1
ni

j=1
m
i,j
g
W(i,j)
where M is the total robot mass. Using this notation, the
velocity of the center of mass frame can be expressed as:
V
C
WC
=
m
A
M
Ad
g
cA
V
A
WA
+
1
M
N

i=1
ni

j=1
m
i,j
Ad
g
c(i,j)
V
(i,j)
W(i,j)
(14)
2966
where C denotes ‘center-of-mass’. Deﬁne the link Jacobian
as the matrix which maps the velocities of the ﬁrst j joints
in the i
th
limb to the velocity of the j
th
link in the A frame.
J
i,j
(?
i,1
,...,?
i,j
)
With this notation,
V
W
W(i,j)
= V
W
WA
+ Ad
g
WA
V
A
A(i,j)
= V
W
WA
+ Ad
g
Ws
i
J
i,j
(?
i,1
,...,?
i,j
)
˙
?
i?j
.
where
?
i?j
=(?
i,1
,...,?
i,j
)
is shorthand notation to denote the fragment of the i
th
limb’s
joint velocity vector containing the ﬁrst j joint velocites.
Introducing the link Jacobian into (14), transforming (14) to
the A frame, and then multiplying both sides by the tranpose
of the stance map (so that the stance Jacobian can be used),
one obtains:
S
T
V
A
Wc
= J
S
(?)
˙
?+
1
M
N

i=1
ni

j=1
m
i,j
S
T
Ad
g
As
i
J
i,j
(?
i?j
)
˙
?
i?j
(15)
Recall [23] that for a serial chain manipulator, the spatial
Jacobian matrix takes the form:
J
s
st
=

?
1
... ?

n

where
?

i
= Ad
(e

?
1
?
1...e

?
i?1
?
i?1
)
?
i
.
Deﬁne a mass weighted Jacobian matrix as follows
¯
J
k
=

(
n
k
j=1
m
k,j
M
)?
1,k
... (
n
k
j=i
m
k,j
M
)?

i,k
... (
m
k,n
k
M
)?

k,n
k
,

Equation (15) becomes
S
T
V
A
Wc
= J
S
(?)
˙
? +S
T
n

i=1
Ad
g
As
i
¯
J
i
(?
i
)
˙
?
i
which can be written in the following compact form
S
T
V
A
Wc
= J
C
(?)
˙
?
by introducing the Stance-Constrained Center of Mass
Jacobian, Equation (16), where
˜
J
k
=
	
(

n
k
j=1
m
l,j
+M
M
)?
k,1
... (
m
k,n
k
+M
M
)?

k,n
k


.
V. LOCAL MOTION PLANNING
This section uses the relationships developed in the pre-
vious section to develop local planning methods for stance-
constrained manipulation. Intuitively speaking, the goal of
these local planning methods is to move the end-effector
so as to satisfy task goals and/or constraints, while also
simultaneously moving the center of mass so as to enhance,
maintain, or gracefully degrade stance stability. There are
many different conceivable types of problems and analtyical
approaches that one may take to realize these intuitively
obvious goals. The remainder of this section introduces,
roughly in order of increasing complexity, a few basic local
task planning problems and their relation solutions. These
solutions would be useful components of a local planning
toolkit for stance-constrained manipulation.
A. Problem #1: The Minimum Norm Solution
This ﬁrst solution, which ignores issues of stance equi-
librium or stability, primarily establishes results which will
be useful below. Given a stance for the ﬁrst (n?1) joints,
and a desired end-effector velocity, V
WE
, for the n
th
ma-
nipulating limb, the goal is to ﬁnd the minimum norm joint
velocities that exactly move the end-effector at this desired
velocity. This problem is exactly analogous to the classical
minimum norm redundancy resolution solution, except that
the different kinematic constraint between the end-effector
and the robot’s joints yield a solution with slightly different
algebraic form. Formally, we seek the solution to the problem
minimize
1
2
˙
?
T
˙
?
subject to S
T
˜
V
A
WE
= J
R
(x
0
,?)
˙
?
(17)
The solution is
˙
?
?
= J
+
R
S
T
˜
V
A
WE
where J
+
R
is the Moore-Penrose pseudo-invserse, and the
arguments of J
R
are dropped for clarity. This solution can
be readily found via lagrange multipliers. Let
L=(1/2)
˙
?
T
˙
?+?
T
(S
T
˜
V
A
WE
?J
R
(x
0
,?)
˙
?).
A necessary condition for a minimizer
˙
?
?
is that ∂L/∂
˙
?
?
=
0, which implies that
˙
?
?
?J
R
(x
0
,?)
T
?=0.
Using this equation,
˙
?
?
is expressed in terms of ? and
substituted into L to obtain the lagrange dual function g(?).
The optimal dual variable ?
?
can be found by solving
∂g
∂?
(??)=0. Thereafter,
˙
?
?
is known . Note that one can
solve the analogous problem where the center of mass must
moved in a desired direction using the minimum norm solu-
tion, without regard to the end-effector motion, by changing
indices. The general solution to the kinematic relationship
S
T
˜
V
A
WE
= J
R
(x
0
,?)
˙
? is comprised of the minimum norm
solution and any vector in the null space of J
R
(x
0
,?):
˙
?
?
= J
+
R
S
T
˜
V
A
WE
+(I ?J
+
R
J
R
)z
with z an arbitrary vector having the same dimension as
˙
?.
B. Problem #2: The Task Priority Solution
This problem is motivated by the classical Task Priority
solution for redundant robot manipulators [19]. The goal is to
require the manipulator limb’s end-effector to track a desired
velocity, and as a second priority, have the center of mass
move as closely as possible in a desired direction–one that
presumably maintains or enhances stance stability.
ﬁnd
˙
?
subject to Priority 1 : S
T
˜
V
A
WE
= J
R
(x
0
,?)
˙
?
Priority 2 : S
T
˜
V
A
C
= J
C
(x
0
,?)
˙
?
(18)
2967
J
C
(?)=
? ? ? ? ? ? B
T
c1
Ad
gc
1
s
1
˜
J
1
(?
1
) B
T
c1
Ad
gc
1
s
2
¯
J
2
(?
2
) ... B
T
c1
Ad
gc
1
s
n?1
¯
J
n?1
(?
n?1
) ... B
T
c1
Ad
gc
1
sn
¯
J
n
(?
n
)
B
T
c2
Ad
gc
2
s
1
¯
J
1
(?
1
) B
T
c2
Ad
gc
2
s
2
˜
J
2
(?
2
)
.
.
.
.
.
.
.
.
.
... B
T
c
M
Ad
gc
n?1
s
n?1
˜
J
n?1
(?
n?1
) ... B
T
cn?1
Ad
gc
n?1
sn
¯
J
n
(?
n
)
? ? ? ? ? ? (16)
Adapting the classical redundancy resolution solution to the
slightly more complicated constraint formulae, one obtains:
˙
?
?
= J
+
R
S
T
˜
V
A
WE
+[J
C
(I?J
+
R
J
R
)]
+
(S
T
˜
V
A
C
?J
C
J
+
R
S
T
˜
V
A
WE
)
(19)
It follows that for the problem to be feasible, i.e., that the
center of mass velocity can be exactly tracked, the stance
map must be full rank (the robot is wrench-resistant), and
there must exists some x ?R
m?n
such at
˜
V
A
WE
=(S
T
)
+
J
C

J
+
R
S
T
˜
V
A
WE
+(I ?J
+
R
J
R
)x

Of course, the priorities can be reversed, and the same
solution used by changing indices.
This solution could be useful in the following way. Let the
desired center of mass velocity,
˜
V
A
C
, be speciﬁed as a unit
vector pointing away from the nearest face of the support
polygon (into the interior of the polygon). Then, solution (19)
will track the desired end-effector velocity, if at all possible,
while attempting to maintain, or even enhance, the stance’s
margin.
C. Problem #3: The Balanced Priority Solution
In many situations, it may be difﬁcult to track the desired
manipulation trajectory, while also maintaining stability, and
minimizing joint motions. Hence, in practice it makes sense
to deﬁned a weighted optimization goal that blends the
priorities of tracking, stance, and joint motions:
minimize ?V
A
WE
?
˜
V
A
WE

2
2
+?Vcm ?
˜
Vcm
2
2
+?
˙
?
2
2
subject to JR(?,x0)
˙
?= S
T
V
A
WE
JC(?,x0)
˙
?= S
T
V
A
WC
.
(20)
This solution to this problem can be tuned to vary the
importance of different goals during task execution, or to
approximate a particular problem from the previous section.
Deﬁne
x =
? ? V
A
WE
V
A
C
˙
?
? ? b =
? ? ˜
V
A
WE
˜
V
cm
0
? ? P =
? ? ?I
n
00
0 ?I
n
0
00 ?I
m
? ? F =

S
T
0 ?J
R
(x
0
,?)
0 S
T
?J
C
(x
0
,?)

In these variables, Equation (20) is equivalent to
minimize x
T
Px?x
T
b
subject to Fx=0
(21)
This is an equality constrained quadratic program (ECQP),
and it is easy to show that it has a unique solution whenever
?, ?, ? ≥ 0 and F has full row rank. Geometrically, the
solution is a projection of the vector b onto the null-space
of F. The nature of the projection is deﬁned by the matrix
P above; when the weights are nonzero but equal, then the
projection is orthogonal. When the weights are non-zero but
not equal, the projection is oblique — it is stretched along
components of x and b with large weights, and shrunk along
the components with small weights. The problem sometimes
has solutions when weights are set to zero, in these cases
the solution though correct is useless as the corresponding
variable is shrunk to zero.
The solution to this problem can be computed explicitly
by enforcing the KKT optimality conditions. Strong duality
holds in this case whenever the problem is feasible, and the
optimal x
?
can be obtained by solving the dual problem. Let

G11 G12
G
T
12
G22

=

1
?
S
T
S+
1
?
J
R
(x0,?)J
R
(x0,?)
T 1
?
J
R
(x0,?)J
C
(x0,?)
T
1
?
J
C
(x0,?)J
R
(x0,?)
T 1
?
S
T
S+
1
?
J
C
(x0,?)J
C
(x0,?)
T

Deﬁne H to be the Schur complement of G
11
in the ‘G’
matrix above,
H = G
11
?G
12
G
?1
22
G
T
12
Deﬁne
?
?
2
= H
?1
(
1
?
S
T
˜
V
A
C
?
1
?
G
T
12
G
?1
11
S
T
˜
V
A
WE
)
?
?
1
= G
?1
11
(
1
?
S
T
˜
V
A
WE
?
1
?
G
12
S
T
˜
V
A
C
)
(these correspond to optimal Lagrange multipliers). Then,
since x = P
?1
(b+F
T
?
?
) it follows that
? ? V
A
WE
V
cm
˙
?
? ? =
? ? 1
?
˜
V
A
WE
+S?
?
1
1
?
˜
V
A
C
+S?
?
2
?J
R
(x
0
,?)?
?
1
?J
C
(x
0
,?)?
?
2
? ? Proposition 4: (Sufﬁcient condition for unique optimizer)
If Null(J
R
(?,x
0
)) ? Null(J
C
(?,x
0
)) = {

0}, then F has
full row rank.
This follows from the fact that Null(J
R
(?,x
0
)) =
Range(J
R
(?,x
0
)
T
)
?
, and likewise for J
C
(?,x
0
). This fact
provides the following guarantee: provided there is no local
motion that keeps the end effector and the center of mass
stationary, (21) has a unique solution. It is very unlikely
that such motion exists.
2968
D. Possible Extensions
Using the relationships derived in this paper, and starting
from the formulations in the ﬁrst part of this section, one
can extend these approaches to incorporate many other issues
into the local motion planning problem. For example, it is
known that quasi-statical equilibrium postures of a multi-
legged robot lie inside a vertical prism, whose boundary can
be approximated to arbitrary precision as a polytope. Thus,
one could formulate this constraint in the form:
AV
A
C
c. (22)
This constraint, coupled with Equation (21), yields a convex
quadratic problem which is practically solvable. Note that
the presence of obstacles can also be formulated in the style
of Equation (22), with the end-effector velocity substituted
for the center of mass velocity, allowing for the end-effector
to simultaneously avoid obstacle while carrying out its ma-
nipulator task.
VI. EXAMPLES
We consider a planar 3-limbed robot, somewhat analgous
to Robosimian, shown in ﬁgure 3. This simple robot can
walk quasi-staically, maintaining a support region with non-
zero width. We assume the robot stands on point contacts
with friction. The limb links all have mass equal to one
tenth that of the abdomen. We consider two different mo-
tions, one largely translating the end-effector left/right, and
one translating the end-effector verticaly. The end-effector
and mass center motions produced by the minimum norm
solution and the balanced priority solution (the equality
constrained quadratic programming approach), with priority
weights ?=20, ? =50, ? = 200 are compared. These
examples are kinematically simulated.
6
The simulations use a simple controller: the robot repeat-
edly adjusts its joint angles by‘C??

, where?? is suggested
by the particular optimization based on the direction to the
goal, and C is a scaling coefﬁcient that reduces monoton-
ically as the end effector reaches the goal. In reality, we
imagine that a trajectory curve from the start to ﬁnish would
be speciﬁed for the end effector (and perhaps the center of
mass if the ECQP method is being used) the end-effector
(resp. center of mass) would servo about this trajectory by
matching the tangent at every step.
The results are shown in ﬁgure 4. In each case, the robot’s
initial conﬁguration is shown in black, intermediate positions
are green, and the ﬁnal position is blue. The end-effector
trajectory is shown in red, and the center of mass motion is
given by a solid streak of black circles. It is evident that the
QP method results in smooth motion of both end-effector and
center-of-mass. The minimum norm solution moves towards
the goal more aggressively, jerking the center of mass and
end-effector. The QP method results in a much smaller net
deviation of the center of mass than the minimum norm
approach.
6
Whereas in reality the robot would maintain contact due to physics,
here we ensure that applied joint-angle changes lie in the null-space of the
Jacobian of the structure equation (see [23]).
A
Fig. 3. A Planar 3-legged Example.
VII. CONCLUSION AND FUTURE WORK
This paper provided a framework for planning with multi-
limbed robots during tasks that combine quasistatic balance
and reach. The kinematics that govern the relationship be-
tween joint velocities and the velocity of a given point on the
robot are provided. The motion of the center of mass is also
explained, through the derivation of the stance-constrained
center of mass Jacobian. The derived results are very general,
and can be applied to any robot on almost any terrain.
We also developed local motion planning methods that are
analogous to classical redundancy resolution methods, but
adapted for the more complex kinematic relationships which
describe the motions of these mechanisms. Ongoing work
aims to implement this framework on the RoboSimian robot.
Issues related to forces, including the formal statement of
static equilibrium follow very naturally from this work, as
wrenches and twists are dual. These issues will be explored
deeply in forthcoming work.
REFERENCES
[1] R. B. McGhee and A. A. Frank, “On the stability properties of
quadruped creeping gaits,” Mathematical Biosciences, vol. 3, pp. 331–
351, 1968.
[2] A. A. Frank, “Automatic control systems for legged locomotion
machines,” 1968.
[3] R. B. McGhee and G. I. Iswandhi, “Adaptive locomotion of a multi-
legged robot over rough terrain,” Systems, Man and Cybernetics, IEEE
Transactions on, vol. 9, no. 4, pp. 176–182, 1979.
[4] K. Waldron, “Force and motion management in legged locomotion,”
Robotics and Automation, IEEE Journal of, vol. 2, no. 4, pp. 214–220,
1986.
[5] Y. Or and E. Rimon, “Robust multiple-contact postures in a two-
dimensional gravitational ﬁeld,” in Robotics and Automation, 2004.
Proceedings. ICRA’04. 2004 IEEE International Conference on, vol. 5.
IEEE, 2004, pp. 4783–4788.
[6] E. Rimon, R. Mason, J. W. Burdick, and Y. Or, “A general stance
stability test based on stratiﬁed morse theory with application to quasi-
static locomotion planning,” Robotics, IEEE Transactions on, vol. 24,
no. 3, pp. 626–641, 2008.
[7] Y. Or and E. Rimon, “Computation of multiple-contact frictional
equilibrium postures in three-dimensional gravitational environments,”
Department of Mechanical Engineering, 2006.
[8] R. Mason, E. Rimon, and J. Burdick, “Stable poses of 3-dimensional
objects,” in Robotics and Automation, 1997. Proceedings., 1997 IEEE
International Conference on, vol. 1. IEEE, 1997, pp. 391–398.
[9] T. Bretl and S. Lall, “Testing static equilibrium for legged robots,”
Robotics, IEEE Transactions on, vol. 24, no. 4, pp. 794–807, 2008.
[10] E. Papadopoulos and S. Dubowsky, “Dynamic singularities in free-
ﬂoating space manipulators,” in Space Robotics: Dynamics and Con-
trol. Springer, 1993, pp. 77–100.
2969
(a) ECQP, Goal at (1,6). COM deviates from initial position
by 0.71 units.
(b) Minimum Norm, Goal at (1,6). COM deviates from initial
position by 1.1 units.
(c) ECQP, Goal at (?5,4). COM deviates from initial position
by 0.88 units.
(d) Minimum Norm, Goal at (?5,4). COM deviates from
initial position by 1.82 units.
Fig. 4. Planning for a Planar Robot. A comparison of Minimum Norm solution and the Quadratic Program. The right foot of the robot is located at
(0,0), and the end-effector’s initial position is at (7,?4).
[11] K. Harada, S. Kajita, F. Kanehiro, K. Fujiwara, K. Kaneko, K. Yokoi,
and H. Hirukawa, “Real-time planning of humanoid robot’s gait for
force-controlled manipulation,” Mechatronics, IEEE/ASME Transac-
tions on, vol. 12, no. 1, pp. 53–62, 2007.
[12] K. Harada, S. Kajita, K. Kaneko, and H. Hirukawa, “Dynamics and
balance of a humanoid robot during manipulation tasks,” Robotics,
IEEE Transactions on, vol. 22, no. 3, pp. 568–575, 2006.
[13] J. Kuffner, K. Nishiwaki, S. Kagami, M. Inaba, and H. Inoue, “Motion
planning for humanoid robots,” in Robotics Research. Springer, 2005,
pp. 365–374.
[14] T. Sugihara and Y. Nakamura, “Whole-body cooperative balancing of
humanoid robot using cog jacobian,” in Intelligent Robots and Systems,
2002. IEEE/RSJ International Conference on, vol. 3. IEEE, 2002,
pp. 2575–2580.
[15] A. Shkolnik and R. Tedrake, “Inverse kinematics for a point-foot
quadruped robot with dynamic redundancy resolution,” in Robotics
and Automation, 2007 IEEE International Conference on. IEEE,
2007, pp. 4331–4336.
[16] V. Kumar and K. Waldron, “Sub-optimal algorithms for force dis-
tribution in multiﬁngered grippers,” in Robotics and Automation.
Proceedings. 1987 IEEE International Conference on, vol. 4. IEEE,
1987, pp. 252–257.
[17] K. Hauser, T. Bretl, J.-C. Latombe, and B. Wilcox, “Motion planning
for a six-legged lunar robot,” in Algorithmic Foundation of Robotics
VII. Springer, 2008, pp. 301–316.
[18] A. M. Johnson, G. C. Haynes, and D. E. Koditschek, “Standing self-
manipulation for a legged robot,” in Intelligent Robots and Systems
(IROS), 2012 IEEE/RSJ International Conference on. IEEE, 2012,
pp. 272–279.
[19] Y. Nakamura, H. Hanafusa, and T. Yoshikawa, “Task-priority based
redundancy control of robot manipulators,” Int. J. Robotics Research,
vol. 6, no. 2, pp. 2–15, 1987.
[20] B. Siciliano, “Kinematic control of redundant robot manipulators: A
tutorial,” J. Intelligent and Robotic Systems, vol. 3, pp. 201–212, 1990.
[21] S. M. LaValle, Planning algorithms. Cambridge university press,
2006.
[22] J. J. Kuffner Jr and S. M. LaValle, “Rrt-connect: An efﬁcient approach
to single-query path planning,” in Robotics and Automation, 2000.
Proceedings. ICRA’00. IEEE International Conference on, vol. 2.
IEEE, 2000, pp. 995–1001.
[23] R. M. Murray and S. S. Sastry, A mathematical introduction to robotic
manipulation. CRC press, 1994.
[24] S. P. Boyd and L. Vandenberghe, Convex optimization. Cambridge
university press, 2004.
2970
