Multi-robot Cooperative Control for Monitoring and Tracking Dynamic
Plumes
Shuai Li, Yi Guo and Brian Bingham
Abstract—We study robotic tracking of dynamic plume
front modeled by the advection-diffusion equation in this
paper. Different from existing work purely relying on gra-
dient measurement, the transport model of pollution source
is explicitly considered in tracking control design. We ﬁrst
study the problem using a single robot and solve the problem
in an estimation and control framework. We then extend it
to the multi-robot case in a nearest-neighbor communication
structure, and have the robots take formation along the plume
front. The distributed control is scalable to a large number
of robots. Simulation results show satisfactory performances of
the proposed method.
I. INTRODUCTION
The recent deep water horizon oil spill has posed great
challenges to both robotics and ocean engineering communi-
ties. It took months to estimate the extent of the underwater
plume, and the accuracy of these estimates will likely be
debated for years to come. The challenges motivate us to
consider utilizing advanced robotic techniques to monitor
and track the propagation of oil plumes. In this paper, we
propose a model-based method to track the dynamic plume
front using multi-robot platforms.
Existing approaches related to plume tracking can be cate-
gorizedintothreeclasses: mappingbasedapproach, behavior
based approach, and control based approach. In the mapping
based approach, a concentration map of the environment
is ﬁrst built, and then plume tracking is conducted based
on the obtained map. Representative work includes [1],
where a grid map was created to represent the concentration
distribution based on data collected by a single robot. In [2]
a hidden Markov method (HMM) was employed to map the
environment.Similarstrategieswereappliedin[3]tolocalize
a chemical plume source. In [4] the likelihood grid mapping
method was extended to map an environment with multiple
chemical sources. As it is necessary to scan the environment
for mapping, it introduces extra overhead of robot scanning
trajectory design, which often makes the map based method
time costly. On the contrary, the behavior based approach
combines certain elementary behaviors to track an emergent
plume. Li et al. in [5] developed bio-inspired chemical
plume tracing on an autonomous underwater vehicle us-
ing elementary behaviors such as ﬁnding plume, tracking-
in and tracking-out plume in a subsumption architecture.
Social potential ﬁelds were used in [6] to coordinate group
S. Li and Y. Guo are with Department of Electrical & Computer
Engineering, Stevens Institute of Technology, Hoboken, NJ 07030, USA.
lshuai@stevens.edu, yguo1@stevens.edu
B. Bingham is with Department of Mechanical Engineering, University
of Hawaii at Manoa, Honolulu, HI 96822, USA. bsb@hawaii.edu
behaviors, where experiments demonstrated a robotic swarm
was driven to ﬁnd a spill and reach a perimeter formation.
In [7], the Braitenberg model was employed to map the
sensor reading of concentration to robot motor reaction in
environments with odor plumes, and the effectiveness was
validated by experimental results. Generally speaking, the
behavior based approach is often intuitive, and it usually
takes extensive simulations or experiments to validate the
method ( [5]–[7]). Due to the lack of rigorousness such as
convergency analysis, performances are difﬁcult to guarantee
thus a working example may be difﬁcult to extend to other
scenarios with different parameters.
The control based approach explicitly designs robot con-
trol laws with provable convergence. In [8], the plume
tracking problem was modeled by a ﬁnite automaton and the
hybrid control theory was employed in theoretical analysis.
In [9], the robotic manifold tracking of coherent structures in
ﬂows was investigated. In [10], the authors used stochastic
methods to model plume spikes and developed bio-inspired
control laws for multi-robot plume tracking in turbulent
ﬂows. In [11], a level curve tracking problem was solved
in two-dimensional space using multi-sensor platforms. A
Kalman ﬁlter was developed to incorporate historical sensor
readingintocontrollawsthatguidetherobotmovement.This
approach was later extended to solve the same problem with
control uncertainties in [12] and in three-dimensional space
in [13]. However, due to the lack of a ﬁxed concentration
reference for the level curve tracking, this type of method is
subject to concentration drifting in the presence of noises in
sensor readings.
In this paper, we study dynamic plume tracking control
using multiple robots. The approach falls in the category of
control based method, and the plume tracking problem is
solved in an estimation and control framework. We ﬁrst dis-
cussthesinglerobotcase,wheretheplumefrontdynamicsis
derived using the advection-diffusion equation governing the
plume propagation. Then an observer is designed to estimate
the dynamic movement of the plume front, and a feedback
control law is constructed to track the plume front. We then
extend the single robot case to a multi-robot scenario, where
an additional behavior of formation along the plume front is
added with robots’ control laws explicitly given for a multi-
robot team in a nearest-neighbor communication topology.
The algorithms designed in both the single and multiple
robot cases are tested in simulation, which show satisfactory
performances.
The contribution of this paper are twofold. First, the
proposed method utilizes the propagation model (i.e., the
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 67
advection-diffusion model) of point-source pollution in ma-
rine environments, and incorporate the model into the con-
troller design. Second, the designed control is analytically
constructed with provable convergence, and numerical com-
putation of partial differential equations is avoided for rapid
response and real time control.
Comparing to existing work [11], [13], we consider dy-
namic plume where the plume front propagates along time,
but the work in [11], [13] only considers static level curve
tracking. Also, we exploit the transport of pollution source in
water,andincorporatetheadvection-diffusionmodelintoour
control design, while the work in [11], [13] mainly replies
on the gradient information (either implicitly or explicitly
obtained) for plume tracking. The dynamic nature of our
solution avoids the drifting problem that may occur during
the static level curve tracking due to uncertainties or sensor
noises. Also, we provide an analytic solution that does not
need numerically solving the complex plume dynamics as
done in [14] which is computational expensive.
II. PROBLEM STATEMENT
In this section, we present the plume model, assumptions
made on the robot and environments, and state the control
problems studied in the paper.
A. Plume Model
Chemicals introduced in the marine environment through
point-sourcepollutiongenerallypropagatethroughtwotrans-
port mechanisms: advection and diffusion. Advection is the
transport of the chemical due to the motion of the ﬂow, and
diffusion is the motion from areas of higher concentration to
areas of lower concentration. The propagation of chemicals
is modeled by the following advection-diffusion equation:
@c(x;t)
@t
+v
T
(x;t)?c(x;t) = k?
2
c(x;t) (1)
where c≥ 0, c?R is the chemical concentration, t denotes
time, v is the advection velocity, k > 0, k?R is the diffu-
sioncoefﬁcient in a homogenous space,?c(x;t) =
@c(x;t)
@x
is
the spatial gradient of c(x;t),?
2
c(x;t) =
@
2
c(x;t)
@x
2
1
+
@
2
c(x;t)
@x
2
2
is the divergence of c(x;t) in two dimensional space, and
@c(x;t)
@t
is the partial derivative of c(x;t) along the time axis.
B. Robot Model
In this paper, we consider plume front tracking using
surface vehicles with the following kinematic model [15]
in two-dimensional space,
_ x
r
=
[
cos
r
?sin
r
sin
r
cos
r
]
 (2)
where x
r
= [x
r1
;x
r2
]
T
represents the Cartesian coordinates
of the robot,  = [
1
;
2
]
T
are the surge and sway veloci-
ties respectively deﬁned in the body-ﬁxed frame, 
r
is the
heading angle of the vehicle. Note that the determinant of
[
cos
r
?sin
r
sin
r
cos
r
]
is always 1 whatever the value of ,
meaningthatitsinversealwaysexists.Theinversematrixcan
Fig. 1. The assignment of boundary robots and follower robots in an eight
robot group, where the red disk and the blue square represent the boundary
robots and the follower robots respectively, the green dash-line represents
the directional communication links between neighboring robots.
be analytically solved as
[
cos
r
sin
r
?sin
r
cos
r
]
. Equation (2)
can be converted into a single integrator model by deﬁning
a new control input metric u = [u
1
;u
2
]
T
satisfying,
 =
[
cos
r
sin
r
?sin
r
cos
r
]
u (3)
with which, the robot dynamics is reduced to a single
integrator model,
_ x
r
= u: (4)
C. Available Information
For the single robot plume tracking problem, we assume
that it has sensors to obtain local information, including
its position and heading, and the chemical concentration
information at its current position. For the multi-robot plume
tracking case, we assume in addition that each robot is
able to access information from its one-hop neighbors by
communication. We made the following assumptions.
Assumption 1: The robot’s onboard sensors obtain its
position x
r
, heading 
r
, and the following information at
its position: the chemical concentration c
r
, the gradient of
the concentration ?c
r
, the divergence of the concentration
gradient ?
2
c
r
, and the ﬂow velocity v
r
.
Remark 1: Note that there may not exist sensors to di-
rectly measure the gradient and the divergence of the con-
centration. However, the values can be estimated either by
counting the historical data of a single sensor [16], or by
considering the readings from multiple spatially distributed
sensors on a single robot [17], [18].
Assumption 2: For multiple robot plume tracking, two
robots are assigned as boundary robots and all the other
robots are assigned as follower robots. As shown in Fig.
1 as an example, the two boundary robots do not access
information from other robots, and the follower robot, i.e.,
the ith robot (1 < i < n with n denoting the total number of
robots), only communicates with its one-hop neighbors on
the communication graph, i.e., the (i? 1)th robot and the
(i+1)th robot.
Remark 2: Assumption 2 signiﬁcantly reduces the com-
munication complexity by restricting the robot communica-
tion along a line topology with a communication complexity
O(n), in contrast to an all-to-all communication with a
communication complexity O(n
2
) [19], [20].
68
Fig. 2. The schematic of the proposed algorithm for single robot plume
front tracking. There are two steps in the algorithm: 1) the robot estimates
the plume front trajectory, 2) the robot tracks the estimated trajectory. The
robot achieves front tracking if both the estimated and tracking trajectories
converge.
D. Control Objective
At time t, we consider those points x(t) with the con-
centration c(x(t);t) = c
0
(where c
0
is the threshold con-
centration) to be the plume front. We denote the plume front
usingthepositionset{x(t)?R
2
;c(x(t);t) = c
0
}.Thebasic
control objective is to drive the robot to the plume front. To
monitor the whole perimeter of the plume front, we impose
the second objective for the single robot to patrol along the
plume front with a desired speed, while in the multi-robot
case, we want the robots distributed evenly along the plume
front. The control objectives are formally stated as follows.
Problem 1 (Single Robot Plume Front Tracking): For the
plume dynamics modeled by the advection-diffusion equa-
tion (1), design a control law under Assumption 1 to drive a
single robot, which is subject to the dynamic constraint (4),
to track the plume front {x(t) ? R
2
;c(x(t);t) = c
0
}, and
patrol along the plume front with a desired speed v
d
(t)?R.
Problem 2 (Distributed Multi-robot Plume Front Track-
ing): For the plume modeled by the advection-diffusion
equation (1), design a control law under Assumptions 1
and 2 to drive a group of robots, which are subject to the
dynamic constraint (4), to track the plume front {x(t) ?
R
2
;c(x(t);t) = c
0
}, and simultaneously reach an even
distribution around the plume front.
III. SINGLE ROBOT PLUME FRONT TRACKING
In this section, we solve Problem 1 for the single robot
plume tracking. The problem is modeled in an estimation
and control perspective. A state equation and a measurement
equation are constructed to design a nonlinear observer for
the position estimation of a reference point on the plume
front. Then, a control law is presented to steer the robot to
the estimated position.
A. Algorithm Overview
We partition the plume front tracking task into two parts:
the ﬁrst part is the plume front estimation part, which
estimates the position of a reference point on the front;
the second part is the tracking control part, which drives
the robot to the estimated position. The estimation part and
the tracking control part run simultaneously to reach the
design objective. As illustrated in Fig. 2, the estimation part
maintains a variable ^ x(t), which estimates the position of the
reference point x(t) on the plume front. The estimation part
isdesignedtoenabletheconvergenceof ^ x(t)to x(t),i.e.,the
convergenceoftheestimationerrore(t) = x(t)?^ x(t)tozero
as time elapses. The tracking control part steers the robot
positioned at x
r
(t) to the estimated place ^ x(t), to reduce the
control error e
?
(t) = ^ x(t)? x
r
(t) along time. When both
the estimation error e(t) and the control error e
?
(t) converge
to zero, x(t)? x
r
(t) = e(t) + e
?
(t) will converge to zero
and the design objective of driving the robot to the reference
point is reached.
B. State Equation of the Plume Front Dynamics
Inthissubsection,weﬁrstderivetheplumefrontdynamics
based on the partial differential equation (1), and then use
the plume front dynamics to construct the state equation of
the reference point, which describes the expected behavior
of the robot in Assumption 1.
1) Plume Front Dynamics: In this part, we derive the
plume front dynamics. Because the reference point describes
the expected behavior of the robot, it locates on the plume
front according to Assumption 1. Therefore, at time t, the
reference point x(t) satisﬁes,
c(x(t);t) = c
0
(5)
Withoutintroducingconfusion,wedropthevariabletinx(t)
hereafter. Computing time derivative on both sides of Eq. (5)
yields,
_ c(x;t) =
@c
@t
+?
T
c_ x = 0 (6)
where
@c
@t
=
@c(x;t)
@t
is the time derivative of the concentra-
tion, ?c = ?c(x;t) =
@c
@x
is the spatial derivative, i.e., the
gradient of the concentration. With Eq. (1) and Eq. (6), we
get
_ x
T
?c =?v
T
x
?c?k?
2
c (7)
where v
x
= v(x;t) and ?
2
c =?
2
c(x;t).
2) Derivation of the State Equation based on Plume Front
Dynamics: Because the robot is also expected to patrol with
speed v
d
= v
d
(t) along the plume front, the reference point,
which describes the ultimate behavior of the robot, is then
subject to the following constraint,
(A?c)
T
??c?
_ x = v
d
(8)
where A =
[
0 ?1
1 0
]
is the orthogonal matrix and A?c
represents a vector along the tangent direction of the plume
front. Regarding Eq. (7) and Eq. (8) as linear equations
relative to _ x, _ x can be uniquely solved as follows,
_ x =?
(v
T
x
?c+k?
2
c)?c
??c?
2
+
v
d
A?c
??c?
(9)
69
C. Measurement Equation
For the robot positioned at x
r
, the concentration ﬁeld can
be approximated by the ﬁrst-order Taylor expansion as,
c(x;t) =?
T
c
r
(x?x
r
)+c
r
(10)
where x
r
denotes the position of the robot at time t, c
r
=
c(x
r
;t) is the concentration at position x
r
, and ?c
r
=
@c(x;t)
@x
|
x=xr
is the gradient at x
r
. Deﬁne y(x) = c(x;t)
as the output of the measurement at time t. Then, the above
approximation yields,
y(x) =?
T
c
r
(x?x
r
)+c
r
(11)
Note that the true value of y(x) is y(x) = c
0
since the
reference point x locates on the front. In addition, the
measurement equals y(^ x) = c(^ x) = ?
T
c
r
(^ x? x
r
) at the
point ^ x.
D. Observer Design
Until now, we have obtained the state equation (9) and the
measurement equation (11), which re-write as follows,
_ x = ?
(v
T
x
?c+k?
2
c)?c
??c?
2
+
v
d
A?c
??c?
(12)
y(x) = ?
T
c
r
(x?x
r
)+c
r
(13)
For the system described by (12) and (13), we use the
following extended Luenberger observer [21] for the state
estimation,
_
^ x = ?
(v
T
^ x
?c
^ x
+k?
2
c
^ x
)?c
^ x
??c
^ x
?
2
+
v
d
A?c
^ x
??c
^ x
?
?k
3
?c
r
(
?
T
c
r
(^ x?x
r
)+c
r
?c
0
)
(14)
where k
3
> 0 is a coefﬁcient, v
^ x
= v
^ x
(^ x;t), ?c
^ x
=?c(^ x),
?
2
c
^ x
=?
2
c(^ x).
Remarkably v
^ x
, ?c
^ x
and ?
2
c
^ x
are all quantities at
position ^ x. For the robot at position x
r
, they are neither
measurable nor computable since the above quantities, as
functions of position ^ x and time t, is unknown. For remedy,
we simply replace them with the associated quantities at x
r
,
which are accessible by the robot according to Assumption
1. In this way, we have the following observer expression,
_
^ x = ?
(v
T
r
?c
r
+k?
2
c
r
)?c
r
??c
r
?
2
+
v
d
A?c
r
??c
r
?
?k
3
?c
r
(
?
T
c
r
(^ x?x
r
)+c
r
?c
0
)
(15)
where v
r
= v(x
r
;t), ?c
r
= ?c(x
r
;t) and ?
2
c
r
=
?
2
c(x
r
;t).
Remark 3: The absolute value of
(
?
T
c
r
(^ x?x
r
)+c
r
?
c
0
)
?c
r
in Eq. (15) goes small very fast when ?
T
c
r
is
small. To gain a fast enough response towards the desired
reference point, it is necessary to tune k
3
large in this case.
In contrast, when ?
T
c
r
is large, the absolute value of this
term becomes large very fast and thus needs a small k
3
as the gain. To adaptively adjust the gain k
3
, we can set
k
3
= k
2
=?
(
?
T
c
r
(^ x?x
r
)+c
r
?c
0
)
?c
r
? in implementation
with k
2
> 0 as a constant to improve the performance.
Fig. 3. Control block diagram for the single robot plume front tracking.
E. Estimation-based Tracking Control
For the robot model (4), we present the following control
law to reduce the control error e
?
= ^ x?x
r
,
u = ?
(v
T
r
?c
r
+k?
2
c
r
)?c
r
??c
r
?
2
+
v
d
A?c
r
??c
r
?
?k
3
?c
r
·
(
?
T
c
r
(^ x?x
r
)+c
r
?c
0
)
?k
6
(x
r
? ^ x) (16)
where k
6
> 0 is a constant. As illustrated in Fig. 3, the
proposed control law consists of two parts (as shown in
the dashed rectangle in the ﬁgure): the observer part and
the controller part. The observer collects inputs from the
robot (i.e., x
r
and v
r
), and inputs from the environment (i.e.,
c
r
, ?c
r
, and ?
2
c
r
) and outputs ^ x, which is the estimation
on the plume front trajectory. Together with the sensory
information x
r
, v
r
, c
r
, ?c
r
, and ?
2
c
r
, the observer output
^ x is feeded into the controller, which yields the control input
u to the robot. The diagram illustrates the interplay between
the robot, the environment and the control law.
Remark 4: In the control law (16), the term?k
6
(x
r
? ^ x)
formsanegativefeedbackonthecontrolerror.Therestterms
is identical to
_
^ x according to the observer (14) and it is a
velocity compensation term to regulate the tracking error.
It can be shown that the proposed control strategy is lo-
cally stable. The robot dynamic (4) becomes _ x
r
=?k
6
(x
r
?
^ x)+
_
^ x by substituting the control law (16) and the observer
(14) inside). The control error e
?
(t) = ^ x(t)? x
r
(t) then
turns to _ e
?
= ?k
6
e
?
, which converges to zero, implying
that ^ x ? x
r
when t ? ∞. When time goes to inﬁnity,
the observer (15) reduces to equation (14). The convergence
of the observer guarantees the convergence of the whole
estimation based control system.
Remark 5: In practice, the mismatch between the real and
the nominal models, the measurement error, etc., may result
in additive noises. Although the above results are derived
without considering noises, it is expected that the plume
front tracking error is bounded for bounded additive noises,
i.e., the robot tracks the plume front approximately and the
bounded tracking error depends on the amplitude of the
noises. We will provide formal analysis in our future work.
IV. MULTI-ROBOT PLUME FRONT ESTIMATION AND
TRACKING
In this section, we propose a solution for the distributed
multi-robot plume tracking (i.e., Problem 2) based on the
results on the single robot plume tracking. A group of robots
70
is deployed and distributed evenly on the plume front. Like
before, we use the two-step procedure to complete the task:
the estimation step and the tracking control step. In the
estimation step, we deﬁne n (the number of robots in the
group) moving reference points on the plume front with the
desiredspatialdistribution,anddeﬁneanobservertoestimate
the position of reference points recursively. In the tracking
control step, we drive the robots to the estimated reference
point.
For the task considered in this section, as sketched in Fig.
1, we assign two robots as boundary robots and all the other
robots as follower robots. We present the control laws for
both of them as given next.
1) Boundary Robots: For the boundary robots, i.e., robot
i = 1 and robot i = n, we take the same control law as (16)
based on a similar observer as (15), which writes,
u
i
= ?
(v
T
ri
?c
ri
+k?
2
c
ri
)?c
ri
??c
ri
?
2
+
k
4i
A?c
ri
??c
ri
?
?k
3
?c
ri
·
(
?
T
c
ri
(^ x
i
?x
ri
)+c
ri
?c
0
)
?k
6
(x
ri
? ^ x
i
)(17a)
_
^ x
i
= ?
(v
T
ri
?c
ri
+k?
2
c
ri
)?c
ri
??c
ri
?
2
+
k
4i
A?c
ri
??c
ri
?
?k
3
?c
ri
·
(
?
T
c
ri
(^ x
i
?x
ri
)+c
ri
?c
0
)
(17b)
for i = 1;n
where ^ x
i
, x
ri
are the estimated position of the ith reference
point and the position of the ith robot, respectively, v
ri
=
v(x
ri
), c
ri
= c(x
ri
), ?c
ri
= ?c(x
ri
) and ?
2
c
ri
=
?
2
c(x
ri
) are the ﬂow velocity at the ith robot position x
ri
,
the concentration at x
ri
, the gradient of the concentration at
x
ri
, and the divergence of the concentration gradient at x
ri
,
respectively, k
4i
= k
4i
(t) represents the desired speed along
the tangent direction of the plume front.
The boundary robot control law (17) has a design param-
eter k
4i
for i = 1, and i = n, which assigns a desired
patrolling speed to the robot. By choosing k
41
> 0 and
k
4n
< 0, the boundary robots 1 and n patrol in the counter-
clockwise and clockwise directions, respectively. This gen-
erates a patrolling behavior for each of the boundary robots
but with an opposite direction. Combining with the follower
robots whose controllers are presented below, the group of
robots spread out to cover the whole plume front. As the
two boundary robots moves in an opposite direction along
the plume front, they will meet on sometime and then the
parameter k
4i
is switched to the followingone allowingthem
to stop patrolling and stay together:
k
4i
= k
7
?^ x
i
?^ x
n+1?i
?sign
(
(^ x
i
?^ x
n+1?i
)
T
A?c(^ x
i
)
)
(18)
where k
7
> 0 is a positive constant, i = 1, n.
2) Follower Robots: We derive the follower control law
based on the results for single robot plume front tracking.
The parameter k
4i
= k
4i
(t) in (15), which represents
the desired speed along the tangent direction, gives us an
additional design freedom. This freedom is exploited in this
part to design a distributed formation behavior. To this end,
thegainv
d
in(15)isreplacedwithanadaptiveonerelyingon
the distance difference between the two neighbors to form
Fig. 4. Control block diagram for a follower robot in the multi-robot plume
front tracking.
a cooperative observer for the reference points. Thus, we
propose the following observer based control law for the ith
(i = 2;3;:::;n?1) robot,
u
i
= ?
(v
T
ri
?cri +k?
2
cri)?cri
??cri?
2
+
k4iA?cri
?A?cri?
?k3?cri
·
(
?
T
cri(^ xi?xri)+cri?c0
)
?k6(xri? ^ xi)(19a)
_
^ x
i
= ?
(v
T
ri
?cri +k?
2
cri)?cri
??cri?
2
+
k4iA?cri
?A?cri?
?k3
(
?
T
cri(^ xi?xri)+cri?c0
)
?cri (19b)
with;
k
4i
=
k5(^ x
T
i 1
A?cr;i 1 + ^ x
T
i+1
A?cr;i+1?2^ x
T
i
A?cri)
?A?cri?
for i = 2;3;:::;n?1 (19c)
where k
5
> 0 is a constant.
The block diagram of the multi-robot cooperative plume
front tracking for a follower robot is illustrated in Fig. 4.
In addition to the information from the environment and the
ith robot itself, this control scheme also requires information
of ^ x
i?1
and ^ x
i+1
, which are the observer outputs from the
(i?1)th and the ith robot, respectively.
Theconvergenceoftheboundaryrobotstotheplumefront
follows the convergence results of the designed observer in
the single robot case. The proof idea includes three parts.
First, we construct a set of reference points with formation
interactionsontheplumefrontandeachofthemisassociated
with a robot in the group. Second, we prove the convergence
of the robots to the reference points. Third, we prove the
reference points converge to even distribution along the
plume front between the reference points associated with
the two boundary robots. We omit the rigorous proof of
convergence due to space limitation.
V. SIMULATIONS
In this section, we present Matlab numerical simulations
to validate the effectiveness of the proposed algorithms.
A. Simulation Environment
The simulation of the environment includes two part:
one is the simulator of a ﬂow ﬁeld and the other is the
simulator of the concentration ﬁeld. The ﬂow ﬁeld is gen-
erated numerically by solving incompressible Navier-Stokes
71
equations in a rectangular domain with prescribed velocities
along the boundary using the program presented in [22].
The concentration ﬁeld is generated using ﬁnite difference
method to numerically solve the partial differential equation
(1) with a ﬁxed value of the concentration at sources as
boundary conditions. The ﬂow ﬁeld is visualized in Fig. 5
(a), where the strength and direction of the ﬂow at various
positions are shown. Both of the two chemical sources
locating at (13;3) and (7;7) has a ﬁxed concentration 3.
The propagation of the chemical in the ﬂow ﬁeld results in
a time-varying concentration ﬁeld.
B. Single Robot Plume Front Tracking
Here we validate Algorithm 1 that uses a single robot
to tack and patrol the plume front with concentration value
c
0
= 0:3. The diffusion coefﬁcient k is set as k = 0:5.
Due to the advection effect, the chemicals are blown along
the ﬂow direction and form a non-symmetric contour in the
plume front. In the simulation, the patrolling speed is set
as k
4
= 6, the gradient gain is set as k
3
= 5, and the
estimated reference tracking gain is set as k
6
= 5. The robot
is deployed to the ﬁeld at time t = 2s after the sources starts
propagationattimet = 0s.AsshowninFig.5(b),duetothe
chemical propagation, the plume front contour expands with
time. With the proposed method, the robot adaptively adjusts
its orbits to track the plume front. We denote the difference
between the plume front concentration c
0
and the measured
concentration at the robot position c
r
as the plume front
tracking error. As shown in Fig. 5 (c), the error attenuates to
zero along time. Note that the lug in the error curve in Fig. 5
(c) around time t = 8:5s happens at the time when the robot
travels across the lower right tip of the plume front curve,
where the concentration changes sharply since the area is
mostly close to the source and locates in a place with the
ﬂow direction adverse to the diffusion direction. Any small
variation in the robot trajectory in this area results in a large
error in the concentration values.
C. Multi-robot Distributed Plume Front Tracking
We validate Algorithm 2 with 30 robots to cover the
dynamic plume front with concentration c
0
= 0:1. The
diffusion coefﬁcient k in (1) is set as k = 0:5. For the
boundary robots, the patrolling speed is set as k
4i
= 3 for
i = 1 and k
4i
= ?3 for i = 30. For follower robots, the
gain k
5
is set to be k
5
= 5. For all robots, the gradient gain
is set as k
3
= 5 and the estimated reference tracking gain
is set as k
6
= 5. After the sources start propagation for 2
seconds, 30robotsaredeployedasshowninFig.6,wherethe
follower robots are marked by a hollow square in blue and
the boundary robots are marked by a hollowcircle in red. We
want the robots to distribute on the plume front evenly, move
with the plume propagation and expand the formation when
the plume front expands. For this purpose, starting from time
t = 6s, when the condition ?^ x
1
? ^ x
30
?≤ l
dis
with l
dis
= 2
is satisﬁed, k
4i
switches to the control law (17) with the
parameter k
4i
set as (18) for the boundary robots i = 1 and
i = 30, where the gain k
7
is set to be 20 in the simulation.
Fig. 5. (a). The velocity ﬁeld considered in the simulation, where the
pseudo-color and the yellow arrow indicate the strength and the direction
of the ﬂow, respectively. (b). The robot trajectory for single robot plume
front tracking and patrolling, where S
1
and S
2
are the two sources, the
green curves and the red squares represent the plume front contour and the
robot positions, respectively; The black curve represents the robot trajectory.
(c). The plume front tracking error.
Fig. 6. The snapshots of the robot movements for a typical simulation
run with 30 robots for cooperative plume front tracking, where the pseudo-
color indicates the concentration distribution at each time step with the scale
shown in the color-bar aside, the black curve is the contour of the plume
front with a concentration value c
0
=0:01, the hollow square in blue and
the hollow circle in red represent the position of the follower robots and
the true position of the boundary robots, respectively, the positions marked
with S1 and S2 are the two sources starting propagating chemicals in the
ﬂow ﬁeld shown in Fig. 5 at time t=0.
Fig. 6 shows the snapshots of the simulation results along
time. After the robots are deployed in the ﬁeld, it rapidly
forms the desired even distribution and reach the plume front
as shown at time t = 4s. As time elapses, the robots move
around the plume front shown as the black contour, and
simultaneously follow the expansion movement of the plume
front as shown in the snapshot t = 6s. After this time, the
72
0 5 10 15 20
0
5
10
15
20
25
30
S1
S2
robot trajectories
x/m
y/m
2 4 6 8 10 12 14
0
0.2
0.4
0.6
0.8
time history of the formation error
time/s
2 4 6 8 10 12 14
0
0.05
0.1
0.15
0.2
time history of the plume tracking error
time/s
Fig. 7. The robot trajectories, the time proﬁle of the formation error, and
the plume front tracking error, where S
1
and S
2
represent the sources, ‘+’
represents the initial position of robots, the hollow squares and the hollow
circles represent the ﬁnal positions of the follower robots and the boundary
robots, respectively.
boundaryrobotkeepmovinginanoppositedirectiontocover
the plume front until the distance between them is within
the value l
dis
, which is satisﬁed at time t = 10s. Finally, as
shown at t = 12s, the two boundary robots reach consensus
in their positions and the follower robots are successfully
deployed evenly covering the plume front.
To evaluate the performance, we deﬁne two indices, one
is the formation error and the other is the plume tracking
error. The formation error measures whether the formation
is achieved for the follower robots, i = 2;3;:::;n ? 1.
As the distance between any two neighboring robots is


?x
ri
? x
r;i+1
???x
ri
? x
r;i?1
?


, we deﬁne the average
distanceofthegroupof (n?2)robotsasthegroupformation
error:
√
∑
n 1
i=2
(|?xri?xr;i+1???xri?xr;i 1?)
2
n?2
. We deﬁne the
plume tracking error of the group to be
√
∑
n
i=1
(c(xri)?c0)
2
n
,
whichistheaveragetrackingerrorofeachrobotinthegroup.
The time histories of the formation error and the plume
tracking error are plotted in Fig. 7, where the trajectories
of the robots are also plotted. It can be seen that both the
formation error and the tracking error reduce rapidly to a
smallvalue.Italsoshowsthatasmallpeakappearsataround
t = 10s in the formation error subﬁgure, which is caused
by the switching of the boundary robots’ controllers from
spread-out to stay-close and stop-rotating. It can be observed
that the performance is overall satisfactory.
VI. CONCLUSION
In this paper, the dynamic plume tracking problem is
solved using a group of cooperating robots. The advection-
diffusionequationisusedtomodelthepollutionplumeprop-
agation, and a model-based observer is built to estimate the
plume front trajectory. Solutions are then provided for single
robot tracking and multi-robot tracking with simultaneous
formation based on an estimation and control framework.
The multi-robot plume tracking is distributed and scalable
with a nearest-neighboring communication topology. Simu-
lations show the effectiveness of the proposed strategy. We
will conduct experimental validation and characterize noise
effects in the future work.
ACKNOWLEDGEMENT
The work was partially supported by the National Science
Foundation under Grants IIS-12181558 (Li and Guo) and
IIS-1217659 (Bingham).
REFERENCES
[1] A. Lilienthal and T. Duckett. Building concentration gridmaps with a
mobile robot. Robotics and Autonomous Systems, 48:3–16, 2004.
[2] J.A. Farrell, S. Pang, and W. Li. Plume mapping via hidden markov
methods. IEEE Transactions on Systems, Man, and Cybernetics, Part
B: Cybernetics, 33(6):850–863, 2003.
[3] S. Pang and J.A. Farrell. Chemical plume source localization. IEEE
Transactions on Systems, Man, and Cybernetics, Part B: Cybernetics,
36(5):1068–1080, 2006.
[4] G. Ferri, M.V. Jakuba, and A. Mondini. Mapping multiple gas/odor
sources in an uncontrolled indoor environment using a Bayesian
occupancy grid mapping based method. Robotics and Autonomous
Systems, 59(11):988 – 1000, 2011.
[5] W. Li, J.A. Farrell, S. Pang, and R.M. Arrieta. Moth-inspired
chemical plume tracing on an autonomous underwater vehicle. IEEE
Transactions on Robotics, 22(2):292–307, 2006.
[6] M.D. Mckay D.J. Bruemmer, D.D. Dudenhoeffer and M.O. Anderson.
A robotic swarm for spill ﬁnding and perimeter formation. In IEEE
Spectrum, pages 23–30, 2002.
[7] A. Lilienthal and T. Duckett. Experimental analysis of smelling
braitenberg vehicles. Environment, 5:375–380, 2003.
[8] J. Clark and R. Fierro. Cooperative hybrid control of robotic sensors
for perimeter detection and tracking. In Proceedings of the American
Control Conference, pages 3500–3505, 2005.
[9] M.A.Hsieh,E.Forgoston,andT.W.Mather. Roboticmanifoldtracking
of coherent structures in ﬂows. In Proceedings of IEEE International
Conference on Robotics and Automation, pages 4242–4247, 2012.
[10] D. Chang, W. Wu, D.R. Webster, M.J. Weissburg, and F. Zhang. A
bio-inspired plume tracking algorithm for mobile sensing swarms in
turbulent ﬂow. In Proceedings of IEEE International Conference on
Robotics and Automation, pages 921–926, 2013.
[11] F. Zhang, E. Fiorelli, and N.E. Leonard. Exploring scalar ﬁelds using
multiple sensor platforms: tracking level curves. In Proceedings of
IEEE Conference on Decision and Control, pages 3579–3584, 2007.
[12] M. Malisoff and F. Zhang. Adaptive control for planar curve tracking
under controller uncertainty. Automatica, 49(5):1411 – 1418, 2013.
[13] W. Wu and F. Zhang. Cooperative exploration of level surfaces of
three dimensional scalar ﬁelds. Automatica, 47(9):2044–2051, 2011.
[14] R.N. Smith, Y. Chao, P.P. Li, D.A. Caron, B.H. Jones, and G.S.
Sukhatme. Planning and implementing trajectories for autonomous
underwater vehicles to track evolving ocean processes based on
predictions from a regional ocean model. International Journal of
Robotic Research, 29:1475–1497, 2010.
[15] C.R. Sonnenburg and C.A. Woolsey. Modeling, identiﬁcation, and
control of an unmanned surface vehicle. Journal of Field Robotics,
30(3):371–398, 2013.
[16] E. Biyik and M. Arcak. Gradient climbing in formation via extremum
seeking and passivity-based coordination rules. In Proceedings of 46th
IEEE Conference on Decision and Control, pages 3133–3138, 2007.
[17] T.C. Henderson and E. Grant. Gradient calculation in sensor networks.
In Proceedings of IEEE/RSJ International Conference on Intelligent
Robots and Systems, pages 1792–1795, 2004.
[18] S. Li and Y. Guo. Distributed source seeking by cooperative robots:
all-to-all and limited communications. In Proceedings of International
Conference on Robotics and Automation, pages 1107–1112, 2012.
[19] R.O. Saber, J.A. Fax, and R.M. Murray. Consensus and cooperation
in networked multi-agent systems. In Proceedings of IEEE, pages
215–233, 2007.
[20] E.Klavins. Communicationcomplexityofmulti-robotsystems. InJ.D.
Boissonnat, J.W. Burdick, K. Goldberg, and S. Hutchinson, editors,
Algorithmic Foundations of Robotics, Berlin Heidelberg, 2003.
[21] M. Zeitz. The extended luenberger observer for nonlinear systems.
Systems & Control Letters, 9(2):149 – 156, 1987.
[22] B. Seibold. A compact and fast matlab code solving the incompress-
ible navier-stokes equations on rectangular domains. Massachusetts
Institute of Technology, 2008.
73
