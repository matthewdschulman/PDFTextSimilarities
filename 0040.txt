The Speed Graph Method:
Time Optimal Navigation Among Obstacles
Subject to Safe Braking Constraint
Gil Manor and Elon Rimon
Dept. of Mechanical Engineering, Technion, Israel
Abstract. This paper describes a method for comput-
ing the global time optimal path of a mobile robot
navigating among obstacles subject to safe braking
constraints. The paper ﬁrst generalizes the classical
Brachistochrone problem into a time optimal naviga-
tion problem, where the mobile robot navigates under
a braking safety constraint near a point obstacle or
a wall segment. The time optimal navigation problem
is then formulated for general polygonal environments.
Based on this formulation, the paper constructs a speed
graph for the environment which consists of time op-
timal arcs that connect critical via points. The speed
graph is then used to identify the path homotopy class
which most likely contains the global time optimal path.
Once a candidate homotopy class is selected, the exact
time optimal path subject to safe braking constraints is
computed within the homotopy class based on convex-
ity properties of these paths. The results are illustrated
with examples, described as readily implementable pro-
cedures, and demonstrated with experiments.
1. Introduction
High speed mobile robots strive to complete their tasks
while minimizing overall travel time. This requirement
is achieved by maximizing the robot’s speed while
maintaining velocity dependent safety constraints
throughout the navigation process. High speed mobile
robots already operate in sentry duty and surveil-
lance [1], where high speed is required. Fast autonom-
ous mobile robots are also expected to replace human
drivers in urban environments [14]. Such autonomous
systems are currently tested to ensure braking safety un-
der all possible circumstances. Other high speed sys-
tems include mobile robots delivering cargo in large
warehouses [16], as well as ﬁrst responder robots we
are currently developing.
In all of these applications, traveling safely along
high speed paths imposes velocity dependant safety
constraints. Therefore, pure position based navigation
methods such as classical roadmap planning cannot be
implemented directly. Rather, a safe high speed path
must be planned in the mobile robot’s position-velocity
conﬁguration space.
This paper describes a method for computing time
optimal paths of a mobile robot in known polygonal
environments subject to uniform braking safety con-
straints. Braking safety is encoded as a state (position
and velocity) dependant constraint, which allows for-
mulation of the time optimal navigation problem using
calculus of variations. The time optimal path minimizes
a time functional, denoted T(a), deﬁned over all safe
pathsa connecting the start and target. The paper ana-
lyzes the properties of these paths and derives a scheme
for computing the time optimal path within each homo-
topy class of the environment.
As a preliminary step, the classical Brachistoch-
rone problem [2] is generalized to the problem of com-
puting safe time optimal paths near a point obstacle or
a wall segment. The time optimal navigation problem
is then formulated for general polygonal environments.
Based on this formulation, the paper introduces a two-
stage method for computing safe time optimal paths. In
the ﬁrst stage, critical via points are connected by time
optimal arcs into a search graph called the speed graph.
The speed graph is then used to efﬁciently select the
most promising path homotopy class in terms of total
travel time between the start and target. In the second
stage, convexity properties of T(a) are used to compute
the time optimal path within each homotopy class sug-
gested by the speed graph. Importantly, the two-stage
process takes place in the robot’s state space, thus treat-
ing the geometric path planning and the speed proﬁling
in a single framework.
After discussing the literature in Section 2, the time
optimal navigation problem is formulated in Section 3.
Section 4 describes analytic solutions for safe time op-
timal paths near a single obstacle. Section 5 describes
important properties of the global time optimal path.
Section 6 introduces the speed graph. Section 7 de-
scribes a scheme for computing the time optimal path
within each homotopy class suggested by the speed
graph. Section 8 discusses simulations and experimen-
tal results. Finally, the concluding section mentions fu-
ture extensions of the current research.
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 1155
2. Relationship to Prior Work
The literature on time optimal path planning subject
to safety constraints can be classiﬁed into four ap-
proaches. The ﬁrst approach computes a geometric col-
lision free path from start to target, then generates a ve-
locity proﬁle minimizing total travel time along the cho-
sen path subject to velocity and acceleration safety con-
straints [12, 17]. A second approach plans high speed
paths in discrete time steps. In each step along its path,
the robot selects a local maneuver that guarantees a fast
and safe trajectory in its local environment. Examples
of this approach are the velocity obstacles method [6],
and the dynamic window approach [3, 7]. A third ap-
proach, usually called kinodynamics, considers a dis-
cretized state space. For example, [4, 10] discretize
the robot’s state space into a regular grid, then search
the obstacle-free portion of the grid for a minimum
travel time path subject to velocity dependent safety
constraints. The RRT and RRT* methods [9, 11] con-
struct search trees whose edges represent high-speed
feasible maneuvers connecting randomly chosen points
to the current tree. A forth approach taken by Wein et
al. [18] suggests planning high quality paths (of which
time optimal paths is one example) in known environ-
ments while considering the geometric and dynamic
constraints in a single planning phase. In their work,
the V oronoi diagram induced by the obstacles is mod-
iﬁed with arcs that minimize a cost function which
trades obstacles’ clearance with path length. A mini-
mum cost search on the graph yields an approximate
optimal path. However, the chosen edge weights have
no clear physical meaning. The speed graph yields ap-
proximate time optimal paths using physically mean-
ingful weights. Moreover, it suggests a candidate path
homotopy class in which the exact time optimal path
can be efﬁciently computed using path convexity prop-
erties.
3. Problem Description and Preliminaries
This paper considers a disc robot navigating with high
speed in planar environments populated by known sta-
tionary polygonal obstacles. The robot is assumed to
move freely in the(x;y) plane. The robot’s state,(p;n)
2R
2
R, consists of its position p and speedn=k ˙ pk.
When traveling with high speed, the main velocity-
dependent safety constraint is the need to maintain safe
braking distance with respect to the surrounding ob-
stacles. The robot must be able to brake and reach
a full stop without hitting any of the surrounding obsta-
cles. We start by deﬁning the braking distance required
for safe navigation.
Deﬁnition 1. The robot’s safe braking distance, de-
noted d, is the length of the shortest kinematically fea-
sible braking path from the robot’s current state (p;n)
to a full stop atn=0.
The safe braking distance, d, can be computed as
a function of the robot’s speed using energy balance as
described in [8, 13]:
d(n)=
1
2mg
n
2
; (1)
wherem is the coefﬁcient of friction at the ground con-
tacts, and g is the gravitational acceleration. Although
d(n) does not depend on the robot’s mass, m, the fric-
tion coefﬁcient m usually strongly depends on m due
to local deformations at the wheels [15][p. 15]. Brak-
ing on the verge of sliding determines the robot’s max-
imal deceleration, denoted a, as follows. The net tan-
gential friction force acting on the robot is mmg. The
robot’s equation of motion during maximal decelera-
tion, ma=mmg, gives the maximal deceleration a=mg.
Uniform braking safety is ensured when the robot
is kept at least d(n) away from the nearest obstacle at
every state (p;n). Note that d(n) is monotonically in-
creasing in n. Hence as the robot travels with higher
speeds its safe braking distance increases, resulting in
a larger circular “safety zone” surrounding the robot.
This circular zone must be kept free of any obstacles
in order to allow safe deceleration to a full stop. Note,
too, that a uniform braking distance is highly conser-
vative. The extension of the method described here to
non-uniform braking distance is discussed in the con-
cluding section.
4. Time Optimal Path Near Single Obstacle
This section describes analytic solutions for the safe
time optimal path of a point robot near a wall segment or
a point obstacle (analytic solutions for a disc are sum-
marized in [13]). We start with a formulation of the
travel time variational problem. Leta(s):[0;1]!R
2
be
the robot’s path between the start p
S
=a(0) and target
p
T
=a(1). When the geometric parameter s is param-
eterized by time, s(t), the robot’s velocity along a is
given by the chain rule,
d
dt
a(s(t))=
da(s)
ds

ds(t)
dt
. The
robot’s speed,n(s)=k
d
dt
a(s(t))k, is given by
n(s)=jj
a(s)
ds
jj
ds(t)
dt
:
Solving for dt gives:
dt=
ka
0
(s)k
n(s)
ds; (2)
where a
0
(s)= da(s)=ds. Integrating both sides of (2)
for s2[0;1] gives the travel time functional alonga:
T(a)=
Z
1
0
ka
0
(s)k
n(s)
ds: (3)
The integrand, denoted G
 
a
0
(s);a(s);s

is given by
1156
G
 
a
0
(s);a(s);s

=
ka
0
(s)k
n(s)
:
Based on calculus of variations, any extremal path of
T(a) over all piecewise smooth pathsa connecting p
S
and p
T
must satisfy the Euler-Lagrange equation:
¶G
¶a
 
¶
¶s

¶G
¶a
0

= 0; (4)
wherea anda
0
are to be treated as formal variables.
The safe extremal path near a wall segment or
a point obstacle is derived as follows [13]. Let O
i
denote a wall segment or a point obstacle, and let
dst(a(s);O
i
) denote the minimal distance between the
robot positioned at a(s) and the obstacle O
i
. Brak-
ing safety requires that dst
 
a(s);O
i

 d(n(s)) for s2
[0;1]. Since d(n)=
1
2a
n
2
where a is the robot’s maxi-
mal deceleration, braking safety becomes the inequality
2adst
 
a(s);O
i

n
2
(s) for s2[0;1].
First consider a wall segment. When the wall seg-
ment is aligned with the x axis, dst
 
a(s);O
i

= y(s)
along a path a(s)=(x(s);y(s)). The safety constraint
thus becomes n
2
 2ay. Travel time minimization re-
quires maximal velocity. Substituting n=
p
2ay in G,
then solving the Euler-Lagrange equation gives a cy-
cloid as the extremal path. The cycloid is parameterized
bya(j)=
 
x(j);y(j)

forj2[j
S
;j
T
], wherej is the
angle of a ﬁxed point on a rolling circle that generates
the cycloid:
0
@
x(j)
y(j)
1
A
=
0
@
A
0
1
A
+
0
B
@
1
4ac
2
w
(j  sinj)
1
4ac
2
w
(1  cosj)
1
C
A:
The parameters A and c
w
are uniquely determined by
the endpoints p
S
and p
T
.
The safe extremal path near a point obstacle is
parametrized in polar coordinates, a(q)=(q;r(q)) for
q2[q
S
;q
T
]. When the point obstacle O
i
is located at the
origin, dst
 
a(q);O
i

= r(q), and the safety constraint
becomes n
2
 2ar. Substituting the maximal allowed
velocityn=
p
2ar in G, then solving the Euler-Lagrange
equation, gives the extremal path:
r(q)= 2ac
2
p

tan
2

1
2
q 
1
2
q
S
+ tan
 1
r
r
S
2ac
2
p
  1

+ 1

where r(q
S
)= r
S
. The parameter c
p
is uniquely deter-
mined by the end condition r(q
T
)= r
T
. As next dis-
cussed, the two time optimal paths are local minima of
the travel time functional T(a).
5. Basic Properties of the Time Optimal
Path in Multiple Obstacle Environments
We start by formulating the time optimal variational
problem in a multiple obstacles environment. When
a mobile robot is subjected to a uniform braking con-
straint, its maximal allowed speed is governed by its
distance to the nearest obstacle. Suppose the environ-
ment contains the obstacles O
1
;:::;O
k
. The robot’s safe
braking distance is given by d(n)=
1
2a
n
2
, where a=mg
is the robot’s maximal deceleration. For braking safety,
the robot must keep at least d(v) away from the nearest
obstacle. Thus, when the robot moves along a collision
free path a(s), its braking distance d(n) must satisfy
the safety constraint:
min
i=1:::k
fdst(a(s);O
i
)g d
 
n(s)

s2[0;1]; (5)
where dst(a(s);O
i
) is the minimal distance between
the robot positioned ata(s) and the obstacle O
i
. Travel
time minimization requires maximal speed, and accord-
ing to (5) the maximal safe speed is given by
n(s)=
q
2a min
i=1:::k
fdst(a(s);O
i
)g;
The travel time functional to be minimized is given by
T(a)=
Z
1
0
G
 
a
0
(s);a(s)

ds;
where
G
 
a(s);a
0
(s)

=
ka
0
(s)k
p
2a min
i=1:::k
fdst(a(s);O
i
)g
:
Next three basic properties of the time optimal path are
described. Consider a planar environment, denoted F,
containing multiple internal obstacles and surrounded
by an outer boundary. The set of piecewise differen-
tiable paths in F, is denoted M. Let us start with the
notion of a path homotopy class.
Deﬁnition 2. Two continuous paths with the same
endpoints, a;b : [a;b]! F, belong to the same ho-
motopy class if there is a continuous mapping, F :
[a;b][0;1]!F, such that F(t;0) = a(t);F(t;1) =
b(t) for t2[a;b].
Every path homotopy class forms a connected compo-
nent in M, since two paths a and b in the same ho-
motopy class can be connected by the path homotopy.
The ﬁrst basic property concerns the smoothness of any
extremal path of T(a).
Proposition 5.1 ( [13]). Every extremal path of T(a) in
F is a C
(1)
curve having a continuously varying tangent.
The second property concerns the time minimality of
any extremal path of T(a).
Proposition 5.2 ( [13]). Leta
opt
be an extremal path of
T(a). Thena
opt
is a local minimum of T(a) in a local
neighborhood ofa
opt
in the metric space M.
The third property ensures the existence of a unique
time minimal path.
Proposition 5.3 ( [13]). The travel time functional,
T(a), possesses a unique time minimal path in every
homotopy class of paths connecting p
S
and p
T
inF.
1157
0 50 100 150 200 250 300
0
50
100
150
200
250
300
speed graph edges
speed graph 
nodes
1
o
2
o
3
o 1
S
3
S
4
S
5
S
6
S
7
S
2
S
35
q
35
e
Figure 1. The speed graph in a rectangular environ-
ment populated by three point obstacles.
Every extremal path of T(a) is a local minimum ac-
cording to Proposition 5.2. Since T(a) possesses
a unique local minimum in each path homotopy class
according to Proposition 5.3, every extremal path of
T(a) must be the unique minimum in the path’s ho-
motopy class.
6. The Speed Graph
The speed graph is ﬁrst constructed for environments
populated by point obstacles, then extended to general
polygonal environments.
Consider an environment containing multiple point ob-
stacles O
1
;:::;O
k
. Let e
i j
denote the V oronoi edge
passing between adjacent obstacles O
i
and O
j
(e.g. the
edge e
35
in Figure 1). Note that e
i j
is equidistant from
O
i
and O
j
. Denote by q
i j
the point along e
i j
where the
distance to the obstacles is minimal.
The speed graph nodes: The speed graph nodes con-
sist of all local minimum points q
i j
. These nodes lie on
the V oronoi diagram, such that each V oronoi edge con-
tains a single node (Figure 1).
The speed graph edges: Given an obstacle O
i
, the
Voronoi cell of O
i
, denoted S
i
, is the region surround-
ing O
i
and bounded by V oronoi edges (Figure 1). Let
V(O
i
) be the set of speed graph nodes located on the
boundary of S
i
. The speed graph edges are the safe time
optimal arcs connecting every pair of nodes in V(O
i
).
The cost of each edge is the value of the safe travel time
functional T(a) along this edge[13].
Note that q
i j
lies either in the interior or at an end-
point of e
i j
(q
35
in Figure 1). Also note that the number
of V oronoi edges is linear in the number of obstacles,
and consequently there are O(k
2
) speed graph edges.
Every start and target, p
S
and p
T
, can be connected by
time optimal arcs to the speed graph. The time optimal
path from p
S
to p
T
along the augmented speed graph
can then be computed using any standard graph search
point feature-obstacle
wall feature-obstacles
time optimal speed 
graph edge
12
q
2
p
1
p
equidistant lines
1
2
3
1
O
speed graph node
2
O
3
O
speed graph node
13
q
Figure 2. A speed graph edge in the vicinity of
a polygonal obstacle.
algorithm. This path, denoteda
G
, is necessarily piece-
wise smooth. Hencea
G
cannot be an extremal path of
T(a). However, a
G
suggests the most promising path
homotopy class in terms of total travel time.
The Voronoi saturation problem: In environ-
ments populated by multiple point obstacles, the time
optimal path near a particular point obstacle may
emerge out of its V oronoi cell and penetrate a neigh-
boring cell. In order to ﬁnd the true time optimal path
between two speed graph nodes, a saturation method is
proposed and explained in the technical report [13].
The speed graph in next extended to polygonal en-
vironments. Each polygonal obstacle perimeter con-
sists of line segments joined by vertices. These can
be treated as individual point or wall segment obsta-
cles called obstacle-features. When the robot travels be-
tween polygonal obstacles, it is in the vicinity of a sin-
gle obstacle-feature ( a vertex or edge) at each instant
along its path.
Consider two nodes that lie on the boundary of a
common V oronoi cell (e.g. q
12
and q
13
in Figure 2).
To construct the time optimal arc between these nodes,
consider the proximal obstacle-features of the polygo-
nal obstacle at the center of the V oronoi cell (e.g. O
1
in Figure 2). Assume the speed graph edge crosses
l equidistant lines spanned between adjacent obstacle-
features of the polygonal obstacle. The speed graph
edge is consequently affected by l+ 1 feature-obstacles
(e.g. l+1=3 obstacle-features in Figure 2). The speed
graph edge can thus be parameterized by the points
p
1
;:::; p
l
where the edge crosses the equidistant lines.
Each crossing point p
i
can freely vary along the i’th
equidistant line, but only in the segment bounded by
the obstacle and the V oronoi edge. Since each speed
graph edge is required to be time optimal, it must pos-
sess a continuous tangent at p
1
;:::; p
l
. Computing the
optimizing values of p
1
;:::; p
n
is done by solving a suit-
able convex optimization problem (see [13]).
1158
7. Computation of the Time Optimal Path
This section describes a scheme for computing the time
optimal path within a speciﬁc homotopy class suggested
by the speed graph. Starting with the speed graph time
optimal path a
G
, let p
1
;:::; p
n
be the crossing points
of a
G
with the V oronoi diagram. At these points a
G
is
not necessarily smooth. To ﬁnd the global time opti-
mal path within the homotopy class ofa
G
, the position
of the crossing points along the V oronoi diagram which
smooth the path should be found. The resulting C
(1)
path will consist of time optimal path segments in each
V oronoi cell, and hence will satisfy the conditions for
the global time optimal path [13]. The procedure ac-
cepts as input the initial crossing points p
1
;:::; p
n
and
consists of three stages.
Time optimal path computation:
(i) At each crossing point p
i
, determine the local
smoothing direction of a
G
along the acute angle
spanned by the tangents of the path segments of
a
G
meeting at p
i
. Denote by v
p
i
the V oronoi node
towards which p
i
should locally move. Move p
i
to v
p
i
, then compute the path’s smoothing direc-
tion at v
p
i
. Compare it with the original smooth-
ing direction at p
i
. If both directions point toward
each other (Figure 3(a)), denote the V oronoi seg-
ment between p
i
and v
p
i
as e
i
. Otherwise, move
the crossing point p
i
to v
p
i
, then split p
i
into two
points p
i
1
and p
i
2
(Figure 3(b)).
(ii) Let p
1
;:::; p
¯ n
be the crossing points obtained at
the end of stage (i), where ¯ n n. At this stage,
p
1
;:::; p
¯ n
, lie on their respective optimal V oronoi
edges, e
1
;:::;e
¯ n
. Compute the exact position of
the optimal crossing points, (p

1
;:::; p

¯ n
), on the
V oronoi segments e
1
;:::;e
¯ n
as suggested below.
(iii) Obtain the globally time optimal path by connect-
ing each pair of adjacent crossing points, p

i
and
p

i+1
, with a time optimal arc within the V oronoi
cell containing these points.
To complete stage (ii) of the procedure, recall that the
time optimal path must have a continuously varying tan-
gent. By requiring tangents continuity at the crossing
points, the computation of the optimal crossing points is
reduced into a system of ¯ n equations in p
1
;:::; p
¯ n
. This
system can be readily solved by any numerical solver
such as Newton’s method (see [13]).
Example: Figure 4 depicts a rectangular environment
populated by four point obstacles O
1
, O
2
, O
3
, and O
4
.
The speed graph for the environment is constructed,
then the time optimal patha
G
is found along the speed
graph. The optimizing positions of the crossing points
are found using Newton’s method (stopping after 5
consecutive iterations), and the time optimal path a
opt
within the homotopy class ofa
G
is computed (Fig. 4).
0 20 40 60 80 100
0
10
20
30
40
50
60
70
80
90
100
speed 
graph
edges
local 
smoothing 
direction
G
S
p
T
p
1
O
2
O
3
O
4
O
S
p
T
p
1
o
2
o
3
o
4
o
1
(a) (b)
3
4
2
1
p
2
p
3
p
5
opt
Figure 4. The time optimal path from p
S
to p
T
sug-
gested by the speed graph.
0 50 100 150 200 250 300 350 400 450 500
0
50
100
150
200
250
300
350
400
S
p
T
p
1
2
3
4
5
6
1 opt
Figure 5. The six best safe high-speed paths in an
ofﬁce ﬂoor environment.
8. Simulations and Experiments
Figure 5 depicts a simulated ofﬁce ﬂoor environment
containing inner walls and pieces of furniture. The
size of the environment is 3 4 meters, and the robot’s
maximal deceleration is a= 0:1 m=sec
2
. For a robot
navigating in speeds of 0:5 m=sec
2
, the characteristic
braking distance would be 1:25 meters. The start and
target, p
S
and p
T
, can be connected by various ho-
motopy classes in this environment. The six best ho-
motopy classes along the speed graph in terms of to-
tal travel time were selected. The safe time optimal
path in each homotopy class, denoted a
1
;:::;a
6
, was
then computed using the computation scheme of Sec-
tion 7 (see Figure 5). The travel time along these opti-
mal paths are: 27:3;35:7;42:6;46:7;53:3;56:4sec. The
global time optimal path in the environment is achieved
by the bold patha
1
=a
opt
depicted in Figure 5. Based
on the travel time results, the k=1 homotopy class pro-
vides the best total travel subject to safe braking con-
straints. For more examples and some preliminary ex-
1159
optimal path
voronoi edges
initial crossing point
optimal crossing point
smoothing direction
optimal path
voronoi edge
initial crossing point
optimal crossing points
smoothing 
direction
(a) (b)
S
p
S
p
T
p
T
p
v
i
p
segment
G segment
G
 
i
p
v
i
p
i
p
*
1 i
p
*
2 i
p
G
 
G
 
*
i
p
Figure3. (a) Local shifting of p
i
along a V oronoi edge. (b) Local splitting of p
i
into two crossing points p
i1
and p
i2
.
periments with an Irobot platform see [13].
Complexity: In polygonal environments with a total of
n obstacle-features (vertex or edge) there are at most
O(n) V oronoi edges. Consequently ,the speed graph’s
size is O(n
2
). A time minimal path along the graph can
be found in O(n
2
logn). Next, the exact crossing points
which bring to minimum the travel time are computed
using a convex optimization algorithm. This computa-
tion is O(n
3
log
1
e
), wheree is the desired accuracy.
9. Conclusion
This paper described the speed graph method for com-
puting time optimal paths of a mobile robot travel-
ing among obstacles subject to uniform braking safety
constraints. The speed graph method ﬁrst constructs
a speed graph for the environment. The time optimal
path along the speed graph, a
G
, is then computed and
subsequently used to suggest the most promising path
homotopy class in terms of total travel time. Basic prop-
erties of the travel time functional T(a) guarantee that
the resulting path is the global time optimal path within
the homotopy class ofa
G
. Simulations and experiments
support the speed graph’s usefulness in suggesting the
path homotopy class that gives the best travel time in
the environment.
The following are two extensions of the current
work. The ﬁrst extension concerns the computation
of the safe time optimal path for a disc robot rather
than a point robot. The time optimal path of a disc
robot near a point obstacle or a wall segment is given
in terms of an elliptic integral. While considered to be
a “closed form” formula, a simpler analytic expression
for the time optimal path is desired. A second exten-
sion concerns the addition of the robot’s heading, into
the time optimal navigation scheme. Under this ex-
tension the braking safety constraint becomes a func-
tion of the robot’s speed as well as the robot’s head-
ing. This extension seems to require optimal control
tools rather than calculus of variations tools. While ex-
tremely challenging, its solution will yield much more
practical safe high speed paths in environments contain-
ing narrow passages and corridors.
References
[1] GUARDIUM-UGV. G-NIUS Unmanned Ground Sys-
tems, accesssed Jan. 2014. http://g-nius.co.il.
[2] C.B. Boyer and U.C. Merzbach. A History of Mathemat-
ics. New York, Wiley, 1991.
[3] O. Brock and O. Khatib. High-speed navigation using
the global dynamic window approach. In ICRA, 1999.
[4] B. Donald, P. Xavier, J. Canny, and J. Reif. Kinody-
namic motion planning. Journal of the ACM, 1993.
[5] D. Eppstein. Finding the k shortest paths. SIAM Journal
on Computing, 1998.
[6] P. Fiorini and Z. Shiller. Motion planning in dynamic
environments using velocity obstacles. IJRR, 1998.
[7] D. Fox, W. Burgard, and S. Thrun. The dynamic win-
dow approach to collision avoidance. Robotics Automa-
tion Magazine, IEEE, 1997.
[8] T. Fraichard. A short paper about motion safety. In
ICRA, 2007.
[9] S. Karaman and E. Frazzoli. Sampling-based algorithms
for optimal motion planning. IJRR, 2011.
[10] R. Kindel et Al. Kinodynamic motion planning amidst
moving obstacles. In ICRA, 2000.
[11] S.M. Lavalle. Rapidly-exploring random trees: A new
tool for path planning. Technical report, Dept. of Com-
puter Science, Iowa State University, 1998.
[12] M. Lepetic et Al. Time optimal path planning consider-
ing acceleration limits. Robotics and Autonomous Sys-
tems, 2003.
[13] G. Manor and E. Rimon. Time optimal nav-
igation among obstacles subject to safe braking
constraint. Technical Report, accesssed Jan. 2014.
http://robots.technion.ac.il/publications.htm.
[14] J. Markoff. Google cars drive themselves, in trafﬁc. The
New York Times, October 9th 2010.
[15] R.H. Smith. Analyzing Friction in the Design of Rubber
Products and Their Paired Surfaces. CRC Press, 2008.
[16] K.C. Teixeira, M. Becker, and G.A.P. Caurin. Automatic
routing of forklift robots in warehouse applications. In
ABCM Symposium in Mechatronics, 2010.
[17] E. Velenis and P. Tsiotras. Optimal velocity proﬁle gen-
eration for given acceleration limits: theoretical analy-
sis. In American Control Conference, 2005.
[18] R. Wein, J. van den Berg, and D. Halperin. Planning
high-quality paths and corridors amidst obstacles. IJRR,
2008.
1160
