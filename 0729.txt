Hand-Eye and Robot-World Calibration by Global Polynomial
Optimization
Jan Heller
1
, Didier Henrion
2,1
, Tomas Pajdla
1
Abstract—The need to relate measurements made by a
camera to a different known coordinate system arises in
many engineering applications. Historically, it appeared for
the ﬁrst time in the connection with cameras mounted on
robotic systems. This problem is commonly known as hand-
eye calibration. In this paper, we present several formulations
of hand-eye calibration that lead to multivariate polynomial
optimization problems. We show that the method of convex
linear matrix inequality (LMI) relaxations can be used to
effectively solve these problems and to obtain globally optimal
solutions. Further, we show that the same approach can be
usedforthesimultaneoushand-eyeandrobot-worldcalibration.
Finally, we validate the proposed solutions using both synthetic
and real datasets.
I. INTRODUCTION
Let us suppose a camera has been mounted on the end-
effector—the hand—of a robotic manipulator. Further, let’s
suppose that this hand-eye robotic system has been manipu-
lated into two distinct poses, see Figure 1. Let’s denote the
transformation from the camera coordinate system in the ﬁrst
pose of the rig to the world coordinate system as A
?
1
and the
transformation from the second pose as A
?
2
. Now, we can
express the camera’s relative movement from the ﬁrst pose
to the second one as
A =

R
A
t
A
0
?
1

=

R
A
?
2
t
A
?
2
0
?
1

?1

R
A
?
1
t
A
?
1
0
?
1

= A
??1
2
A
?
1
,
where R
A
? SO(3) is a 3?3 rotation matrix and t
A
?R
3
is
a translation vector. Analogically, relative movement of the
robotic end-effector can be described as
B =

R
B
t
B
0
?
1

=

R
B
?
2
t
B
?
2
0
?
1

?1

R
B
?
1
t
B
?
1
0
?
1

= B
?
?1
2
B
?
1
,
with B
?
1
,B
?
2
? R
4?4
being the respective transformations
from the end-effector’s coordinate system to the robot base
coordinate system. Assuming we know the transformations
A and B, the problem of ﬁnding the rigid transformation
X ? R
4?4
from the coordinate system of end-effector to
the coordinate system connected with the camera can be
expressed analytically using the following kinematic loop:
AX = XB. (1)
1
Czech Technical University, Faculty of Electrical Engineering, Karlovo
n´ amˇ est´ ı13,Prague,CzechRep.,{hellej1|pajdla}@cmp.felk.cvut.cz.
2
LAAS, CNRS, 7 avenue du colonel Roche, F-31400 Toulouse, France,
henrion@laas.fr.
The authors were supported by the EC under projects FP7-ICT-288553
CloPeMa, FP7-SPACE-2012-312377 PRoViDE, and by The Technology
Agency of the Czech Republic under the project TA03010398 RoMeSy.
This work also beneﬁted from discussions with Florian Bugarin.
X
X
World
B
?
1
B
?
2
A
?
1
A
?
2
A B
Base
Z
Fig. 1: Hand-eye (X) and robot-world (Z) transformations. A
hand-eye system is depicted in two distinct poses.
All of the earliest researchers investigating this problem
realized that System 1 is underdetermined and that two poses
are not enough to uniquely determine the transformation X.
In [29], Shiu and Ahmad showed that at least two relative
motions with non-parallel rotational axes are needed. In
practice, several relative motions are executed, leading to a
set of matrices A
i
,B
i
, i = 1,...,n and to an overdetermined
and—unless we can measure A
i
,B
i
with perfect accuracy—
noisy system of equations
A
i
X = XB
i
, i = 1,...,n. (2)
System 2 can be also expressed as

R
Ai
t
Ai
0
?
1

R
X
t
X
0
?
1

=

R
X
t
X
0
?
1

R
Bi
t
Bi
0
?
1

(3)
and further decomposed into a rotational matrix equation and
translational vector equation
R
Ai
R
X
= R
X
R
Bi
, (4)
R
Ai
t
X
+t
Ai
= R
X
t
Bi
+t
X
. (5)
Notice that Equation 4 does not depend on the unknown
translation t
X
. Once rotation R
X
is known, Equation 5 leads
toasystemoflinearequationsint
X
andthetranslationcanbe
easily determined using the tools of linear algebra. This fact
has been exploited by all of the earliest solution strategies.
In [29], Shiu and Ahmad proposed the ﬁrst solution to
the hand-eye calibration problem formulated as Equation 2.
They used the angle-axis parametrization of the group of
rotations SO(3). The angle-axis parametrization was also
used in [33], [34], [25]. Chou and Kamel [7] proposed to
parametrize Equation 4 by quaternions. In [15], Horaud and
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 3157
Dornaika also used quaternions to recover R
X
as a minimizer
of the same objective function as [25].
In [6], Chen employed the screw motion theory to in-
vestigate the necessary and sufﬁcient conditions for the
solutions of Equation 2. The screw motion theory is based
on the fact that a general homogeneous transformation can
be accomplished by means of a translation along a unique
axis and a rotation about the same axis. This is known as
Chasles theorem [5] and such a description of a rigid motion
isknownasascrew.Chenconcludedthatinthecaseofnoisy
inputs the computation of R
X
and t
X
should not be decou-
pled, because otherwise the generality of the result would
be negatively affected. In [8], [9], Daniilidis and Bayro-
Corrochano showed how to parametrize Equation 2 using
the algebraic counterparts of screws—dual quaternions—
and how to solve for rotational and translational parts of X
simultaneously. Another simultaneous solution of Equation 2
was proposed by Andreff et al. in [4] using the Kronecker
product. However, their solution needs to be followed by a
orthogonalization of the rotational part R
X
.
Several researchers also proposed iterative solutions to
Equation 2. Zhuang and Shiu [37] proposed an iterative non-
linear method to minimize function
P
n
i=1
kA
i
X?XB
i
k
2
to
simultaneously estimate the rotational and translational parts
of X. As a part of [15], Horaud and Dornaika also proposed
a simultaneous iterative method based of quaternions and
Levenberg-Marquardt non-linear optimization [21]. They ob-
served that the method performed well only after introducing
two ad hoc selected scaling factors. Both methods need to be
provided with an initial solution estimates and depending on
the accuracy of the estimates may not converge to the global
optima. In [35], Zhao suggested an iterative method that is
guaranteed to converge globally optimally based on Second
Order Cone Programming. However, his iterative method
does not enforce the orthogonality of the rotation matrix and
thus suffers from the same rotational error propagation as
does the method [4]. Strobl and Hirzinger [31] suggested a
novel metric on SE(3) and an iterative method based on
a parametrization of a stochastic model. However, for their
method to perform optimally, some prior information on data
noise characteristics is needed.
In [36], Zhuang et al. extended the hand-eye calibration
problem to also include calibration of the robot-world trans-
formation Z, see Figure 1. Their method uses quaternion
rotation representation to solve an equation analogical to the
Equation 2,
A
?
i
X = ZB
?
i
, i = 1,...,m, (6)
whereZ?R
4?4
representsthetransformationfromtherobot
base coordinate system to the world coordinate system. In
this case, the kinematic loop is closed using the absolute
camera and robot poses A
?
i
,B
?
i
. Dornaika and Horaud [10]
suggested a different solution, also based on quaternions.
In [3], Li et al. proposed two different solutions based on
Kronecker product and dual quaternions, analogous to the
solutions to the hand-eye calibration problem in [4] and [9],
respectively.
Recently, several authors [28], [16], [13], [12], [27] pro-
posed hand-eye calibration methods that use image measure-
ments directly, instead of using them to compute matrices A
?
i
as a pre-step. While such an approach can indeed eliminate
the errors resulting from explicit computation of matrices
A
?
i
, it is only applicable in situations where the image
correspondences are available, which may not always be the
case.
In this paper, we propose a set of iterative methods
to solve hand-eye and robot-world calibration based on
Equations 2 and 6 that do not require initial estimates
and provide globally optimal solutions in L
2
-norm. Further,
these methods solve for the rotational and translational part
simultaneously.Thisisachievedbyformulatingthehand-eye
and robot-world calibration problems as multivariate poly-
nomial optimization problems over semialgebraic sets and
by solving them using the method of convex linear matrix
inequality (LMI) relaxations [17]. Besides providing global
optimizers, one of the main advantages of LMI relaxations
method is the fact that it naturally handles algebraic as well
as semialgebraic constraints that are inherent to the most
rotation parametrizations.
First, we review the method of convex LMI relaxations.
Next, we formulate a set of hand-eye and robot-world
calibration polynomial optimization problems. Finally in
the experimental section, we provide a few implementation
details and show the performance of the proposed solution
using both synthetic and real data calibration scenarios.
II. CONVEX LMI RELAXATIONS
Let p
i
(x), i = 0,1,...,? be scalar multivariate polyno-
mials in x = (x
1
,x
2
,...,x
m
)
?
? R
m
, i.e., p
i
(x) ? R[x].
Formally, the problem of multivariate polynomial optimiza-
tion can be stated as follows:
Problem 1: (Multivariate polynomial optimization)
minimize p
0
(x)
subject to p
i
(x)≥ 0, i = 1,...,?,
where x = (x
1
,x
2
,...,x
m
)
?
?R
m
,
p
0
(x),p
i
(x)?R[x].
Typically, this is a non-convex problem with many local
minima. In theory, polynomial optimization problems can
be handled using tools of elementary calculus, however,
ﬁnding the global minimizer x
?
is—in general—an NP-hard
problem [23]. In [17], Lasserre cast the problem polynomial
optimization over ﬁnite-dimensional semialgebraic set S =
{x?R
m
|p
i
(x)≥ 0,i = 1,...,?} as the problem of linear
optimization over the inﬁnite-dimensional set of probability
measures supported on S. In [26], Putinar proved that
such probability measures can be represented via sequences
y = (y
?
)
??N
of its moments. Using this result, Lasserre
showed that by truncating these sequences one can construct
a hierarchy of convex relaxations P
1
,P
2
,... that produces
a monotonically non-decreasing sequence of lower bounds
on Problem 1 that converge to the global minimum. He also
showed, that the series of the respective global optimizers
3158
x
?
1
,x
?
2
,... of problemsP
1
,P
2
,... asymptotically converges
to x
?
, lim
i?∞
x
?
i
= x
?
, and that under mild conditions
global optimality of a relaxation can be detected and the
global minimizers can be extracted by linear algebra from
thesolutionsoftherelaxation.Practically, (x
?
i
)
i?N
converges
to x
?
in ﬁnitely many steps, i.e., there exists j ? N, such
thatx
?
j
=x
?
.Problemsforwhichtheﬁniteconvergencedoes
not occur are in some sense degenerate and exceptional [24].
ThehierarchyP
1
,P
2
,... issometimesalsocalledLasserre’s
LMI hierarchy.
Now, we will show how to formulate the relaxations
P
1
,P
2
,... as semideﬁnite programs (SDP) solvable by any
convenient SDP solver. In order to do that, let us deﬁne
the linearization operator L
y
: R[x] ? R[y] (also called
Riesz functional) which takes a polynomial p(x) and sub-
stitutes a new variable y
k1k2...km
? R for every monomial
x
k1
1
x
k2
2
...x
km
m
. First, The LMI relaxation P
?
of order ?
is built by linearizing all monomials x
k1
1
x
k2
2
...x
km
m
of the
objective function p
0
up to degree 2?, i.e., k
1
+k
2
+··· +
k
m
≤ 2?. If the objective function contains monomials of a
higher degree, one has to start with a relaxation of a higher
order. Next, let v
?
(x) be the vector of all monomials up to
degree ?. The semialgebraic set S is relaxed by introduc-
ing ? LMI constraints L
y
(p
i
(x)v
??1
(x)v
??1
(x)
?
)  0
1
.
Finally, we add the so-called LMI moment matrix constraint
L
y
(v
?
(x)v
?
(x)
?
) 0. Formally, the LMI relaxation P
?
of
order ? can be written as
Problem 2: (the LMI relaxation P
?
of order ?)
minimize L
y
(p
0
(x))
subject to L
y
(p
i
(x)v
??1
(x)v
??1
(x)
?
 0, i = 1,...,?,
L
y
(v
?
(x)v
?
(x)
?
) 0.
Since there are exactly d =
 
m+2?
m

monomials in x ?R
m
up to degree 2?, SDP Problem 2 will have y ? R
d
linear
variables. See [17] for the technical justiﬁcation of this
procedure.
III. HAND-EYE CALIBRATION
In this section, three formulation of the hand-eye calibra-
tionproblemarepresented.Intheﬁrsttwo,weformulatetwo
parametrizations of of the following minimization problem:
min
X?SE(3)
n
X
i=1
kA
i
X?XB
i
k
2
,
i.e., the minimization the Frobenius norm
kMk =
q
P
m
i=1
P
n
j=1
|m
ij
|
2
=
q
tr(M
?
M)
on the special Euclidean group
SE(3) =

R t
0
?
1




R? SO(3),t?R
3

.
The third formulation uses the dual quaternion parametriza-
tion to minimize the vector L
2
-norm
min
˜ qX
n
X
i=1


ˆ a
i
? ˆ q
X
? ˆ q
X
?
ˆ
b
i



2
,
1
Notation “M0” stands for “M is positive semideﬁnite matrix”.
where ˆ a
i
,
ˆ
b
i
,ˆ q
X
are the dual quaternion representations of
A
i
,B
i
, and X, respectively, and ? is the dual quaternion
multiplication.
All three formulations lead to the multivariate polynomial
optimization problems. However, for the sake of brevity we
will not cite the explicit form of the polynomials. The fact
that these formulations are indeed polynomial can be easily
checked by any tool for symbolic algebra computation.
A. Orthonormal parametrization
As is the case with all linear maps on ﬁnite-dimensional
vector spaces, a rotation can be always expressed by a matrix
R,inthiscaseofsize 3?3.Sincearotationmapsorthonormal
basis of R
3
to another orthonormal basis, the columns
u,v,w ?R
3
of the matrix R = (u,v,w) themselves must
form an orthonormal basis. The fact that the columns of R
form a orthonormal basis can be also written as
v
?
v = 1, u
?
u = 1,
v
?
u = 0, v?u =w.
Thisconstitutes6constraintsontheelementsofthematrixR,
leaving it with 3 degrees of freedom. Using these constraints,
we can parametrize the homogeneous transformation X as
X(u,v,t) =

R(u,v) t
0
?
1

,
where R(u,v) = (u,v,u?v). This leads to the following
parametrization of the hand-eye calibration problem:
Problem 3: (uvhec method)
minimize f
1
(u
X
,v
X
,t
X
) =
P
n
i=1
kA
i
X(u
X
,v
X
,t
X
)?X(u
X
,v
X
,t
X
)B
i
k
2
subject to u
?
X
u
X
= 1,v
?
X
v
X
= 1,u
?
X
v
X
= 0.
The objective function f
1
of Problem 3 is a polynomial
function of degree 4 and it is composed of 123 monomials
in 9 variables.
B. Quaternion parametrization
Quaternions, Q, form a four-dimensional associative
normed division algebra over the real numbers. A quaternion
q ? Q consist of a real part and an imaginary part and is
usually denoted as
q = q
1
+q
2
i+q
3
j+q
4
k,
where i,j,k are the imaginary units such that i
2
= j
2
=
k
2
= ijk = ?1. As a set, quaternions are equal to R
4
and
it is sometimes useful to write them as vectors
q? (q
1
,q
2
,q
3
,q
4
)
?
=
 
q
1
,¯ q
?

?
,
where ¯ q ? R
3
is the imaginary part of the quaternion.
Addition of two quaternions p,q ? Q, p =
 
p
1
, ¯ p
?

?
,
q =
 
q
1
,¯ q
?

?
is equivalent to addition in R
4
. Quaternion
multiplication, however, does not have a counterpart opera-
tion on vector spaces:
p?q = (p
1
q
1
? ¯ p
?
¯ q,(p
1
¯ q+q
1
¯ p+ ¯ p? ¯ q)
?
)
?
.
3159
Because the group of unit quaternions with multiplication,
modulo the multiplication by?1, is isomorphic to the group
of rotations with composition, they can be used to represent
rotations. Rotation about axis? = (?
1
,?
2
,?
3
)
?
, ||?|| = 1,
by angle ? is represented by q?Q as
q = cos
?
2
+(?
1
i+?
2
j+?
3
k)sin
?
2
.
The unity of a quaternion can be expressed using the
quaternion conjugate q
?
=
 
q
1
,?¯ q
?

?
as q
?
?q = 1 or
using the inner product as q
?
q = 1. Transformation X can
be parametrized using the unit quaternionq = (q
1
,q
2
,q
3
,q
4
)
as
X(q,t) =

R(q) t
0
?
1

,
where
R(q) =
?
?
q
2
1
+q
2
2
?q
2
3
?2q
2
4
2q2q3?2q4q1 2q2q4+2q3q1
2q2q3+2q4q1 q
2
1
?q
2
2
+q
2
3
?q
2
4
2q3q4?2q2q1
2q2q4?2q3q1 2q3q4+2q2q1 q
2
1
?q
2
2
?q
2
3
+2q
2
4
?
?
is the quaternion parametrization of a rotation matrix. This
leads to the following parametrization of the hand-eye cali-
bration problem:
Problem 4: (qhec method)
minimize f
2
(q
X
,t
X
) =
P
n
i=1
kA
i
X(q
X
,t
X
)?X(q
X
,t
X
)B
i
k
2
subject to q
?
X
q
X
= 1,
q
X1
≥ 0.
The objective function f
2
of Problem 4 is a polynomial
function of degree 4 and it is composed of 85 monomials
in 7 variables. Since the unit quaternions are a double
cover of SO(3), function f
2
has at least two global optima
f
2
(q
?
X
,t
?
X
) = f
2
(?q
?
X
,t
?
X
). To help the SDP solver, we
add the semialgebraic constraint q
X1
≥ 0 to Problem 4 to
eliminate one of the global optima in the majority of cases,
that is when q
?
X1
6= 0. The algebraic constraint q
?
X
q
X
= 1
enforces the unity of the resulting quaternion.
C. Dual Quaternion parametrization
Dual quaternions are the algebraic counterparts of screws.
They form a Clifford algebra; a dual quaternion ˆ q?H can
be represented in the form
ˆ q =q+?q
?
,
whereq,q
?
?Qand?isthedualunit,?? = 0,thatcommutes
with every element of the algebra. It is also convenient to
write dual quaternions as vectors (q
?
,q
??
)
?
, since the set
of dual quaternions is equal to R
8
. Addition of two dual
quaternions ˆ p,ˆ q?H, ˆ p =
 
p
?
,p
??

?
, ˆ q =
 
q
?
,q
??

?
is
equivalent to addition inR
8
. Multiplication can be expressed
using quaternion multiplication as
ˆ p? ˆ q = ((p?q)
?
,(p?q
?
+p
?
?q)
?
)
?
.
Similar to the way rotations inR
3
can be represented by the
quaternions of unit length, rigid motions in R
3
can be rep-
resented by unit dual quaternions [22]: rotation represented
by a quaternion p ? Q followed by translation t ? R
3
is
represented by the dual quaternion
ˆ q(p,t) = (p
?
,((0,
1
2
t
?
)
?
?p)
?
)
?
.
Unity of a dual quaternion ˆ q can be expressed using its
conjugate ˆ q
?
= (q
??
,q
??
?
)
?
as ˆ q
?
? ˆ q = 1 or using
the quaternion parts as
q
?
q = 1 and q
1
q
5
+q
2
q
6
+q
3
q
7
+q
4
q
8
= 0.
Let ˆ a
i
,
ˆ
b
i
be the dual quaternion representation of trans-
formations A
i
, B
i
, respectively. Since Equation 2 can be
expressed using dual quaternions multiplications as
ˆ a
i
? ˆ q
X
= ˆ q
X
?
ˆ
b
i
, (7)
where ˆ q
X
is the dual quaternion representation of the trans-
formation X, we can recover X using the following formula-
tion:
Problem 5: (dqhec method)
minimize f
3
(ˆ q
X
) =
P
n
i=1


ˆ a
i
? ˆ q
X
? ˆ q
X
?
ˆ
b
i



2
subject to q
?
X
q
X
= 1,
q
X1
q
X5
+q
X2
q
X6
+q
X3
q
X7
+q
X4
q
X8
= 0.
q
X1
≥ 0.
The objective function f
3
of Problem 5 is a polynomial
function of degree 4 and it is composed of 177 monomials
in 8 variables. Again, additional constraint q
X1
≥ 0 is added
to eliminate one of the two global optima in most of the
cases. Since we are using dual quaternions directly, we have
to take care of the orientation ambiguity of the rotational
quaternions a
i
,b
i
when converting matrices A
i
, B
i
into dual
quaternions ˆ a
i
,
ˆ
b
i
. This is due to the fact that even though
quaternionsa
i
,?a
i
andb
i
,?b
i
represent the same rotation,
the sign matters when Equation 2 is expressed using dual
quaternions, i.e.,
ˆ a
i
(a
i
,t
Ai
)? ˆ q
X
? ˆ q
X
?
ˆ
b
i
(b
i
,t
Bi
)6=
ˆ a
i
(?a
i
,t
Ai
)? ˆ q
X
? ˆ q
X
?
ˆ
b
i
(b
i
,t
Bi
).
To check the “compatibility” of the quaternions a
i
and b
i
,
the screw congruence theorem [6] can be used. It provides
a necessary condition for the solution of Equation 7:
ˆ a
i
? ˆ q
X
= ˆ q
X
?
ˆ
b
i
? (a
1
,a
?
1
)
?
= (b
1
,b
?
1
)
?
.
Dual quaternions were ﬁrst applied to the hand-eye calibra-
tion problem by Daniilidis and Bayro-Corrochano in [8],
[9]. Their method, however, does not make use of all of
the information in the camera and robot motions. Since the
method assumes that (a
1
,a
?
1
)
?
= (b
1
,b
?
1
)
?
, it only uses the
imaginary parts ¯ a
i
, ¯ a
?
i
,
¯
b
i
,
¯
b
?
i
. In [20], Malti and Barreto
proposed a method based on dual quaternions that uses also
the real components, however their solution does not solve
for rotation and translation simultaneously.
3160
IV. SIMULTANEOUS HAND-EYE AND ROBOT-WORLD
CALIBRATION
Due to the apparent similarity of Equations 2 and 6,
analogies to Problems 3, 4, and 5 can be formulated for the
simultaneous hand-eye and robot-world calibration problem.
A. Orthonormal parametrization
Problem 6 is based on orthonormal parametrization of
Equation 6. The objective function f
4
is a polynomial
function of degree 4 and it is composed of 280 monomials
in 18 variables.
Problem 6: (uvherwc method)
minimize f
4
(u
X
,v
X
,t
X
,u
Z
,v
Z
,t
Z
) =
P
m
i=1
kA
?
i
X(u
X
,v
X
,t
X
)?Z(u
Z
,v
Z
,t
Z
)B
?
i
k
2
subject to u
?
X
u
X
= 1,v
?
X
v
X
= 1,u
?
X
v
X
= 0,
u
?
Z
u
Z
= 1,v
?
Z
v
Z
= 1,u
?
Z
v
Z
= 0.
B. Quaternion parametrization
Problem7isbasedonquaternionparametrizationofEqua-
tion 6. The objective function f
5
is a polynomial function of
degree 4 and is composed of 209 monomials in 14 variables.
Problem 7: (qherwc method)
minimize f
5
(q
X
,t
X
,q
Z
,t
Z
) =
P
m
i=1
kA
?
i
X(q
X
,t
X
)?Z(q
Z
,t
Z
)B
?
i
k
2
subject to q
?
X
q
X
= 1, q
X1
≥ 0,
q
?
Z
q
Z
= 1, q
Z1
≥ 0.
C. Dual Quaternion parametrization
Problem8isbasedonquaternionparametrizationofEqua-
tion 6. The objective function f
6
is a polynomial function
of degree 2 and it is composed of 112 monomials in 16
variables.
Problem 8: (dqherwc method)
minimize f
6
(ˆ q
X
) =
P
m
i=1


ˆ a
?
i
? ˆ q
X
? ˆ q
Z
?
ˆ
b
?
i



2
subject to q
?
X
q
X
= 1, q
X1
≥ 0,q
?
Z
q
Z
= 1, q
Z1
≥ 0,
q
X1
q
X5
+q
X2
q
X6
+q
X3
q
X7
+q
X4
q
X8
= 0,
q
Z1
q
Z5
+q
Z2
q
Z6
+q
Z3
q
Z7
+q
Z4
q
Z8
= 0.
As is the case of Problem 5, we need to take care of the
orientation ambiguity of the rotational quaternions a
i
,b
i
.
This time however, the screw congruence theorem does not
apply. The obvious solution it to try all of the 2
m
sign
combinations and keep the combination with the smallest
valueoff
6
(ˆ q
?
X
).RunningtheSDPoptimization 2
m
timescan
be quite computationally expensive, so in our experiments
we use the dual quaternion method of Li [3]—which needs
to be run 2
m
times in practice as well, since it suffers from
the same quaternion ambiguity problem—to recover the sign
combination before running the SDP solver, because it runs
faster. The sign problem is also inherent to the method of
Dornaika [10].
V. EXPERIMENTS
In this section we present both synthetic and real data
experiments to validate the proposed calibration methods.
For the real data experiment we used a Motoman MA1400
serial 6-DOF manipulator with an Asus Xtion Pro sensor
rigidly attached to it. The Xtion Pro sensor was equipped
with a camera with the resolution of 640?480 pixels. We
simulated the same setup in the synthetic experiment in order
to better judge the result of the experiment with real data.
A. Implementation
We implemented all 6 calibration methods in MATLAB
using GloptiPoly [14], an interface that automatically con-
structs LMI relaxations of polynomial problems and converts
them into a format understandable by the SDP solver Se-
DuMi [32]. Further, GloptiPoly can also recover the solution
to the original polynomial problem and certify its optimality.
Using YALMIP toolbox [19], the SeDuMi format can be
further converted into the input formats of several other SDP
solvers. In our experiments, we used the LMI relaxations of
the second order and SeDuMi 1.3 and MOSEK [1] 7.0 as
SDP solvers. GloptiPoly certiﬁed that global optimum has
been reached by all the methods for all the problem instances
encountered during the experiments. The following table
sums up the relevant information on the proposed methods:
Method
Variables
Degree
Monomials
Moments
Time
1
(s)
Time
2
(s)
uvhec 9 4 124 715 1.45 0.45
qhec 7 4 85 330 0.48 0.29
dqhec 8 4 177 495 0.99 0.46
uvherwc 18 4 280 7315 953.76 60.89
qherwc 14 4 209 3060 68.38 7.91
dqherwc 16 2 112 4845 309.25 16.85
1
SeDuMi,
2
MOSEK
To obtain the timings, we used a 3.5GHz Intel Core i7 based
desktop computer running 64-bit Linux. The presented times
include time spent in the SDP solver as well as GloptiPoly
and YALMIP overheads. To gauge the sizes of the SDP
problems involved, the column “Moments” speciﬁes the
number of moments (dimension of vectory in Problem 2) in
the second order LMI relaxation for the respective method.
Note, that even though the objective functions f
i
depend on
n or m, i.e., on the number of relative motions or poses, the
number of monomials does not. This means that the sizes
of the LMI relaxations and the sizes of the resulting SDP
problems also do not depend on n or m and are constant.
As a pre-step to all of the methods, we scale the trans-
lations t
Ai
,t
Bi
by the factor of ? = max
i
{kt
Ai
k,kt
Bi
k},
so that the length of the longest translation is 1. This helps
with the convergence of the SDP solver and removes the
inﬂuence of the chosen physical units on the accuracy of
the result. In cases where t
X
and t
Z
are explicitly opti-
mized, we add one or two more constraints t
?
X
t
X
≤ 2,
3161
0 0.5 1 1.5 2 2.5 3
0
0.5
1
1.5
of Gaussiannoiseinpixels
MeanvalueofE
?
(X) [mm]
+
+
+
+
+
+
+
+
+
+
+
+
+
*
*
*
*
*
*
*
*
*
* *
*
*
|
|
|
|
|
|
|
|
|
|
|
|
|
Park94
Dan98
uvhec
qhec
dqhec
+
*
|
?
?
?
?
? ?
?
?
?
?
?
?
?
?
?
o
o
o
o
o
o
o
o
o
o
o
o
o
o
(a)
0 0.5 1 1.5 2 2.5 3
0
0.1
0.2
0.3
0.4
0.5
0.6
0.7
ofGaussiannoiseinpixels
Meanvalueof E(X,Z) [mm]
+
+
+
+
+
+
+
+
+
+
+
+
+
*
*
*
*
*
*
*
*
*
*
*
*
*
|
|
|
|
|
|
|
|
|
|
|
|
|
Dorn98
Li10
uvherwc
qherwc
dqherwc
+
*
|
?
?
?
?
?
?
?
?
?
?
?
?
?
?
?
o
o
o
o
o
o
o
o
o
o
o
o
o
o
(b)
0 0.05 0.1 0.15 0.2 0.25
0
1
2
3
4
5
6
7
8
of Gaussiannoiseindegrees
Meanvalue ofE
?
(X) [mm]
+
+
+
+
+
+
+
+
+
+ +
*
*
*
*
*
*
*
*
*
* *
|
|
|
|
|
|
|
|
|
| |
Park94
Dan98
uvhec
qhec
dqhec
+
*
|
?
?
? ?
?
?
?
?
?
?
?
?
?
o
o o
o
o
o
o
o
o
o
o
o
(c)
0 0.05 0.1 0.15 0.2 0.25
0
0.5
1
1.5
2
2.5
3
3.5
4
ofGaussiannoiseindegrees
Mean valueof E(X,Z) [mm]
+
+
+
+
+
+
+
+
+
+
+
*
*
*
*
*
*
*
*
*
*
*
|
|
|
|
|
|
|
|
|
|
|
Dorn98
Li10
uvherwc
qherwc
dqherwc
+
*
|
?
?
?
?
?
?
?
?
?
?
?
?
?
o
o
o
o
o
o
o
o
o
o
o
o
(d)
Fig. 2: Synthetic data experiment results. (a–b) Image noise experiment. (c–d) Joint noise experiment.
t
?
Z
t
Z
≤ 10. These constraints result from the way our
experiments were constructed and are not technically nec-
essary, however, they help the SDP solvers to further speed-
up the converge. In the experiments, we set the SeDuMi
parameter eps = 10
?20
and the MOSEK parameters
MSK DPAR INTPNT CO TOL {P|D}FEAS=10
?20
.
The source code as well as examples are available at
http://cmp.felk.cvut.cz/?hellej1/mpherwc/.
B. Synthetic Experiments
In the synthetic experiments, we investigated the inﬂuence
of both image and joint noises on the calibration accuracy.
We placed a virtual planar calibration target consisting of a
grid of 16?16 known points in front of a simulated MA1400
serial manipulator. The distance between the points was set
to 12.5 mm in each direction, making the calibration target
200?200mm in size.
To create a calibration task, we started with 9 camera
poses A
?
i
randomly generated onto half-sphere of radius of
? 30mm oriented as to face approximately the center of
the calibration target. To simulate the typical situation when
the camera faces approximately the same direction as the
robot’s end effector, a hand-eye rotation R
X
was randomly
generated so that the rotation corresponded to identity to a
up to 5
?
degrees difference in each axis. The translation t
X
was randomly generated to move the camera up to?200mm
away from end effector. The arm poses B
?
i
were computed
using the camera poses and the hand-eye transformation as
X
?1
A
?
i
. Finally, we generated a robot-world transformation
Z using a random rotation and a random translation up to
? 2000mm in length and used Z to transform the grid
(a) (b)
Fig. 3: Real data experiment setup. (a) Detail of the Xtion
Prosensorandtherobot’sendeffector.(b)Examplesofinput
images.
points from the robot into the world coordinate system.
We generated 10 sets of 9 camera positions, 10 hand-eye
transformations and 1 robot-world transformation and com-
bined them into 100 calibration tasks. For every calibration
task, we also computed all possible relative movements A
i
,
B
i
, i = 1,...,36 to be used by the hand-eye calibration
methods. In order to better judge the accuracy the proposed
methods, we implemented several hand-eye and robot-world
calibration methods to compare them against: Park94 [25]
and Dan98 [9], as representatives of hand-eye calibration
methods, and Dorn98 [10] and Li10, the dual quaternion
variant of [3], as representatives of simultaneous hand-eye
and robot-world calibration methods.
Image Noise Experiment: To simulate the inﬂuence of
image noise, we projected the calibration points into 640?
480 pixel images using the generated camera poses A
?
i
and
corrupted the image projections u
ij
in each calibration task
3162
with Gaussian noise in 13 noise levels, ? ? h0,3i px in
1
/4px steps. Finally, we recovered noised camera poses A
?
i
using EPnP algorithm [18].
In order to evaluate the performance of the hand-eye
and robot-world calibration methods uvherwc, qherwc, and
dqherwc, we have sampled the virtual workspace of the
robot—a cube of size 70?70?70 cm around the calibration
target—with uniformly distributed ? = 9240 points Y
j
.
Using these points, measured in the robot coordinate frame,
we deﬁned a calibration error measure E(X,Z) that expresses
the error of the calibration as the difference of the positions
the workspace points transformed into the camera coordinate
frame using the computed transformations X, Z and the
ground truth transformations X
gt
, Z
gt
. Formally,
E(X,Z) =
1
9?
P
9
i=1
P
?
j=1


XB
?
?1
i
Z
?1
Z
gt
Y
j
?X
gt
B
?
?1
i
Y
j


.
To evaluate the performance of the hand-eye calibration
methodsuvhec,qhec,anddqhec,wedonothavetotransform
the points Y
j
into the world coordinate frame ﬁrst, so we
deﬁned a slightly simpler 3D error function
E
?
(X) =
1
36?
P
36
i=1
P
?
j=1


XB
?
?1
i
Y
j
?X
gt
B
?
?1
i
Y
j


.
Figure 2(a) shows the mean of the values E
?
(X) for all
100 calibration tasks for different methods and image noise
levels. It shows the best performance by the method dqhec
followed by Dan98 and ﬁnally by Park94, uvhec, and qhec,
all with the same performance level. In this experiment, we
used SeDuMi as the SDP solver.
Figure 2(b) shows the same statistics for the values
of E(X,Z) and suggest quite comparable performance of
methods Dorn98, uvhewrc, and qhewbc. This time, the dual
quaternion formulations Li10 and dqherwc performed worse
that the other methods. In this experiment, we used MOSEK
as the SDP solver. This resulted in much faster convergence
times, but also in slightly worse accuracy for the lower noise
levels.
Joint Noise Experiment: In this experiment, we simulated
the performance in the presence of joint noise. We started
with the same 100 calibration tasks as in the case of the
image noise experiment. Further, we recovered the joint co-
ordinates [30] of the virtual MA1400 manipulator for every
pose B
?
i
with respect to the Denavit–Hartenberg convention.
Next,wecorruptedthejoint coordinatesbyrandomoffsets—
we used the same offsets for the joint coordinates of the
same task—in 11 noise levels, ? ?h0,0.25ideg in steps of
0.025 degrees. Finally, we recovered noised poses B
?
i
using
the forward kinematics. To further simulate the real world
conditions, we corrupted projections u
ij
by image noise
of ? = 0.5px for every joint noise level. We evaluated
the performance using the same error measures E(X,Z) and
E
?
(X).
Figures 2(c) and 2(d) show the mean of the values E
?
(X)
and E
?
(X,Z). Again, the method qhec outperforms its com-
petitors,whereasthedualquaternionformulationsloseonthe
restinthesimultaneoushand-eyeandrobot-worldcalibration
experiment.
0
1
2
3
4
Park94
Dan98
uvhec
qhec
dqhec
Reprojection error [px]
(a)
0
1
2
3
4
Park94
Dan98
uvhec
qhec
dqhec
Reprojection error [px]
(b)
0
0.5
1
1.5
2
2.5
Dorn98
Li10
uvhewbc
qhewbc
dqhewbc
Reprojection error [px]
(c)
0
0.5
1
1.5
2
2.5
Dorn98
Li10
uvhewbc
qhewbc
dqhewbc
Reprojection error [px]
(d)
Fig. 4: Real data experiment resuts. (a) Reprojection errors
e
?
ij
of the calibration image set (b) Reprojection errors e
?
ij
of the validation image set. (a) Reprojection errors e
ij
of
the calibration image set (b) Reprojection errors e
ij
of the
validation image set. (the red line marks the median, the
edges of the box are the 25th and 75th percentiles)
C. Real Data Experiment
For this experiment, we used a real MA1400 serial ma-
nipulator with a Xtion Pro sensor attached to its 5th link, see
Figure 3(a). We manipulated the robotic arm into 10 posesB
?
i
and acquired a calibration image set consisting of the same
number of images of a 30?30 points calibration grid. The
grid was placed ? 1m in front of and ? 0.5m above the
base of the robotic arm. The point spacing of the calibration
grid was 24mm. We also acquired a validation image set
consisting of 3 images. See Figure 3(b) for example images
from the calibration sequences. Next, we used OpenCV [2]
library to obtain the internal calibration matrix K [11] of the
sensor as well as the camera poses A
?
i
, i = 1,...,13.
Since there was no ground truth information available, we
had to use a performance measure different from E(X,Z)
and E
?
(X) used in the synthetic data experiments. Suppose,
that a function P(Y,A
?
i
,K) projects calibration grid points
Y
j
?R
3
, j = 1,...,900 in the world coordinate frame into
the i-th image taken by a camera described by its pose A
?
i
and internal camera calibration matrix K. The reprojection
error of the point Y
j
is deﬁned as e
ij
(u
i
,Y
j
,A
?
i
,K) =
ku
ij
?P(Y
j
,A
?
i
,K)k, where u
ij
are the pixel coordinates
of the point Y
j
in the i-th image. In case a calibration
method recovers both X and Z, we can judge the quality
of the calibration by expressing the reprojection error as
e
ij
(u
i
,Y
j
,ZB
i
X
?1
,K). However, in case only transformation
3163
X is recovered, the camera pose A
?
i
can be expressed only
with the help of an additional pose A
?
i
= A
?
k
XB
??1
k
B
?
i
X
?1
and we have to deﬁne modiﬁed reprojection error e
?
ij
=
1
m?1
P
m
k=1,k6=i
e
ij
(u
ij
,Y
j
,A
?
k
XB
??1
k
B
?
i
X
?1
,K).
Figure 4(a) shows the statistics of the modiﬁed reprojec-
tion errors e
?
ij
computed from the calibration image set cre-
ated by the MATLAB functionboxplot for methods Park94,
Dan99, uvhec, qhec, and dqhec. Figure 4(b) shows the same
statistics,thistimeforthevalidationimageset.Asisthecase
ofsyntheticsdataexperiments,dqhecslightlyoutperformsits
competitors. Figures 4(c,d) show the reprojection errors e
ij
computed for the methods Dorn98, Li10, uvherwc, qherwc,
and dqherwc for the calibration and validation image sets,
respectively.
VI. CONCLUSION
In this paper, we showed that the method of convex
LMI relaxations can be naturally applied to the hand-eye
and robot-world calibration problems. We presented three
hand-eye and three hand-eye and robot-world calibration
parametrizations and by applying the method of convex LMI
relaxations we obtained globally optimal solutions. These
formulations provide a new insight into the behavior and
complexity of the original problems. The qhec parametriza-
tion showed the best performance overall. Methods uvherwc
and qherwc do not necessarily provide more accurate results
than the previously proposed methods, however, since they
do not suffer from the quaternion sign ambiguity, the running
time is constant and not exponential in the number of poses.
REFERENCES
[1] Mosek: large scale optimization software. www.mosek.com.
[2] Open source computer vision library. www.opencv.org.
[3] Lin Wang Aiguo Li and Defeng Wu. Simultaneous robot-world and
hand-eye calibration using dual-quaternions and kronecker product.
International Journal of the Physical Sciences, Vol. 5(10):pp. 1530–
1536, September 2010.
[4] Nicolas Andreff, Radu Horaud, and Bernard Espiau. On-line hand-eye
calibration. In 3-D Digital Imaging and Modeling, 1999. Proceedings.
Second International Conference on, pages 430–436. IEEE, 1999.
[5] Michel Chasles. Note sur les propri´ et´ es g´ en´ erales du syst` eme de
deux corps semblables entre eux, plac´ es d’une mani` ere quelconque
dans l’espace; et sur le d´ eplacement ﬁni, ou inﬁniment petit d’un
corps solide libre. Bulletin des Sciences Math´ ematiques de F´ erussac,
XIV:321–326, 1831.
[6] Homer H Chen. A screw motion approach to uniqueness analysis of
head-eye geometry. In CVPR, pages 145–151. IEEE, 1991.
[7] Jack C. K. Chou and M. Kamel. Finding the position and orientation
of a sensor on a robot manipulator using quaternions. International
Journal of Robotics Research, 10(3):240–254, 1991.
[8] K. Daniilidis and E. Bayro-Corrochano. The dual quaternion approach
to hand-eye calibration. In ICPR ’96, Volume I, page 318, Washington,
DC, USA, 1996. IEEE Computer Society.
[9] Konstantinos Daniilidis. Hand-eye calibration using dual quaternions.
International Journal of Robotics Research, 18:286–298, 1998.
[10] Fadi Dornaika and Radu Horaud. Simultaneous robot-world and hand-
eye calibration. IEEE Transactions on Robotics and Automation,
14:617–622, 1998.
[11] R. I. Hartley and A. Zisserman. Multiple View Geometry in Computer
Vision. Cambridge University Press, 2
nd
edition, 2004.
[12] Jan Heller, Michal Havlena, and Tomas Pajdla. A branch-and-bound
algorithm for globally optimal hand-eye calibration. In CVPR, 2012.
[13] Jan Heller, Michal Havlena, Akihiro Sugimoto, and Tom´ aˇ s Pajdla.
Structure-from-motion based hand-eye calibration usingl∞ minimiza-
tion. In CVPR, 2011.
[14] DidierHenrion,Jean-BernardLasserre,andJohanL¨ ofberg. Gloptipoly
3:moments,optimizationandsemideﬁniteprogramming. Optimization
Methods & Software, 24(4-5):761–779, 2009.
[15] Radu Horaud and Fadi Dornaika. Hand-eye calibration. The Interna-
tional Journal of Robotics Research, 14(3):195–210, 1995.
[16] Sin-Jung Kim, Mun-Ho Jeong, Joong-Jae Lee, Ji-Yong Lee, Kang-
Geon Kim, Bum-Jae You, and Sang-Rok Oh. Robot head-eye
calibration using the minimum variance method. In ROBIO, 2010.
[17] Jean B. Lasserre. Global optimization with polynomials and the
problem of moments. SIAM Journal on Optimization, 11:796–817,
2001.
[18] Vincent Lepetit, Francesc Moreno-Noguer, and Pascal Fua. Epnp: An
accurate o (n) solution to the pnp problem. International Journal of
Computer Vision, 81(2):155–166, 2009.
[19] J. L¨ ofberg. YALMIP: A toolbox for modeling and optimization in
MATLAB. In Proceedings of the CACSD, Taipei, Taiwan, 2004.
[20] Abed Malti and Joao P Barreto. Robust hand-eye calibration for
computer aided medical endoscopy. IEEE International Conference
on Robotics and Automation (ICRA), 5543–5549, 2010.
[21] Donald W Marquardt. An algorithm for least-squares estimation of
nonlinear parameters. Journal of the Society for Industrial & Applied
Mathematics, 11(2):431–441, 1963.
[22] J Michael McCarthy. Introduction to theoretical kinematics. MIT
press, 1990.
[23] Katta G Murty and Santosh N Kabadi. Some NP-complete problems
in quadratic and nonlinear programming. Mathematical programming,
39(2):117–129, 1987.
[24] J. Nie. Optimality conditions and ﬁnite convergence of Lasserre’s
hierarchy. arXiv:1206.0319 June 2012. To appear in Mathematical
Programming
[25] F.C. Park and B.J. Martin. Robot sensor calibration: solving AX=XB
on the euclidean group. IEEE Transactions on Robotics and Automa-
tion, 10(5):717 –721, October 1994.
[26] Mihai Putinar. Positive polynomials on compact semi-algebraic sets.
Indiana University Mathematics Journal, 42(3):969–984, 1993.
[27] Thomas Ruland, Tomas Pajdla, and Lars Kruger. Globally optimal
hand-eye calibration. In CVPR, 2012.
[28] Yongduek Seo, Young-Ju Choi, and Sang Wook Lee. A branch-and-
bound algorithm for globally optimal calibration of a camera-and-
rotation-sensor system. In IEEE 12th International Conference on
Computer Vision, pages 1173 –1178, sept. 2009.
[29] Y.C. Shiu and S. Ahmad. Calibration of wrist-mounted robotic sensors
by solving homogeneous transform equations of the form AX=XB.
IEEE Transactions on Robotics and Automation, 1989.
[30] Bruno Siciliano and Oussama Khatib. Springer handbook of robotics.
Springer, 2008.
[31] K. H. Strobl and G. Hirzinger. Optimal Hand-Eye Calibration. In
Proceedings of the IEEE/RSJ International Conference on Intelligent
Robots and Systems, pages 4647–4653, Beijing, China, October 2006.
[32] J.F. Sturm. Using SeDuMi 1.02, a MATLAB toolbox for optimization
over symmetric cones. Optimization Methods and Software, 1999.
[33] R.Y. Tsai and R.K. Lenz. A new technique for fully autonomous
and efﬁcient 3d robotics hand/eye calibration. IEEE Transactions on
Robotics and Automation, 5(3):345 –358, June 1989.
[34] C.C. Wang. Extrinsic calibration of a vision sensor mounted on a
robot. Robotics and Automation, IEEE Transactions on, 1992.
[35] Zijian Zhao. Hand-eye calibration using convex optimization. In IEEE
International Conference on Robotics and Automation (ICRA), pages
2947–2952, 2011.
[36] Hanqi Zhuang, Z.S. Roth, and R. Sudhakar. Simultaneous robot/world
and tool/ﬂange calibration by solving homogeneous transformation
equations of the form AX = YB. IEEE Transactions on Robotics
and Automation, 10(4):549 –554, aug 1994.
[37] Hanqi Zhuang and Yiu Cheung Shiu. A noise tolerant algorithm
for wrist-mounted robotic sensor calibration with or without sensor
orientation measurement. In lEEE/RSJ International Conference on
Intelligent Robots and Systems, volume 2, pp. 1095–1100, 1992.
3164
