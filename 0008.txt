Crowdsourcing Swarm Manipulation Experiments:
A Massive Online User Study with Large Swarms of Simple Robots
Aaron Becker, Chris Ertel, and James McLurkin
Abstract? Micro- and nanorobotics have the potential to
revolutionize many applications including targeted material de-
livery, assembly, and surgery. The same properties that promise
breakthrough solutions?small size and large populations?
present unique challenges to generating controlled motion. We
want to use large swarms of robots to perform manipula-
tion tasks; unfortunately, human-swarm interaction studies as
conducted today are limited in sample size, are difcult to
reproduce, and are prone to hardware failures. We present
an alternative.
This paper examines the perils, pitfalls, and possibilities we
discovered by launching SwarmControl.net, an online game
where players steer swarms of up to 500 robots to complete
manipulation challenges. We record statistics from thousands
of players, and use the game to explore aspects of large-
population robot control. We present the game framework
as a new, open-source tool for large-scale user experiments.
Our results have potential applications in human control of
micro- and nanorobots, supply insight for automatic controllers,
and provide a template for large online robotic research
experiments.
I. INTRODUCTION
Large populations of micro- and nanorobots are being pro-
duced in laboratories around the world, with diverse potential
applications in drug delivery and construction [1]?[3]. These
activities require robots that behave intelligently. Limited
computation and communication rules out autonomous oper-
ation or direct control over individual units; instead we must
rely on global control signals broadcast to the entire robot
population. It is not always practical to gather pose infor-
mation on individual robots for feedback control; the robots
might be difcult or impossible to sense individually due to
their size and location. However, it is often possible to sense
global properties of the group, such as mean position and
density. Finally, many promising applications will require
direct human control, but user interfaces to thousands?or
millions?of robots is a daunting human-swarm interaction
(HSI) challenge.
The goal of this work is to provide a tool for investigating
HSI methods through statistically signicant numbers of ex-
periments. There is currently no comprehensive understand-
ing of user interfaces for controlling multi-robot systems
with massive populations. We are particularly motivated by
the sharp constraints in micro- and nanorobotic systems.
For example, full-state feedback with 10
6
robots leads to
operator overload. Similarly, the user interaction required
A. Becker is with the Department of Cardiovascular Surgery, Boston
Children's Hospital and Harvard Medical School, Boston, MA, 02115 USA
aaron.becker@childrens.harvard.edu, C. Ertel, and J.
McLurkin are with the Computer Science Department, Rice University,
Houston, TX 77005 USA fcre1, jmclurking@rice.edu
(a) Vary Number (b) Vary Visual Feedback
(c) Vary Control (d) Vary Noise (e) Control Position
Fig. 1. Screenshots from our ve online experiments controlling multi-
robot systems with limited, global control. (a) Varying the number of robots
from 1-500 (b) Comparing 4 levels of visual feedback (c) Comparing 3
control architectures (d) Varying noise from 0 to 200% of control authority
(e) Controlling the position of 1 to 10 robots. See video overview at
http://youtu.be/HgNENj3hvEg.
to individually control each robot scales linearly with robot
population. Instead, user interaction is often constrained to
modifying a global input. This input may be nonstandard,
such as the attraction/repulsion eld from a scanning tunnel-
ing microscope (STM) tip.
Our previous work with over a hundred hardware robots
and thousands of simulated robots [4] demonstrated that
direct human control of large swarms is possible. Unfortu-
nately, the logistical challenges of repeated experiments with
over one hundred robots prevented large-scale tests.
Our goal was to test several scenarios involving large-
scale human-swarm interaction (HSI), and to do so with
a statistically-signicant sample size. Towards this end, we
created SwarmControl.net, an open-source online testing
platform suitable for inexpensive deployment and data col-
lection on a scale not yet seen in swarm robotics research.
Screenshots from this platform are shown in Fig. 1. All
code [5], and experimental results are posted online.
Our experiments show that numerous simple robots re-
sponding to global control inputs are directly controllable
by a human operator without special training, that the visual
feedback of the swarm state should be very simple in order to
increase task performance, and that humans perform swarm-
object manipulation faster using attractive control schemes
than repulsive control schemes.
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 2825
For the extended version of this paper, see [6].
II. RELATED WORK
A. Human-Swarm Interaction
Olson and Wood studied human fanout, the number of
robots a single human user could control [7]. They postulated
that the optimal number of robots was approximately the
autonomous time divided by the interaction time required
by each robot. Their sample problem involved a multi-
robot search task, where users could assign goals to robots.
Their user interaction studies with simulated planar robots
indicated a fanout plateau of about 8 robots, after which there
were diminishing returns. They hypothesize that the location
of this plateau is highly dependent on the underlying task,
and our work indicated there are some tasks without plateaus.
Their research investigated robots with 3 levels of autonomy.
We use robots without autonomy, corresponding with their
rst-level robots.
A number of user studies compare methods for controlling
large swarms of simulated robots, for example [8]?[10].
These studies provide insights but are limited by cost to
small user studies; have a closed-source code base; and focus
on controlling intelligent, programmable agents. For instance
[10] was limited to a pool of 18 participants, [8] 5, and [9]
32. Using an online testing environment, we conduct similar
studies but with much larger sample sizes.
B. Global-control of micro- and nanorobots
Small robots have been constructed with physical hetero-
geneity so that they respond differently to a global, broadcast
control signal. Examples include scratch-drive microrobots,
actuated and controlled by a DC voltage signal from a sub-
strate [11]; magnetic structures with different cross-sections
that could be independently steered [12], [13]; MagMite
microrobots with different resonant frequencies and a global
magnetic eld [14]; and magnetically controlled nanoscale
helical screws constructed to stop movement at different
cutoff frequencies of a global magnetic eld [1], [15].
Similarly, our previous work [16], [17] focused on exploit-
ing inhomogeneity between robots. These control algorithms
theoretically apply to any number of robots?even robotic
continuums?but in practice process noise cancels the dif-
ferentiating effects of inhomogeneity for more than tens of
robots. We desire control algorithms that extend to many
thousands of robots.
C. Three challenges for massive manipulation
While it is now possible to create many micro- and
nanorobots, there remain challenges in control, sensing, and
computation.
1) Control?global inputs: Many micro- and nanorobotic
systems [1]?[3], [11]?[15], [18] rely on global inputs, where
each robot receives an exact copy of the control signal. Our
experiments follow this global model.
2) Sensing?large populations: Parallel control of n
differential-drive robots in a plane requires3n state variables.
Even holonomic robots require 2n state variables. Numer-
ous methods exist for measuring this state in micro- and
nanorobotics. These solutions use computer vision systems
to sense position and heading angle, with corresponding
challenges of handling missed detections and image reg-
istration between detections and robots. These challenges
are increased at the nanoscale where sensing competes with
control for communication bandwidth.
3) Computation?calculating the control law: In our pre-
vious work the controllers required at best a summation over
all the robot states [17] and at worst a matrix inversion [16].
These operations become intractable for large populations of
robots. By focusing on human control of large robot popu-
lations, we accentuate computational difculties because the
controllers are implemented by the unaided human operator.
III. EXPERIMENTAL METHODS
A. Framework
We have developed a exible testing framework for online
human-swarm interaction studies. There are two halves to
our framework: the server backend and the client-side (in-
browser) frontend. The server backend is responsible for
tabulating results, serving webpages containing the frontend
code, and for issuing unique identiers to each experi-
ment participant. The in-browser frontend is responsible
for running an experiment?that is to say, accepting user
input, updating the state of the robot swarm, and ultimately
evaluating task completion.
1) Overview: A participant visits the site, initiating a
communication between their browser and our server. The
web server generates a unique identier for the participant
and sends it along with the landing page to the participant?
this identier is stored as a browser cookie and will be
sent along with all results the participant generates. The
participant's browser prompts for conrmation of the terms-
of-service and offers a menu of experiments.
Once the participant selects an experiment, their browser
makes a new request to the server to load the experiment's
webpage. The server sends scaffold HTML describing the
layout of the page and a script block containing the experi-
ment. The script runs the experiment and, upon a successful
completion, posts the experiment data to the server. The
participant is then given the option of playing again or trying
a different experiment.
A participant may view all of the experimental data
we have gathered; this information is available as either a
webpage, a JSON le, or a comma-separated value le.
2) Backend: The server backend is written in Ruby, us-
ing the Ruby-on-Rails (abbreviated Rails) web development
framework. Ruby is a dynamically-typed object-oriented
scripting language with a strong emphasis on programmer
ergonomics and metaprogramming support. It is well-suited
for the creation of domain-specic languages for a variety of
tasks, as exemplied by the Rails framework. Our backend
serves assets (images, scripts, stylesheets, and so forth) to
2826
participants, selects the correct script to send to perform a
particular experiment, and stores results.
Each result is a database record containing the experiment
name, the participant identier, the duration of the experi-
ment (time to completion), the number of robots involved,
the detailed mode information of the experiment, and the user
agent string of the browser running the experiment (which
identies the type of browser used by the participant). Rails
automates the process of creating the relevant database-object
bindings, and thus we spent little time creating or modifying
the result records, allowing us to rapidly adapt the server to
our needs?for example, adding tracking of the user agent and
experiment mode both took less than ve minutes of work
on the server side.
The experiment script le to be sent to the client is
chosen with the uniform resource identier (URI) for the
experiment webpage; this done, the server will render the
page requested by the participant and insert the script for
the selected experiment. The Rails framework has a great
deal of support for optimizing and compacting (minifying)
Javascript les.
3) Frontend: The client frontend which runs in the partic-
ipant's browser is written in Javascript, a dynamically-typed
prototype-oriented scripting language with some functional
programming support. We make heavy use of the Underscore
framework (a functional programming toolkit for Javascript)
as well as the Javascript port of Box2D (a popular 2D
physics engine with good support for rigid-body dynamics
and xed-timestep simulation). Our frontend also includes
helper libraries for drawing robots, handling user input, and
drawing graphs.
Our framework uses a base task to represent the lifecycle
of an experiment?instantiation, simulation, evaluation,
and submission. A particular experiment inherits from this
prototype but overrides particular methods and adds its own
variables for bookkeeping; this allows new or modied tasks
to be created rapidly with minimal boilerplate code.
Our robots are disc-shaped, non-holonomic, and conned
to the 2D plane. The control input u consists of a single
bounded force vector that is applied to each robot, juj
u
max
. We include a linear ramp for this force value that starts
at zero and increases to the maximum value in one second;
this allows participants to do ne control of the robots by
tapping the arrow keys.
_ x
i
=u
x
; _ y
i
=u
y
: (1)
B. Human subjects
Because our study involved recording data from human
subjects, it required IRB approval before we could legally
save user data (IRB #14-012E).
Subjects were recruited using a combination of social
network effects and coordinated news posts. We asked our
friends and colleagues to send links to our site to their friends
via their preferred social networks, generally Twitter, Face-
book, Google+, and through email. Additionally, we posted
our site to several news aggregators in hopes that it would be
Sep Oct
0
50
100
150
200
250
300
350
TotalTimePlayed HhrL
HNpost
RobotHub.org
&
Ricepressrelease
IEEESpectrum
IEEE
email
11134totalexperiments
Fig. 2. Cumulative time played for completed tests.
seen and visited. Our rst such posting was to Hacker News,
an aggregator run by the Y-Combinator accelerator company;
this posting resulted in our rst thousand trials. A second
posting was made to Reddit, but did not seem to cause much
trafc. A third posting was made to the Robohub.org site.
The trafc generated by these postings is shown in Fig. 2.
Concurrently, we contacted our university's News and
Media Relations Team. They sent a writer and photographer
to our lab, worked with us to draft a press release, and
publicized with news outlets and alumni. Most universities
have a media team, and this is a valuable no-cost resource
to gain publicity.
C. Experimental costs
We've spent approximately one hundred dollars USD pro-
visioning and running this experiment. Hosting is provided
by Heroku, using a single web instance costing around
$40/month, with additional monitoring services bringing
that up to $50/month. In the event of increased de-
mand/participant trafc, we can provision another server to
take up the load. We purchased our domain name from
Namecheap.com for $11.66 a year, giving our site a short,
easy to pronounce handle.
Given the large number of experiment sessions run (over
11,000 at the time of this writing), we see a per-experiment
cost of less than three cents.
D. Instrumentation
When conducting an online experiment, it is very helpful
to gather data about both the experiment infrastructure and
the participants. For the backend, we use a service called
Airbrake to monitor the `health' of the Rails server, getting
emails in the events of any errors occurring or suspicious
activity. We also use another service called New Relic to
provide monitoring and analytics on the server trafc, giving
coarse statistics about site visitation, page load time, and
other indicators of how our backend is performing.
For the frontend, we use Google Analytics to track user
behavior. This tool allows us to see country of origin for
users, time spent on the site, relative percent of people who
look past the landing page (`bounce rate'), and user agent
information (type of browser, type of device, etc.).
2827
945
820
387
176
0 20 40 60 80 100 120
0
200
400
600
800
1000
Totalexperimentscompleted?player
Numberof players
2687differentplayers
1 2 3 4 5 6 7
40
60
80
100
120
140
ExperimentTrial
MeanTime HsL
6
20
35
49 76
169
748
Fig. 3. (Left) The total number of games played per player drops off
exponentially. (Right) We are able to show that players skill improves as
they retry tests using data from Varying Number
0 100 200 300 400 500
0
50
100
150
200
250
300
Numberof Robots
Time HsL
3417experiments
Fig. 4. Data from Varying Number using robots to push an object through
a maze to a goal location. The data indicates that this task has an optimal
number of robots, perhaps due to the relative sizes of the robots, obstacles,
and object. Best-t linear and quadratic lines are overlaid for comparison.
IV. RESULTS
We designed ve experiments to investigate human control
of large robotic swarms for manipulation tasks. Screenshots
of each experiment are shown in Fig. 1. Each experiment
examined the effects of varying a single parameter: pop-
ulation of robots for manipulation, four levels of visual
feedback, three control architectures, different levels of
Brownian noise, and position control with 1 to 10 robots.
The users could choose which experiment to try, and then
our architecture randomly assigned a particular parameter
value for each trial. We recorded the completion time and
the participant ID for each successful trial. As Fig. 3 shows,
one-third of all participants played only a single game.
Still, many played multiple games, and their decreasing
completion times demonstrates their skills improved.
A. Varying Number
Transport of goods and materials between points is at
the heart of all engineering and construction in real-world
systems. This experiment varied from 1 to 500 the population
of robots used to transport an object. We kept the total
area, maximum robot speed, and total net force the swarm
could produce constant. The robots pushed a large hexagonal
object through an `S'-shaped maze. Our hypothesis was that
participants would complete the task faster with more robots.
The results, shown in Fig. 4, do not support our hypothesis,
indicating rather that there is a local minima around 130
                       
                                              
   
876
1153
334
0 100 200 300 400
global
attractive
repulsive
Time HsL,2432experiments
Controlarchitecturevs.completiontime
Fig. 5. Attractive control resulted in the shortest completion time and
repulsive the longest for building a three-block pyramid.
robots.
B. Varying Control
Ultimately, we want to use swarms of robots to build
things. This experiment compared different control architec-
tures modeled after real-world devices.
We compared attractive and repulsive control with the
global control used for the other experiments. The attrac-
tive and repulsive controllers were loosely modeled after
scanning tunneling microscopes (STM), but also apply to
magnetic manipulation [19] and biological models [20].
STMs can be used to arrange atoms and make small assem-
blies [21]. An STM tip is charged with electrical potential,
and used to repel like-charged or to attract differently-
charged molecules. In contrast, the global controller uses a
uniform eld (perhaps formed by parallel lines of differently-
charged conductors) to pull molecules in the same direction.
The experiment challenged players to assemble a three-block
pyramid with a swarm of 16 robots.
The results were conclusive, as shown in Fig. 5: attractive
control was the fastest, followed by global control, with
repulsive control a distant last. The median time using
repulsive control was four times longer than with attractive
control.
C. Varying Visualization
Sensing is expensive, especially on the nanoscale. To
see nanocars [3], scientists fasten molecules that uoresce
light when activated by a strong light source. Unfortunately,
multiple exposures can destroy these molecules, a process
called photobleaching. Photobleaching can be minimized
by lowering the excitation light intensity, but this increases
the probability of missed detections [22]. This experiment
explores manipulation with varying amounts of sensing in-
formation: full-state sensing provides the most information
by showing the position of all robots; convex-hull draws a
convex hull around the outermost robots; mean provides the
average position of the population; and mean + variance
adds a condence ellipse. Fig. 7 shows screenshots of the
same robot swarm with each type of visual feedback. Full-
state requires 2n data points for n robots. Convex-hull
2828
     
        
 
         
242
302
300
720
50 100 150 200 250 300 350
mean
mean&variance
convex-hull
full-state
Time HsL,1624experiments
Visualfeedbackvs.completiontime
Fig. 6. Completion-time results for the four levels of visual feedback
shown in Fig. 7. Surprisingly, players perform better with limited feedback?
subjects with only the mean + variance outperformed all others.
requires at worst 2n, but usually a smaller number. Mean
requires two, and variance three, data points. Mean and mean
+ variance are convenient even with millions of robots. Our
hypothesis predicted a steady decay in performance as the
amount of visual feedback decreased.
To our surprise, our experiment indicates the opposite:
players with just the mean completed the task faster than
those with full-state feedback. As Fig. 6 shows, the levels
of feedback arranged by increasing completion time are
[mean + variance, mean, full-state, convex-hull]. Anecdotal
evidence from beta-testers who played the game suggests that
tracking 100 robots is overwhelming?similar to schooling
phenomenons that confuse predators?while working with
just the mean + variance is like using a ?spongy? manipu-
lator. Our beta-testers found convex-hull feedback confusing
and irritating. A single robot left behind an obstacle will
stretch the entire hull, obscuring the majority of the swarm.
D. Varying Noise
Real-world microrobots and nanorobots are affected by
turbulence caused by random collisions with molecules. The
effect of these collisions is called Brownian motion.
This experiment varied the strength of these disturbances
to study how noise affects human control of large swarms.
Noise was applied at every timestep as follows:
_ x
i
=u
x
+m
i
cos( 
i
)
_ y
i
=u
y
+m
i
sin( 
i
):
Here m
i
; 
i
are uniformly IID, with m
i
2 [0;M] and 
i
2
[0;2], where M is a constant for each trial ranging from 0
to 200% of the maximum control power (u
max
).
Full-state Convex-hull Mean + var Mean
Fig. 7. Screenshots from task Vary Visualization. This experiment chal-
lenges players to quickly steer 100 robots (blue discs) to push an object
(green hexagon) into a goal region. We record the completion time and
other statistics.
0 50 100 150 200
0
100
200
300
400
500
Noise H%controlpowerL
Time HsL
529experiments
Fig. 8. Varying the noise from 0 to 200% of the maximum control input
resulted in only a small increase in completion time.
                   

 


    

 
    




    
        
 



 

 

   




  






 





 
 





 
362
302 324 303
220
201 165
98 98
103
1 2 3 4 5 6 7 8 9 10
0
50
100
150
Numberof robots
Time HsL
2260experiments
Fig. 9. Increasing the number of robots resulted in longer completion
times. For more than 4 robots the goal pattern contained a void, which may
have caused the longer completion times.
We hypothesized 200% noise was the largest a human
could be expected to control?at 200% noise, the robots
move erratically. Disproving our hypothesis, the results in
Fig. 8 show only a 40% increase in completion time for the
maximum noise.
E. Position Control
This experiment examined how completion time scales
with the number of robots n. Using a single square ob-
stacle, users arranged n 2 [1;10] robots into a specied
goal pattern. The goal pattern formed a block `A' with 10
robots, and lesser numbers of robots used a subset of these
goal positions. Our hypothesis was that completion time
would increase linearly with the number of robots, as with
our position control algorithm in [4]. Our results roughly
corroborate this, as shown in Fig. 9. Though the number of
robots presented to game players is uniformly distributed,
larger n are more difcult, and the number of successful
experiments drops steadily as n increases.
Note there is a bifurcation between n=4 and n=5 robots.
For n2 [1;4] the goal patterns are not hollow, but starting
atn=5 they are. A better experiment design would randomly
place the goal positions. Initially we tried this, but our beta-
2829
Fig. 10. Demographic information on game player's location, provided by
Google Analytics. Game players from 84 countries and 49 US states visited
our site.
testers strongly disliked trying to arrange robots in random
patterns.
V. CONCLUSION AND FUTURE WORK
We introduced SwarmControl.net, a new online envi-
ronment for large-scale user experiments controlling 100+
populations of robots. Over the period of one month this
site conducted thousands of experiments with a worldwide
user base, as shown in Fig. 10. All code is open source and
downloadable from a public git repository [5]. All exper-
iment results can be freely downloaded from our website.
We implemented ve unique experiments, and gathered data
that corroborated past lab experiments, but with a testing pool
two orders of magnitude larger than was possible before.
a) Site modications: The current site is optimized for
desktop and laptop users, and we currently do not support
mobile users. Our IRB allows us to conduct demographic
questionnaires, and we will implement these questionnaires
in a future release?currently our only source of demographic
data is Google Analytics.
We are pursuing partnerships to increase the educational
content on our website. Our goal is to highlight a variety of
the leading micro- and nanorobotics labs and the challenges
they are working on.
b) Additional experiments: There are many avenues for
future work. Manipulation by large populations of robots
is an immature area and there are many open questions.
Future work will invite other collaborators to submit their
own experiments. Topics of interest include control with
nonuniform ow such as uid in an artery, gradient control
elds like that of an MRI, competitive playing, multi-modal
control, and targeted drug delivery in a vascular network.
c) Automatic controllers: We have compiled a large
body of test results. Our goal is to design automatic con-
trollers using this data. One avenue is to identify the most
procient players and perform inverse optimal control algo-
rithms to learn the cost functions used by the best players.
VI. ACKNOWLEDGEMENTS
We acknowledge many mrsl.rice.edu lab members who
helped beta test SwarmControl.net; helpful discussion with
James Tour, Stephan Link, and Victor Garc a L opez on
fabrication and visualization challenges at the nanoscale with
nanocars; and the Rice Center for Technology in Teaching
and Learning. This work was partially supported by the
National Science Foundation under CPS-1035716.
REFERENCES
[1] K. E. Peyer, L. Zhang, and B. J. Nelson, ?Bio-inspired magnetic
swimming microrobots for biomedical applications,? Nanoscale, 2013.
[2] Y . Shirai, A. J. Osgood, Y . Zhao, K. F. Kelly, and J. M. Tour,
?Directional control in thermally driven single-molecule nanocars,?
Nano Letters, vol. 5, no. 11, pp. 2330?2334, Feb. 2005.
[3] P.-T. Chiang, J. Mielke, J. Godoy, J. M. Guerrero, L. B. Alemany,
C. J. Villag« omez, A. Saywell, L. Grill, and J. M. Tour, ?Toward a
light-driven motorized nanocar: Synthesis and initial imaging of single
molecules,? ACS Nano, vol. 6, no. 1, pp. 592?597, Feb. 2011.
[4] A. Becker, G. Habibi, J. Werfel, M. Rubenstein, and J. McLurkin,
?Massive uniform manipulation: Controlling large populations of
simple robots with a common input signal,? in IEEE/RSJ International
Conference on Intelligent Robots and Systems (IROS), Nov. 2013, pp.
520?527.
[5] C. Ertel and A. Becker. (2013, Sep.) Swarmcontrol git repository.
[Online]. Available: https://github.com/crertel/swarmmanipulate.git
[6] A. Becker, C. Ertel, and J. McLurkin, ?Crowdsourcing swarm manip-
ulation experiments: A massive online user study with large swarms
of simple robots,? ArXiv e-prints, Feb. 2014.
[7] D. R. Olsen Jr and S. B. Wood, ?Fan-out: Measuring human control
of multiple robots,? in SIGCHI Conference on Human Factors in
Computing Systems, Vienna, Austria, Apr. 2004, pp. 231?238.
[8] S. Bashyal and G. K. Venayagamoorthy, ?Human swarm interaction
for radiation source search and localization,? in Swarm Intelligence
Symposium (SIS). IEEE, 2008, pp. 1?8.
[9] A. Kolling, S. Nunnally, and M. Lewis, ?Towards human control
of robot swarms,? in Proceedings of the seventh annual ACM/IEEE
international conference on Human-Robot Interaction. ACM, 2012,
pp. 89?96.
[10] J.-P. de la Croix and M. Egerstedt, ?Controllability characterizations
of leader-based swarm interactions,? in 2012 AAAI Fall Symposium
Series, 2012.
[11] B. Donald, C. Levey, and I. Paprotny, ?Planar microassembly by
parallel actuation of MEMS microrobots,? J. of MEMS, vol. 17, no. 4,
pp. 789?808, Aug. 2008.
[12] S. Floyd, E. Diller, C. Pawashe, and M. Sitti, ?Control methodologies
for a heterogeneous group of untethered magnetic micro-robots,? Int.
J. Robot. Res., vol. 30, no. 13, pp. 1553?1565, Nov. 2011.
[13] E. Diller, J. Giltinan, and M. Sitti, ?Independent control of multiple
magnetic microrobots in three dimensions,? The International Journal
of Robotics Research, vol. 32, no. 5, pp. 614?631, 2013. [Online].
Available: http://ijr.sagepub.com/content/32/5/614.abstract
[14] D. Frutiger, B. Kratochvil, K. V ollmers, and B. J. Nelson, ?Magmites
- wireless resonant magnetic microrobots,? in IEEE Int. Conf. Rob.
Aut., Pasadena, CA, May 2008.
[15] S. Tottori, L. Zhang, F. Qiu, K. Krawczyk, A. Franco-Obreg« on, and
B. J. Nelson, ?Magnetic helical micromachines: Fabrication, controlled
swimming, and cargo transport,? Advanced Materials, vol. 24, no. 811,
2012.
[16] A. Becker and T. Bretl, ?Approximate steering of a unicycle under
bounded model perturbation using ensemble control,? IEEE Trans.
Robot., vol. 28, no. 3, pp. 580?591, Jun. 2012.
[17] A. Becker, C. Onyuksel, and T. Bretl, ?Feedback control of many
differential-drive robots with uniform control inputs,? in IEEE/RSJ
International Conference on Intelligent Robots and Systems (IROS),
Oct. 2012.
[18] K. Takahashi, K. Hashimoto, N. Ogawa, and H. Oku, ?Organized
motion control of a lot of microorganisms using visual feedback,?
in IEEE Int. Conf. Rob. Aut., May 2006, pp. 1408?1413. [Online].
Available: http://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=
1641906&isnumber=34383
[19] I. S. M. Khalil, F. van den Brink, O. S. Sukas, and S. Misra, ?Mi-
croassembly using a cluster of paramagnetic microparticles,? in IEEE
International Conference on Robotics and Automation, Karlsruhe,
Germany, May 2013, pp. 5507?5512.
[20] M. A. Goodrich, S. Kerman, B. Pendleton, and P. Sujit, ?What types of
interactions do bio-inspired robot swarms and ocks afford a human??
in Robotics: Science and Systems, 2012.
[21] P. Avouris, ?Manipulation of matter at the atomic and molecular
levels,? Accounts of chemical research, vol. 28, no. 3, pp. 95?102,
1995.
[22] J. Cazes, Encyclopedia of Chromatography, 2nd ed. New York: Taylor
& Francis Group, 2005, vol. 2.
2830
