Distance Optimal Target Assignment in Robotic Networks under
Communication and Sensing Constraints
Jingjin Yu
1
Soon-Jo Chung
2
Petros G. Voulgaris
2
Abstract—We study the problem of minimizing the total dis-
tance incurred in assigning a group of mobile robots to an equal
number of static targets. Assuming that the robots have limited,
range-based communication and target-sensing capabilities, we
present a necessary and sufﬁcient condition for ensuring distance
optimality when robots and targets are uniformly randomly
distributed. We then provide an explicit, non-asymptotic formula
for computing the number of robots needed for guaranteeing
optimality in terms of the robots’ sensing and communication
capabilities with arbitrarily high probabilities. The bound given
in the formula is also asymptotically tight. Due to the large
number of robots needed for high-probability optimality guar-
antee, we continue to investigate strategies for cases in which
the number of robots cannot be freely chosen. We show that
a properly designed strategy can be asymptotically optimal or
suboptimal with constant approximation ratios.
I. INTRODUCTION
Inthispaper,westudypermutation-invariantassignmentsof
asetofnetworkedrobotstoasetoftargetsofequalcardinality,
with a primary focus on minimizing the total path distance.
Both robotsand targetsare assumedto be uniformlyrandomly
distributed in a two-dimensional unit square. Under commu-
nication and target-sensing limitations, we seek optimality
guarantees, in terms of necessary and sufﬁcient conditions,
as well as asymptotically optimal or suboptimal strategies
when the conditions for optimality cannot be satisﬁed. In
characterizing the performance of suboptimal strategies, we
show that these strategies can often provide constant ratio
approximations with respect to distance optimality.
Our problem considers the problem of target assignment
in robotic networks. This problem is studied by, among
others, Smith and Bullo in [25], in which the performance
of several classes of algorithms for achieving time optimality
(i.e., minimizing the time until every target is occupied) were
established. In contrast, we focus on minimizing the total
distance traveled by all robots. The total distance serves as
a proper proxy to quantities such as the energy consumption
of all robots. Simple examples show that a distance-optimal
1
Jingjin Yu is with the Computer Science and Artiﬁcial Intelligence Lab
at the Massachusetts Institute of Technology and the Mechanical Engineering
Department at Boston University. E-mail: jingjin@csail.mit.edu.
2
Soon-Jo Chung and Petros G. Voulgaris are with the Coordinated Science
Lab and the Department of Aerospace Engineering, University of Illinois at
Urbana-Champaign. E-mail: {sjchung, voulgari}@illinois.edu.
This work was supported in part by AFOSR grant FA95501210193 and
NSF grant IIS-1253758. This paper is intended as an early dissemination
of results of an extended draft [32] which contains more complete proofs
and signiﬁcant generalizations. We thank the reviewers for their constructive
comments.
solution for the target assignment problem generally does not
imply time optimality and vice versa [33].
The problem of target assignment in robotic networks re-
quires the resolution of an assignment (or matching) problem.
Assignment problems are extensively studied in the area of
combinatorialoptimization, with efﬁcient algorithms available
for solving many of its variations [1], [4], [5], [7], [11], [18],
[35]. If we instead put more emphasis on multi-robotsystems,
the problems of robotic task allocation [16], [27], [28], [34],
swarm reconﬁguration [9], multi-robot path planning [17],
[24], [29], and multi-agent consensus [10], [15], [19], [20]
come up. For a review on some of these topics, see [6].
Our work is also related to the study on the connectivity
of wireless networks. If n robots are uniformly randomly
distributed in a unit square, then each robot needs to have
k = ?(logn) nearest neighbors for the entire network to
be asymptotically connected [31]. In particular, the authors
of [31] showed that k < 0.074logn leads to an asymptoti-
callydisconnectednetworkwheresk>5.1774lognguarantees
asymptoticconnectivity.This pairof boundswas subsequently
improved[3]. These nearest neighborbased connectivitymod-
els were further studied in [13], [14], [21], to list a few. In
these work, a geometric graph structure is often used [23].
Our contribution is twofold. First, for robots with arbi-
trarily limited range-based sensing and communication ca-
pabilities (with ranges captured by radii r
sense
and r
comm
,
respectively),wederivenecessaryandsufﬁcientconditionsfor
ensuring a distance-optimal solution. In particular, we provide
a probabilistic estimate of the number of robots (denoted n)
sufﬁcient for all robots to form a connected network given
a communication range (some radius r
comm
). In contrast to
related connectivity results [22], [31], we give n as an explicit
function of r
comm
without asymptotic assumptions. Therefore,
our bounds do not depend on n being large. We further
show that our bound is also asymptotically tight when a high
probability guarantee is required.
Second, adopting results on one-dimensional random walk,
we show that an inﬁnite family of hierarchical strategies can
produce assignments in a decentralized way while simultane-
ously ensuring that the total distance traveled by the robots is
within a constant (asymptotic) bound of the optimal distance.
Our simulation results show that the approximation ratio can
often be smaller than two. Moreover, because hierarchical
strategies avoid running a centralized assignment algorithm,
signiﬁcant saving on computation time (in certain cases, a
speedup of 1000? or more) can be achieved.
The rest of the paper is organized as follows. In Section
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 1098
II, we introduce notations and formally deﬁne the problem
that we study. Sections III and IV then elaborate on the two
stated contributions, one contribution per section. We conduct
simulations in Section V to conﬁrm our theoretical ﬁndings
andconcludeinSectionVI. Duetolimited space,someproofs
are sketched or omitted; for complete proofs, see [32].
II. PROBLEM STATEMENT
We introduce some notations before formally deﬁning the
target assignment problem. The symbolsR,R
+
,N denote the
set of real numbers, the set of positive reals, and the set
of positive integers, respectively. For a positive real number
x, logx denotes the natural logarithm of x; the function x
(respectively, x) denotes the smallest (respectively, largest)
integer that is larger (respectively, smaller) than x. |·| denotes
the cardinality for sets and the absolute values for real num-
bers. We use v
2
to denote the Euclidean 2-norm of a vector
v. The unit square [0,1]?[0,1] ?R
2
is denoted as Q. The
expectation of a random variable X is denoted as E[X].We
use E(·) to denote a probabilistic event and the probability
with which an event e occurs is denoted as P(e).
Given two functions f,g:R
+
?R
+
, f(x)=O(g(x)) (resp.
Ω(g(x))) if lim
x?∞
f(x)/g(x)<∞ (resp. lim
x?∞
f(x)/g(x) ≥
c > 0). Note that under this context, “=” behaves as “?”.
If f(x)= O(g(x)) and f(x)=Ω(g(x)), then we say f(x)=
?(g(x)).Finally, f(x)=o(g(x))(respectively, f(x)=?(g(x)))
if and only if f(x)= O(g(x)) (respectively, f(x)=Ω(g(x)))
and ¬(f(x)=?(x)).
We now move to stating the problem. Let X
0
=
{x
0
1
,...,x
0
n
},Y
0
={y
0
1
,...,y
0
n
}?Q be two uniformlyrandomly
selected point sets of cardinality n.
1
The superscript empha-
sizesthatthesepointsareobtainedatthestarttimet =0.Place
n point robots on the points in X
0
, with robot a
i
occupyingx
0
i
.
Each robot has a unique integer label (e.g., i). In general, we
denote robot a
i
’s location (coordinates) at time t ≥0as x
i
(t).
The basic task, to be formally deﬁned, is to move the robots
so that at some ﬁnal time t
f
≥0, every y?Y
0
is occupied by
a robot (we may assume that there is a ﬁnal time t
f
i
for each
robot a
i
, such that x
i
(t)?x
i
(t
f
i
) for t ≥t
f
i
). For convenience,
we also refer to X
0
and Y
0
as the set of initial locations and
the set of target locations, respectively.
Motion model: The control space for a robot a
i
is ˙ x
i
=u
i
withu
i

2
?{0,1}.Weassumethatrobots’sizesarenegligible
with respect to the distance they travel and ignore collisions
between robots.
Communication model: A robot a
i
may communicate with
other robots within a disc of radius r
comm
centered at x
i
(t).
2
At any given time t ≥0, we deﬁne the (undirected) commu-
nication graph G(t) as follows, which is a geometric graph
[23] that changes over time. G(t) has n vertices v
1
,...,v
n
,
corresponding to robots a
1
,...,a
n
, respectively. There is an
edge betweentwo vertices v
i
andv
j
if the correspondingrobot
1
Via scaling, our result readily extends to arbitrary square environments.
2
While discsmaybe too simple formodeling the communication orsensing
range of a robot precisely, they remain valid for purposes such as establishing
performance bounds (the subject of this paper).
locationsx
i
(t)andx
j
(t),respectively,satisfy x
i
(t)?x
j
(t)
2
≤
r
comm
.
Since the communication overhead is often negligible with
respect to the time it takes for the robots to move, we assume
thatallrobotscorrespondingtoverticesinaconnectedcompo-
nentofthecommunicationgraphmayexchangeinformationas
needed instantaneously. In other words, robots in a connected
component of G(t) can be effectively treated as a single robot
as far as as decision making is concerned.
Target-sensingmodel: We assume that a robotis aware of a
point y?Y
0
if y?x
i
(t)
2
≤r
sense
, the target sensing radius.
The problem we consider is deﬁned as follows.
Problem 1 (Target Assignment in Robotic Networks)
Given X
0
,Y
0
,r
comm
, and r
sense
, ﬁnd a control strategy
u=[u
1
,...,u
n
], such that for some 0 ≤ t
f
i
<∞ and some
permutation ? of the numbers 1,...,n, x
i
(t
f
i
)= y
0
?(i)
for all
1≤i≤n.
Over all feasible solutions to an instance of Problem 1, we
are interested in minimizing the total distance traveled by all
robots, which can be expressed as
D
n
=
n
∑
i=1

t
f
i
0
˙ x
i
(t)
2
dt. (1)
As a proper proxy to measures such as the energy con-
sumption of the entire system, the cost deﬁned in (1) is an
appropriate objective in practice. Unless otherwise speciﬁed,
optimality refers to minimizing D
n
in this paper. Assuming
that robots must follow continuous paths, we let D
?
n
denote
the best possible D
n
, which may or may not be achievable
depending on the capabilities of the robots (e.g, if the robots
cannotfollowstraightlinepaths,thenD
n
>D
?
n
).LetU denote
the set of all possible control strategies that solve Problem 1
given a ﬁxed set of capabilities for the robots, inf
U
D
n
is then
the greatest lower bound achievable under these capabilities.
3
III. GUARANTEEING OPTIMALITY FOR ARBITRARY r
comm
AND r
sense
Intuitively, without global communication, optimality can
be hard to guarantee (i.e., inf
U
D
n
= D
?
n
), because global
assignment is not possible in general at t = 0. For example,
as r
sense
? 0, the robots must search for the targets before
assignment can be made; it is unlikely that the paths taken by
the robots toward the targets will be straight lines, which is
required to obtain D
?
n
. This raises the following question: For
arbitrary ﬁxed r
comm
and r
sense
, under what conditions can we
ensure optimality? This question is answered in the following
Theorem.
Theorem 1 Under sensing and communication constraints,
inf
U
D
n
=D
?
n
ifandonlyif G(0)isconnectedandeverytarget
y?Y
0
is within a distance of r
sense
to some x?X
0
.
PROOF. We ﬁrst prove the necessary conditions with two
claims:1)anoptimalassignmentthatminimizesD
n
ispossible
3
Here inf is used instead of min because it is not immediately clear that
the minimum can always be reached.
1099
in general only if G(0) is connected, and 2) an optimal
assignmentthat minimizesD
n
is possibleonlyifforall y?Y
0
,
y is within a distance of r
sense
to some x?X
0
.
For establishing the ﬁrst claim, note that the robots must
decide at t = 0 a pairing between elements of X
0
and Y
0
that minimizes D
n
. We now show that this is impossible in
general for n = 2 and r
comm
<
√
2. A possible conﬁguration
of two robots and two targets (a
1
, a
2
, y
1
, y
2
, respectively)
under these assumptions is given in Fig. 1 (solid blue and
red dots). Because they are more than r
comm
apart, the robots
cannot communicate. Robot a
1
is of equal distance to y
1
and
y
2
wheres robot a
2
is closer to y
2
than it is to y
1
. An optimal
assignment must have a
1
go to y
1
and a
2
go to y
2
. However,
it is impossible for a
1
to decide at t =0togoto y
1
or y
2
without knowing where a
2
is. We may expand the locations
oftherobotsandtargetstoincludeneighborhoodsaroundthem
(the dotted circles in Fig. 1) to establish that there is a non-
zero probability with which an optimal assignment cannot be
made att =0. Thus, for distance optimality, G(0) cannot have
more than one connected component and must be connected.
r
comm
r
comm
a
1
a
2
y
1
y
2
Fig. 1. A general setup in which two robots cannot communicate at t = 0
and therefore, cannot decide an optimal assignment at t =0.
For the second claim, suppose that at t = 0, some y ?Y
0
is not within a distance of r
sense
to any x ? X
0
. Then some
robot must move to search for that y. This will cause
the robot to follow a path that is not a straight line with
probability one, implying that D
n
=D
?
n
with zero probability.
It straightforward to see that the two necessary conditions
from the two claims are also sufﬁcient for optimality. 
Theorem 1 provides a simple way of ensuring optimality
by either increasing the number of robots or increasing r
comm
and/orr
sense
, whichleadstoa centralizedstrategy(Strategy1).
Note that given the assignment permutation ?, each robot a
i
can easily compute its straight-line path between x
0
i
and y
0
?(i)
.
Since every robot can carry out the computation in Strategy
1, to resolve conﬂicting decisions and avoid unnecessary
computation, we may let the highest labeled robot (e.g., a
n
)
dictate the assignment process. An optimal assignment in the
unit square can be computed in O(n
3
) using the strongly
polynomial
4
Hungarian algorithm [11], [18] or other asymp-
totically faster algorithms [1], [30].
4
A polynomial time algorithm runs in strongly polynomial time only if its
running time does not depend on the size of the input parameters. Note that
n is the number of input parameters in this case.
Strategy 1: CENTRALIZED ASSIGNMENT
Initial condition: X
0
,Y
0
Outcome: permutation? that assigns robot a
i
to y
0
?(i)
1 compute d
i,j
=x
i
?y
j

2
between each pair of (x
i
,y
j
) in
which x
i
?X
0
and y
j
?Y
0
2 based on {d
i,j
}, compute an optimal assignment for the
robots that minimizes D
n
3 communicate the assignment to all robots
The rest of this section establishes how the conditions
from Theorem 1 can be met. Although connectivity results on
Random Geometric Graphs [22] can be used for this purpose,
these results only yield implicit formulas of an asymptotic
nature. We take a different approach and produce the number
of robots n as an explicit function of r
comm
, without the
asymptotic assumption.
A. Guaranteeing a Connected G(0)
WhentherobotscanbeanywhereintheunitsquareQ,given
a communication radius of r
comm
<
√
2, at least ?(1/r
2
comm
)
robots are needed for a connected G(0), which requires the
robots to take a roughly “regular” formation such as a grid. It
turns out that when the robots are randomly distributed, not
a great many more robots are needed to ensure a connected
communication graph G(0).
Lemma 2 Given a ﬁxed r
comm
<
√
2 and 0 <? < 1, the
communication graph G(0) is connected with probability at
least 1?? if the number of robots n satisﬁes
n≥
√
5
r
comm

2
log(
1
?

√
5
r
comm

2
). (2)
PROOF. We divide the unit square Q into m=b
2
equal-sized
small squareswithb=
√
5/r
comm
.Labelthese small squares
as {q
1
,...,q
m
}. Under this division scheme, if a small square
q
i
(see, e.g., the gray one in Fig. 2) contains at least a robot,
the robot can communicate with any other robot in the four
squares sharing a side with q
i
. Therefore,G(0) is connectedif
1
2
b
.
.
.
r
comm
Fig. 2. If the small squares have a side length of 
√
5/r
comm
 or smaller,
then a robot in such a square (e.g., the gray square) can communicate with
any robot in the four neighboring small squares.
each q
i
containsa robot.Let n
i
denotethe numberof robotsin
q
i
. Then P(n
i
=0)=(1?1/m)
n
<e
?
n
m
. The inequality holds
because (1?x)
n
<e
?nx
for 0<x<1. By Boole’s inequality,
the probability that at least one of the squares q
1
,...,q
m
is
1100
empty can be upper bounded as
P(
m

i=1
E(n
i
=0))≤
m
∑
i=1
P(n
i
=0)<me
?
n
m
.
Setting me
?n/m
=? and replacing m=
√
5/r
comm

2
shows
that (2) guarantees that each small square contains at least
one robot with probability 1??. 
Remark. In contrast to asymptotic results (see, e.g., [22]),
Lemma 2 provides n as an explicit function of r
comm
. The
sufﬁcient condition on n given in (2) is non-asymptotic and
applies to an arbitrary r
comm
. On the other hand, if we let
r
comm
?0, then an asymptotic statement can also be made.
Lemma 3 As r
comm
?0, the communication graph G(0) is
connected with arbitrarily high probability e
?e
?c
(for some
c>0) if the number of robots n satisﬁes
n≥(2log
√
5
r
comm
+c)
√
5
r
comm

2
. (3)
PROOF. Given the division scheme used in the proof of
Lemma 2, distributing robots into the unit square Q is
equivalent to tossing the robots (balls) into the m small
squares (bins), uniformly randomly. By classical results
on balls and bins (e.g., Inequality (2) from [12]), having
n≥mlogm+cm=(2log
√
5/r
comm
+c)
√
5/r
comm

2
robots
guarantees that all m small squares must have at least one
robot each with probability e
?e
?c
. 
Since f(x)=cx grows slower than g(x)=xlogx as x?∞,
Lemma3saysthatn=?((1/r
comm
)
2
log(1/r
comm
))robotscan
ensurethat G(0) is connectedwith probabilityarbitrarilyclose
to one asymptotically. This many robots turns out to be also
necessary for the high probability guarantee, which we prove
next.
Let P
n,m
(E) denote the probability of event E happening
after tossing n balls into m bins. We work with two events:
E
0
, the event that “at least one bin has zero balls in it”, and
E
1
, the event that “at least one bin contains exactly one ball”.
We want to show that P
n,m
(E
1
) is not arbitrarily small for n
up to mlogm.
Lemma 4 Suppose that 1 ≤ n < mlogm balls are tossed
uniformly randomly into m bins. As m?∞, P
n,m
(E
1
)>0.34.
PROOF SKETCH. We sketch the general idea behind the proof
due to limited space. Our proof partitions all n?[1,mlogm)
into two pieces: n ? [1,m] and n ? (m,mlogm). When
1 ≤ n ≤m, since on average there is no more than one ball
per bin, intuitively some bin must have exactly one ball in it.
We can show that P
n,m
(E
1
)> e
?1
.For m<n<mlogm,we
ﬁrst establish that P
n

,m
(E
0
) is large for n

up to mlogm?m
using again Inequality (2) from [12]. Using P
n

+k,m
(E
1
) ≥
P
n

,m
(E
0
)P
k,m
(exactly one ball falls in the empty bin),we
can show that P
n,m
(E
1
)≥0.34 for m<n<mlogm. 
We now show that n =?((1/r
comm
)
2
log(1/r
comm
)) is a
tight bound on the number of robots for guaranteeing the
connectivity of G(0) with high probability.
Theorem 5 For uniformly randomly distributed robots in a
unit square with a communication radius r
comm
,
n=?(
1
r
2
comm
log
1
r
comm
) (4)
robots are necessary and sufﬁcient to ensure a connected
communicationgraphatt =0with arbitrarilyhighprobability
as r
comm
?0.
PROOF SKETCH. Lemma 3 covers sufﬁciency; we are
to show that there is some non-trivial probability that
G(0) is disconnected if the number of robots satisﬁes
n = o((1/r
2
comm
)log(1/r
comm
)). To prove the claim, we
partition the unit square Q into m=b
2
=1.1/r
comm

2
small
squares and group them into 3?3 blocks. We set the size
of the square so that a robot in the center square of a 3?3
block cannot communicate with others if the other eight
squares of the same block are unoccupied. By Lemma 4, the
probability that one of the 3?3 blocks gets exactly one robot
is non-trivial even when the number of robots is of order
mlogm. Since there is 1/9 chance the robot is in the center
of the block, we are done. 
B. Ensuring Target Observability
With a connected communicationgraph G(0), we can solve
a single assignment problem if for each y ?Y
0
, y?x
2
≤
r
sense
for some x ?X
0
. Similar techniques used in the proof
of Lemma 2 lead to a similar lower bound.
Lemma 6 For ﬁxed r
sense
and 0<? <1, every target y?Y
0
is observable by some robot at t =0 with probability at least
1?? when
n≥
√
2
r
sense

2
log(
1
?

√
2
r
sense

2
). (5)
Putting together Lemmas 2 and 6, we obtain a lower bound
on n that makes a distance-optimal assignment possible; we
omit the straightforward proof.
Theorem 7 Fixing 0 <? < 1, the communication graph is
connectedandevery target y?Y
0
is observableby some robot
at t =0 with probability at least 1?? when
n≥
? ????? ????? 
√
2
r
sense

2
log(
1
?

√
2
r
sense

2
), r
sense
<
√
10r
comm
5

√
5
r
comm

2
log(
1
?

√
5
r
comm

2
), r
sense
≥
√
10r
comm
5
(6)
Remark. Theorem 7 is not an asymptotic result and works
for all r
comm
and r
sense
. If high-probabilityasymptotic result is
desirable, Lemma 6 can be easily turned into a version similar
toTheorem5,followingessentiallythesameprooftechniques;
we omit the details. In view of this fact, the bounds from
Theorem 7 are asymptotically tight.
1101
IV. HIERARCHICAL ASYMPTOTICALLY OPTIMAL AND
SUBOPTIMAL STRATEGIES
In view of Theorem 7, a large number robots may be nec-
essary to guarantee an optimal solution with high probability.
When such a guarantee is unavailable due to the lack of
resources, alternative strategies are needed. In this section,
we seek asymptotically optimal and suboptimal strategies for
arbitrary r
comm
and r
sense
that do not require as many robots.
To make our strategies more modular, sensing and commu-
nication are treated orthogonally; we now handle the sensing
part. Because there can be targets anywhere in Q, the robots’
joint sensing area must cover all of Q to obtain all target loca-
tions. For this to happen for arbitrary r
sense
, Q must be swept
through. To achieve this, we partition Q into 1/(2r
sense)

2
small squares and let a robot in the top-left square “zig-zag”
through Q (i.e., follows a Boustrophedon path [8]) until it
covers the bottom side of Q. If there is no robot in the top-left
square, then a robot in a square along the Boustrophedonpath
isused;implicittimingcanbeusedtodeterminethis.Oncethe
end of the path is reached, the robot then reverses its course
untilit getsbacktothetop-leftsmallsquare.At this point,this
robot is aware of all target locations. It then repeats a similar
path (the unit square is now divided into 1/(2r
comm)

2
small
squares) to communicate that information to all other robots.
This procedure ensures that all robots are aware of all target
locations. The total distance cost of the above procedure is
at most 21/(2r
sense)
+1/(2r
comm)
. Taking this penalty, we
assume that all robots are aware of all target locations.
A. Generic Abstract Hierarchical Strategy
Because the strategies to be proposed share the general
feature of being hierarchical, we ﬁrst characterize the per-
formance of an abstract hierarchical strategy. Let h≥1 be the
number of hierarchies and m
i
,1 ≤ i ≤ h, be the number of
regions (disjoint squares within Q) at hierarchy i, we require
that: 1. m
1
? 1, 2. m
i+1
> m
i
, and 3. a region at a higher
numbered hierarchy does not span multiple regions at a lower
numbered hierarchy. Given such a setup, a straightforward
strategy is to assign the robots to targets locally when possible
and balance the surplus or deﬁcit of robots at higher (lower
numbered) hierarchies. The pseudo code of such a strategy is
outlined in Strategy 2.
Strategy 2: GENERIC HIERARCHICAL STRATEGY
Initial condition: X
0
,Y
0
,h,m
1
,...,m
h
Outcome: permutation? that assigns robot a
i
to y
0
?(i)
1 for each hierarchy i in decreasing order do
2 for each region j, 1≤ j ≤m
i
do
3 let n
a
and n
g
be the number of unmatched robots
and targets in region j, respectively; assign any
n
a
(or n
g
if n
a
>n
g
) unmatched robots to any
(equal number of) unmatched targets in the
region
Note that in Strategy 2, we did not mention how the robots
reach consensus under limited communication; this will be
speciﬁed in each concrete strategy. The total distance D
n
incurredbyStrategy2consistsoftwoparts:1.D
a
n
,thedistance
between robots and their assigned targets, and 2. D
c
n
, the
distance the robots must travel to compensate for the lack
of global communication and sensing (i.e., the extra distance
traveled for reaching consensus). We note that regardless of
the strategy, the best possible D
a
n
cannot be smaller than
D
?
n
=min
?
n
∑
i=1
x
0
?(i)
?y
0
i

2
, (7)
in which min
?
is taken over all permutations? of the integers
1,...,n. Ajtai, Koml´ os, and Tusn´ ady proved the following.
Theorem 8 (Optimal Matching [2]) With high probability,
C
1

nlogn≤D
?
n
≤C
2

nlogn, (8)
in which C
1
,C
2
are positive constants.
Although the authors did not provide formulas for C
1
and
C
2
in [2], simulation seems to suggest that C
1
<C
2
<1 and
C
2
/C
1
?1as n?∞. Moreover, the second inequality in (8)
also hold in expectation [26] with a universal constant C.
With h ≥ 2 hierarchies, to bound D
a
n
, at each hierarchy i,
we need to know the number of robots that can be matched
locally (Lemma 9) and the assignment distance incurred by
these robots (Lemma 10).
Lemma 9 Suppose that the unit square Q is divided into m
equal-sized small squares. The number of robots that are not
matched locally is

mn/2 in expectation.
PROOF SKETCH. The process of picking X
0
and Y
0
is
equivalent to picking (x
0
i
,y
0
i
) pairs for n times. For each
small square q, we are interested in the events x
0
i
?q,y
0
i
/ ?q
and x
0
i
/ ? q,y
0
i
? q (each having probability (m?1)/m
2
).
Combining these two aspects, in each small square we end
up with a random walk of n steps on the integer line with
each step having a probability of (m?1)/m
2
moving ±1.
Applying Jensen’s inequality to the concave function
√
x with
x being the total variance summed over all small squares
gives us the bound

mn/2. 
Lemma 10 Dividing the unit square into m equal sized
squaresandmatchingrobotsandtargetswithintheboundaries
of each small square, the total distance of matchings made
this way is no more than C
√
nlogn in expectation for some
constant C.
PROOF SKETCH. In a square q
i
with n
i
robots, local matching
distance is bounded by C

n
i
logn
i
/m (see [26]). Applying
Jensen’s inequality to the concave function
√
xlogx and
letting x=n
i
yields the result. 
We now give an upper bound on D
a
n
.
1102
Theorem 11 Suppose that the unit square Q is divided into
m
i
equal-sized small squares at hierarchy i with a total of
h≥2 hierarchies. in expectation,
D
a
n
≤C

nlogn+
h?1
∑
i=1
	
nm
i+1
m
i
. (9)
PROOF. The C
√
nlogn term is due to Lemma 10. Then at
each hierarchyi with 2≤i<h, the number of matched robots
in total at this hierarchy is bounded by

m
i+1
n/2. Since
each of these robots needs to travel at most a distance of

2/m
i
, we get the second term on the RHS side of (9). 
Remark. We observe that for ﬁxed h and {m
i
} that do not
dependonn,theﬁrsttermC
√
nlogndominatestheotherterms
in(9)asn?∞.ThisimpliesthatStrategy2yieldsassignments
of which D
a
n
is at most a multiple of the true optimal distance.
As longas D
a
n
is notdominatedby D
c
n
, anhierarchicalstrategy
based on Strategy 2 achieves constant approximation ratio on
distance optimality.
B. A Near-Optimal Rendezvous Strategy
Our ﬁrst concrete strategy uses moving robots for commu-
nication until a robot is aware of the locations of all robots
and targets, at which point a centralized optimal assignment
can be made. To carry out the strategy, the unit square Q is
divided into m =b
2
disjoint, equal-sized small squares, with
b=
√
2/r
comm
. These small squares are labeled as q
i,j
’s, in
which i and j are the row number and column number of the
square, respectively (see, e.g., Fig. 3).
q
2,5
Fig. 3. Directions for robots to move in the rendezvous strategy.
Based on its initial location, each robot can identify the
small square q
i,j
it lies in. At t =0, the robots in the squares
on row 1 and row b start moving in the direction as indicated
inFig.3.We wanttousetheserobottopasstheinformationof
where all robots are. At most one robot per square is required
to move since all robots in a small square can communicate
with each other by the assumption b = 
√
2/r
comm
. The
pseudo code of the strategy is given in Strategy 3.
Strategy 3 is correct by construction. Besides the distance
from the assignment and sensing penalty, the robots in each
column travel at most a total distance of two. The middle
row incurs an extra distance of at most two. Thus, D
n
≤D
?
n
+
21/(2r
sense)
+1/(2r
comm)
+2
√
2/r
comm
+2. Since D
?
n
=
?(
√
nlogn), it dominates the other terms when, for example,
n =?(1/r
2
comm
) and n =?(1/r
2
sense
). Therefore, Strategy 3
yields asymptotically optimal solution without requiring an n
as large as (6) with respect to 1/r
comm
and 1/r
sense
.
Strategy 3: RENDEZVOUS
Initial condition: X
0
,Y
0
,r
comm
Outcome: produces permutation? that assigns robots to
targets and communicate? to all robots
1 each robot computes its square q
i,j
based on r
comm
, let
the highest labeled robot within each q
i,j
be a
i,j
, which
represents q
i,j
for each q
i,j
, 1≤i,j ≤b=
√
2/r
comm

do
2 if i=b/2 then
3 a
i,j
waits for up to |b/2?i|/b units of time
for information from the previous square; after
receiving information or after the wait time
passes, it starts moving to the next squares and
delivers its information once it can communicate
with another robot in these squares; it then stops
4 else
5 a
i,j
waits for up to 1/2+|b/2? j|/b units of
time for information from the previous square;
after receiving information or after the wait time
passes, it starts moving to the next squares and
delivers its information once it can communicate
with another robot in these squares; it then stops
6 robot a
b/2,b/2
computes?; the earlier communication
process is then reversed to deliver ? to all robots.
Among other shortcomings, Strategy 3 requires running a
centralized assignment algorithm for all robots, which can be
computationallyintensive for large n. Decentralized hierarchi-
cal strategies, to be discussed next, can address such issues.
C. Decentralized Hierarchical Strategies
By playing with h and {m
i
}, many decentralized strategies
arepossible;weﬁrstlookatonethatcombinesStrategies2and
3. Instead of waiting for a centralized assignment to be made,
in each of the small square q
i,j
as speciﬁed in Strategy 3, we
lettherobotsinthesquarebeassignedtotargetsthatbelongto
the same square (we refer to these as local assignments). The
robots that are not matched to targets then carry out Strategy
3. We denote this hierarchical rendezvous strategy as Strategy
4 and omit the pseudo code.
Corollary 12 For strategy 4 (2-level Hierarchical Ren-
dezvous), in expectation,
D
n
≤C
2

nlogn+21/(2r
sense)
+1/(2r
comm)
+

√
2
r
comm

√
n+2
√
2
r
comm
+2.
(10)
PROOF. Simple application of Theorem 11. 
Similar to Strategy 3, for any ﬁxed r
comm
and r
sense
,
D
n
/D
?
n
= O(1) (as n ?∞). Suppose that a centralized as-
signment algorithm requires time t(n), using the same al-
gorithm, Strategy 4 has a computational time complexity
O(mt(n/m)+t(
√
mn)) (recall that m=b
2
=
√
2/r
comm

2
). If
1103
t(n)=O(n
3
) (e.g.,theHungarianmethod),thenStrategy4has
a runningtimeofO(n
3
/m
2
+(mn)
3/2
).Forn=10000,m=10,
we get a roughly 1000-time speedup.
Theseconddecentralizedstrategywelookatis anextension
to Strategy 4 with three hierarchies; let us call this strategy
Strategy5. After partitioningthe bottom(third)hierarchyto m
squares, the middle (second) hierarchy is partitioned into
√
m
small squares.At eitherthe thirdorthe secondhierarchy,local
assignments are made, followed by applying the rendezvous
strategyas givenin Strategy3.Thisyieldsfollowingcorollary.
Corollary 13 For Strategy 5 (3-level Hierarchical Ren-
dezvous), in expectation,
D
n
≤C
2

nlogn+21/(2r
sense)
+1/(2r
comm)
+
2


n
√
2
r
comm
+4
√
2
r
comm
+2.
(11)
Again, D
n
/D
?
n
= O(1) as n ?∞, ﬁxing other parameters.
Following similar analysis, the overall computation time re-
quired by Strategy 5 is O(mt(n/m)+
√
mt(
√
n)+t(

n
√
m))
givenacentralizedassignmentalgorithmthatrunsint(n)time.
V. SIMULATION STUDIES
A. Number of Required Robots for a Connected G(0)
 0
 20
 40
 60
 80
 100
 1 2 3 4 5 6
= 0.2 r
comm
   0.1
   0.05
   0.02
   0.01
% of connected G(0)
  n/({ log       /       )
2
r
comm
r
comm
Fig. 4. Effects of n on the connectivity of G(0) for different values of r
comm
.
In this subsection, we show a result of simulation to verify
our theoretical ﬁndings in Section III. Since the bounds
over r
comm
and r
sense
are similar, we focus on r
comm
and
conﬁrm the requirement for the connectivity of G(0) for
several r
comm
’s ranging from 0.01 to 0.2. For each ﬁxed
r
comm
, varying numbers of robots are used starting from
n = log(1/r
comm
)/r
2
comm
=?logr
comm
/r
2
comm
(the number of
robots goes as high as 3?10
5
for the case of r
comm
=0.01).
1000 trials were run for each ﬁxed combination of r
comm
and n; the percentages of the runs with a connected G(0)
were reported in the simulation result shown in Fig. 4. The
simulation suggests that the bounds on n from Theorem 5 are
fairly tight.
B. Performance of Near-Optimal Strategies
Next, we simulate Strategies 3-5 and evaluate D
n
and
computational time for these strategies over varying values of
n and r
comm
. Since the effect of r
sense
on optimality is not as
important, we assume r
sense
≥
√
2 so that all robots are aware
of all target locations. Due to our choice of subdivisions in
Strategy 5, for uniformity, we pick speciﬁc r
comm
’s so that
m = 
√
2/r
comm
 is a always perfect square. These values
are r
comm
=0.16,0.09,0.057, and 0.04, which correspond to
m=81,256,625,and1296,respectively.Thenumberofrobots
used in each simulation ranges from 100 to 10000. For each
n, 10 problems are randomly generated and used across all
strategies.
 2
 4
 6
 8
 10
 12
 100 1000 10000
/ D
n
*
D
n
n - number of agents 
= 0.16
= 0.09
= 0.057
= 0.04
r
comm
Fig. 5. Distance optimality of Strategy 3 over varying n and r
comm
.
Distance optimality: The ratios D
n
/D
?
n
for Strategy 3 over
different n and r
comm
are plotted in Fig. 5. We observe that
theoverheadforestablishingglobalcommunicationamongthe
robots becomes insigniﬁcant as n increases, driving D
n
/D
?
n
to
close to one.
 2
 4
 6
 8
 10
 12
 100 1000 10000
/ D
n
*
D
n
n - number of agents 
= 0.16
= 0.09
= 0.057
= 0.04
r
comm
Fig. 6. Distance optimality of Strategy 4 over varying n and r
comm
.
 5
 10
 15
 20
 25
 100 1000 10000
/ D
n
*
D
n
n - number of agents 
= 0.16
= 0.09
= 0.057
= 0.04
r
comm
Fig. 7. Distance optimality of Strategy 5 over varying n and r
comm
.
ForStrategy4,theratioswereplottedsimilarlyinFig.6.As
expected, for a ﬁxed r
comm
, D
n
/D
?
n
decreases as n increases.
For n = 10000, the approximation ratios for our choices of
r
comm
are around 1.4. On the other hand, for a ﬁxed n,as
the division of the unit square Q gets ﬁner, D
n
/D
?
n
increases,
implying that decreasing communicationradius has a negative
effect on optimality. We observe similar results on distance
optimality of Strategy 5 (see Fig. 7).
Computational time: We list the computational time, in
seconds, for Strategies 3-5 in Table I, for n=1000,5000, and
10000. The standard O(n
3
) Hungarian method is used as the
1104
baseline assignment algorithm. Each main entry of the table
lists three numbers corresponding to the computational time
of Strategies 3, 4, and 5, respectively, for the given r
comm
and
n combination. As expected, hierarchical assignment greatly
reduces the computational time, often by a factor over 10
3
.
The computation was performed on a Intel Core-i7 3970K
cpu under a 8GB Java virtual machine.
TABLE I
COMPUTATIONALTIME FOR STRATEGIES3-5
# of robots, n
r
comm
(m)
0.16 (81) 0.09 (256) 0.057 (625) 0.04 (1296)
1000
2.76 s
0.015 s
0.002 s
2.76 s
0.07 s
0.003 s
2.76 s
0.22 s
0.003 s
2.76 s
0.54 s
0.006 s
5000
345 s
0.02 s
0.069 s
345 s
0.78 s
0.032 s
345 s
2.84 s
0.043 s
345 s
8.28 s
0.058 s
10000
2756 s
0.83 s
0.43 s
2756 s
2.32 s
0.11 s
2756 s
8.35 s
0.11 s
2756 s
24.4 s
0.14 s
VI. CONCLUSION
Focusing on the distance optimality for the target assign-
ment problem in a robotic network setting, we have char-
acterized a necessary and sufﬁcient condition under which
optimality can be achieved. We further provided an explicit
formula for computing the number of robots sufﬁcient for
probabilistically guaranteeing such an optimal solution. Then,
we took a different angle and looked at strategies with good
asymptotic performances as the number of robots goes to
inﬁnity. We showed that these strategies generally yield a
constant approximationratio when it comes to minimizing the
total distance traveled by all robots. Some of these decentral-
ized strategies also provide computational advantages over a
centralized one.
REFERENCES
[1] P. K. Agarwal, A. Efrat, and M. Sharir. Vertical decomposition of
shallow levels in 3-dimensional arrangements and its applications. In
The Eleventh annual Symposium on Computational Geometry, pages
39–50, 1995.
[2] M. Ajtai, J. Koml´ os, and G. Tusn´ ady. On optimal matchings. Combi-
natorica, 4(4):259–264, 1984.
[3] P. Balister, B. Bollob´ as, A. Sarkar, and M. Walters. Connectivity of
random k-nearest-neighbour graphs. Advances in Applied Probability,
37:1–24, 2005.
[4] D. P. Bertsekas. The auction algorithm: A distributed relaxation method
for the assignment problem. Annals of Operations Research, 14:105–
123, 1988.
[5] D. P. Bertsekas and D. A. Casta? non. Parallel synchronous and asyn-
chronous implementations ofthe auction algorithm. Parallel Computing,
17:707–732, 1991.
[6] F. Bullo, J. Cort´ es, and S. Mart´ ınez. Distributed Control of Robotic
Networks. Applied Mathematics Series. Princeton University Press,
2009. Electronically available at http://coordinationbook.info.
[7] R. Burkard, M. Dell’Amico, and S. Martello. Assignment Problems.
Siam Society for Industrial and Applied Mathematics, Philadelphia,
2012.
[8] H. Choset. Coverage of known spaces: The boustrophedon cellular
decomposition. Autonomous Robots, 9:247–253, 2000.
[9] S.-J. Chung, S. Bandyopadhyay, I. Chang, and F. Y. Hadaegh. Phase
synchronization control of complex networks of Lagrangian systems on
adaptive digraphs. Automatica, 49(5):1148–1161, 2013.
[10] J. Cort´ es, S. Mart´ ınez, and F. Bullo. Robust rendezvous for mobile
autonomous agents via proximity graphs in arbitrary dimensions. IEEE
Transactions on Automatic Control, 51(8):1289–1298, August 2006.
[11] J. Edmonds and R. M. Karp. Theoretical improvements in algorithmic
efﬁciency for network ﬂow problems. Journal of the ACM, 19(2):248–
264, 1972.
[12] P. Erd˝ os and A. R´ enyi. On a classical problem of probability theory.
Publ. Math. Inst. Hung. Acad. Sci., Ser. A 6:215–220, 1961.
[13] N. M. Freris, H. Kowshik, and P. R. Kumar. Fundamentals of large
sensor networks: Connectivity, capacity, clocks and computation. Pro-
ceedings of the IEEE, 98(11):1828–1846, November 2010.
[14] A. Ganesh and F. Xue. On the connectivity and diameter of small-world
networks. Advances in Applied Probability, 39:853–863, 2007.
[15] A.Jadbabaie, J.Lin, and A.S. Morse. Coordination of groups of mobile
autonomous agents using nearest neighbor rules. IEEE Transactions on
Automatic Control, 48(6):988–1001, 2003.
[16] M. Ji, S. Azuma, and M. Egerstedt. Role-assignment in multi-agent co-
ordination. International Journal of Assitive Robotics and Mechatronics,
7(1):32–40, August 2006.
[17] S. Kloder and S. Hutchinson. Path planning for permutation-invariant
multirobot formations. IEEE Transactions on Robotics, 22(4):650–665,
2006.
[18] H. W. Kuhn. The Hungarian method for the assignment problem. Naval
Research Logistics Quarterly, 2:83–97, 1955.
[19] J.Lin,A.S.Morse, and B.D.O.Anderson. The multi-agent rendezvous
problem. part 1: The synchronous case. SIAM Journal on Control and
Optimization, 46(6):2096–2119, November 2007.
[20] J.Lin,A.S.Morse, and B.D.O.Anderson. The multi-agent rendezvous
problem. part 2: The asynchronous case. SIAM Journal on Control and
Optimization, 46(6):2120–2147, November 2007.
[21] G. Mao and B. D.O. Anderson. Connectivity of large wireless networks
under a general connection model. IEEE Transactions on Information
Theory, 59(3):1761–1772, 2013.
[22] M. Penrose. The longest edge of the random minimal spanning tree.
Annals of Applied Probability, 7:340–361, 1997.
[23] M. Penrose. Random Geometric Graphs. Oxford Studies in Probability.
Oxford University Press, London, 2003.
[24] V. Sharma, M. A. Savchenko, E. Frazzoli, and P. G. Voulgaris. Transfer
time complexity of conﬂict-free vehicle routing with no communica-
tions. International Journal of Robotics Research, 26(3):255–271, 2007.
[25] S. L. Smith and F. Bullo. Monotonic target assignment for robotic
networks. IEEE Transactions on Automatic Control, 54(9):2042–2057,
September 2009.
[26] M. Talagrand. The ajtai-koml´ os-tusn´ ady matching theorem for general
measures. In Probability in Banach spaces, 30, 1992.
[27] H. G. Tanner, A. Jadbabaie, and G. J. Pappas. Flocking in ﬁxed
and switching networks. IEEE Transactions on Automatic Control,
52(5):863–868, 2007.
[28] K. Treleaven, M. Pavone, and E. Frazzoli. Asymptotically optimal al-
gorithms for one-to-one pickup and delivery problems with applications
to transportation systems. IEEE Transactions on Automatic Control,
59(9):2261–2276, 2013.
[29] M. Turpin, K. Mohta, N. Michael, and V. Kumar. Goal assignment and
trajectory planning for large teams of aerial robots. In Proc. Robotics:
Science and Systems, 2013.
[30] P. M. Vaidya. Geometry helps in matchings. SIAM Journal on
Computing, 18(6):1201–1225, 1989.
[31] F. Xue and P. R. Kumar. The number of neighbors needed for
connectivity of wireless networks. Wireless Networks, 10(2):169–181,
March 2004.
[32] J. Yu, S.-J. Chung, and P. G. Voulgaris. Target assignment in robotic
networks: Distance optimality guarantees and hierarchical strategies.
IEEE Transactions on Automatic Control, 2013. conditionally accepted,
draft available at http://arxiv.org/abs/1308.3956.
[33] J. Yu and S. M. LaValle. Distance optimal formation control on
graphs with a tight convergence time guarantee. In Proceedings IEEE
Conference on Decision & Control, pages 4023–4028, 2012.
[34] M. M. Zavlanos and G. J. Pappas. Dynamic assignment in dis-
tributed motion planning with local coordination. IEEE Transactions
on Robotics, 24(1):232–242, 2008.
[35] M. M. Zavlanos, L. Spesivtsev, and G. J. Pappas. A distributed auction
algorithm for the assignment problem. In Proceedings IEEEConference
Decision & Control, pages 1212–1217, 2008.
1105
