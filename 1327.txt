Predictive Online Inverse Kinematics for Redundant Manipulators
Christoph Schuetz, Thomas Buschmann, Joerg Baur, Julian Pfaff and Heinz Ulbrich
AbstractÑDetermining the optimal solution for the inverse
kinematics of redundant robots has been the focus of much pre-
vious research. Instantaneous approaches are computationally
efÞcient, but may cause high joint velocities due to their local
character. In this paper, we present an efÞcient implementation
ofaglobalapproachfollowingPontryaginÕsMinimumPrinciple
for online calculation. Within a moving horizon, we exploit the
decoupled structure of the resulting optimalcontrol problem by
using the conjugate gradient method for solving the nonlinear
dynamic problem. Different examples of cost functionals are
presented and the real-time capability is shown by applying
this approach to a 9-DOF redundant manipulator.
I. INTRODUCTION AND BACKGROUND
With the decreasing cost of actuators and electronic com-
ponents, the development of robotic systems with many
degrees-of-freedom (DOFs) is becoming more and more
viable. This makes it increasingly likely that a given task is
described by fewer equations than could be satisÞed with the
systemÕs number of DOFs. In such redundant conÞgurations
there are (usually) an inÞnite number of solutions for a given
task. This enables the controller to choose a solution which
is optimal with respect to some user-deÞned criterion.
A common approach to resolve the inverse kinematics (IK)
problem of redundant manipulators using a local optimiza-
tion technique was Þrst proposed in [1], [2]. The task is
deÞned in task coordinates x
d
(t), which is often chosen as
the end effector position and orientation for robotic manip-
ulators. Formulating the task constraint x
d
(t) = x(q(t)) at
the velocity level leads to an underdetermined set of linear
equations in the joint velocities ú q
ú x
d
(t) = ú x(q(t), ú q(t)) =J(q)ú q, (1)
where the JacobianJ(q) is deÞned as
¶x(q)
¶q
. The desired ú q
is determined by minimizing the cost
1
2
ú q
T
W ú q+L(q) over
the duration of the next timestep ?t in the taskÕs nullspace.
Joint velocities are weighted by W and L(q) are problem-
dependent costs. With the increment ?LÅ
¶L(q)
¶q
ú q?t, the
explicit solution is given by
ú q =J
#
ú x+?N

?
¶L
¶q

T
(2)
J
#
=W
?1
J
T

JW
?1
J
T

?1
(3)
N =

I?J
#
J

(4)
This research was partly funded by the European Commission in the 7th
Framework Programme (CROPS GA no 246252).
C. Schuetz, T. Buschmann, J. Baur, J. Pfaff and H. Ulbrich are with the
Institute of Applied Mechanics, Technische Universit¬ at M¬ unchen, Boltz-
mannstr. 15, 85748 Garching, Germany {schuetz, buschmann,
baur, pfaff, ulbrich}@amm.mw.tum.de
(a) CROPS Manipulator
q
1
q
2
q
3
q
4
q
5
q
6
q
7
q
8
q
9
x y
z
(b) Kinematic scheme
Fig. 1: Modular 9-DOF agricultural robot developed within
the CROPS project [4]
whereJ
#
is the Moore-Penrose pseudoinverse,N the null-
space projection matrix, I the identity matrix and ? a
scalar weighting factor. The trajectory q(t) is obtained by
integrating ú q(t). A comprehensive overview of different
pseudoinverse-based approaches can be found in [3].
Since the approach described above is formulated for every
time instance at the level of joint velocities, it can only mod-
ify the robotÕs conÞguration along the null-space directions
N(q) resulting from the current conÞguration q. It cannot
take into account how ú x
d
(t), collision avoidance, joint limit
avoidance or joint velocities will be affected by the way the
chosen ú q inßuences the future conÞgurationq. This may be
considered to be the main drawback of the algorithm, since
future constraints are often known in advance. FulÞlling
these constraints using the local approach can cause severe
peaks in the joint velocities which are not necessary from a
global point of view of the given task (see Section II-A).
This problem can be addressed using optimal control meth-
ods with integral cost functions. One approach is the formu-
lation of the Hamiltonian following PontryaginÕs Minimum
Principle (PMP) [5], which deÞnes necessary conditions that
can be solved using several algorithms [6]:
- Boundary conditions of the PMP differential equations
deÞne a two-point boundary value problem [7].
- Exploring a local search space at a quadratic approx-
imation of the value function (cost-to-go) yields to a
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 5056
feedback law, which is used by the differential dynamic
programming (DDP) approach [8].
- Based on the partial derivative of the Hamiltonian w.r.t.
the input vector, optimal trajectories are found by the
conjugate gradient method [9].
A. Related Work
With CHOMP, a planning framework, suited for highly
redundant robot systems, has been presented by [10], [11].
Optimal trajectories are obtained using covariant gradient
techniques. Thereby, a cost formulation invariant to time
prevents, that e.g. passing obstacles very fast and close
is considered more optimal than keeping a safe distance.
Collisions are avoided based on a precomputed distance
Þeld. Another approach has been presented by [12]: The
problem is solved employing sequential convex optimiza-
tion, i.e. quadratic, convex approximations of the problem
are solved iteratively. Infeasible constraints are turned into
penaltyfunctionstoguidethealgorithmtoafeasiblesolution
area. A two-stage approach has been presented by [13]: First,
a feasible solution is found using a RRT algorithm which
serves as an initial guess for the subsequent optimization. In
contrast to ours, the aforementioned approaches, as well as
other sampling-based [14], [15] or global methods [16], [17]
are generally not used online for high-dimensional systems
due to the high computational costs.
TASSA ET AL. have presented a variant of the DDP approach
[18]. Thank to its computational efÞciency and the imple-
mentation of a moving horizon scheme, it is almost suited
for real-time use. Since this approach is related to ours, a
comparison with our following scheme will be in the focus
of our upcoming work.
B. Contribution
In this paper, we propose to use the numerically efÞcient
conjugate gradient method to solve the PMP as formulated
by [7]. Since the optimization input is projected to the
nullspaceoftheredundantmanipulator,workspacecontraints
ú x
d
(t) are preserved. Real-time optimization is enabled by
applying a moving horizon approach (comparable to Model
Predictive Control). We implemented this approach for a
9-DOF modular agricultural robot (Fig. 1a), that has been
developed at our institute for harvesting of single crops (e.g.
sweetpepperorapples)orprecisionsprayingofgrapes[4].It
has 1 prismatic and 8 rotational joints, the kinematic scheme
is shown in Fig. 1b. Since the workspace is 6-dimensional (3
cartesianpositionsand 3rotations),thedegreeofredundancy
is 3. For the inverse kinematics solution, an local inverse
kinematics approach was presented in [4], [19], which will
be the reference for our new approach.
In Section II, we present the basic idea of our approach
including the problem formulation, optimality criteria and
an efÞcient numerical solution. Section III deals with dif-
ferent examples of cost functionals that we have used in
our application. The implementation for the 9-dof CROPS
manipulator and results are shown in Section IV, while
Section V gives a summary and an outlook for future work.
II. A PREDICTIVE APPROACH FOR INVERSE
KINEMATICS
A. Motivational Example
A motivational example is given in Fig. 2. The planar
4?DOF robot performs a predeÞned movement on a straight
line from top to bottom. While the workspace trajectory
x
d
(t) is supposed to be collision-free, a collision may occur
between link 4 and the obstacle (orange sphere). The local
optimization starts avoiding the collision as soon as the
obstacle enters a certain activation distance d
a
(black robot).
By this time, however, the local optimization has led to an
unfavorable conÞguration close to the obstacle. The globally
optimal solution chooses a better conÞguration during the
Þrst period of the motion (blue robot), signiÞcantly reducing
peak joint speeds. The evolution of the pseudoenergy E
ps
=
ú q
T
k
ú q
k
at each timestep t
k
(Fig. 3) shows that the black robot
has to set high joint velocities to avoid the collision while
the blue robot using the global solution moves smoothly.
(a) t = 0.5s (b) t = 3.0s (c) t = 4.5s
Fig. 2: Collision avoidance in the null-space of the robot.
Black robot: Local Optimization. Blue robot: Global Opti-
mization
In a similiar way, e.g. joint limits, high joint velocities or
other constraints can be avoided by using a global solution
of the inverse kinematics problem for a redundant robot. In
 
 
MPC Global Local IK
ú q
T
ú q[
rad
2
/s
2
]
t[s]
0 1 2 3 4 5
0
1
2
3
4
5
Fig. 3: Pseudoenergy of the global (orange), the local (black)
and the MPC (blue) optimization
5057
the following section we present a predictive approach which
takes advantage of a global optimal solution within a certain
time window by formulating the optimization problem in an
efÞcient way and solving it online.
B. PontryaginÕs Minimum Principle
Since the method described by (2)Ð(4) is local, constraints
are detected locally by the algorithm even if all necessary
boundary conditions are known for the entire trajectory. It
is therefore advantageous to use the knowledge of these
constraints to take them into account within the inverse
kinematics algorithm. Nakamura [7] proposed the following
global optimization problem for solving the inverse kine-
matics for redundant manipulators with the input u to the
nullspace:
min
q(?)
L(q,u,t) =
Z
?
l(q,u,t)dt (5)
ú q =f (q,u,t) =J
#
ú x+?

I?J
#
J

u (6)
x(t
0
) =x
0
(7)
t? [t
0
,t
end
]
From PontryaginÕs Minimum Principle we obtain the follow-
ing set of optimality conditions
H(q,u,?,t) = l(q,u,t)+?
T
f (q,u,t) (8)

¶H
¶?

T
= ú q (9)
?

¶H
¶q

T
=
ú
? =?

¶l
¶q

T
?

¶f
¶q

T
? (10)
x(q(t
0
)) =x
0
(11)
?(t
end
) = 0 (12)
N?(0) = 0 (13)
u
?
= argmin
u
H(q
?
,?
?
,u,t), (14)
where starred versions of the variables denote the opti-
mal solution. The boundary conditions on x (11) are self-
explanatory and those on ? (12) follow from the free Þnal
state and the fact that the problem has Lagrange form.
The transversality condition (13) ensures that the adjoint
variables lie within the normal cone to the tangent cone of
the constraint set deÞned by x(q(t
0
)) =x
0
. Requiring that
the prescribed task x
0
be satisÞed at the beginning enables
the calculation of a globally optimal solution, but also leads
to a coupled two-point boundary value problem (BVP) due
to the transversality condition.
If we intend to solve the problem continuously in the spirit
of MPC as proposed above, we must ensure that q(t) is
continuous, i.e. that q(t
0
) = q
0
. This modiÞed optimal
control problem leads to optimality criteria with decoupled
boundary conditions for ? and q:
H(q,u,?,t) = l(q,u,t)+?
T
f (q,u,t) (15)

¶H
¶?

T
= ú q (16)
?

¶H
¶q

T
=
ú
? =?

¶l
¶q

T
?

¶f
¶q

T
? (17)
q(t
0
) =q
0
(18)
?(t
end
) = 0 (19)
u
?
= argmin
u
H(q
?
,?
?
,u,t) (20)
Conditions (16)-(19) allow us to calculate?(t),q(t) for any
given u(t) by simply integrating (16) forward in time and
(17) backward in time. We may therefore conceptually sub-
stitutethisinto(20),leadingtoanunconstrainedoptimization
problem for u
?
:
u
?
= argmin
u
H(q(u),?(u),u) (21)
= argmin
u
ö
H(u) (22)
Such problems are easily solved using the gradient method
1
characterized by an iterative calculation of the unknowns
according to the basic rule
u
k+1
=u
k
??
¶
ö
H
¶u
T
, (23)
where ? is calculated from some step-size rule. See [20] for
a review of the mathematical background.
C. EfÞcient Numerical Solution
While simple, the gradient method is known for its slow
convergence.Wethereforeusetheconjugategradientmethod
as described by [9] to solve the dynamic optimal control
problem (15)-(20). This method provides a computationally
efÞcient solution of the nonlinear problem in real time.
Thereby, the basic algorithm, applied to the inverse kine-
matics problem of the redundant manipulator performs an
iterative sequential forward integration of the system ODE
(16) and backward integration of the adjoint variable ODE
(17). The computational scheme is shown in algorithm (1).
Direct kinematics of the robot are calculated by the recursive
approach as presented in [21]. The step size ? can either be
chosen as an adequately small constant or by using some sort
of step-size control algorithm, e.g. using the backtracking
method [22]. The conjugate gradient method has shown
faster convergence compared to a steepest descent algorithm
as formerly reported in [9] (See Fig. 4 for the example in
II-A).
D. Predictive Approach
Depending on the number of DOFs and the length of the
trajectory, the global approach may not be solvable in real
time. We therefore propose an approach which follows the
ideaofmodel-predictivecontrol[23]toconsiderfuturelimits
1
Ifu is constrained (u?U), the projected gradient method can be used.
5058
Algorithm 1 Conjugate Gradient Method
j? 0
q
0
(?)?
R
?
ú q(u
0
,t)dt
repeat
?
j
(?)?
R
?
ú
?(q
j
, ú q
j
u
j
,t)dt
g
j
?
¶H
¶u
if j6= 0 then
?
j
?
(g
j
,g
j
)
(g
(j?1)
,g
(j?1)
)
where
 
g
j
,g
j

=
R
?
(g
j
(t))
T
g(t)
j
dt
s
j
??g
j
+?
j
s
(j?1)
else
s
j
??g
j
end if
u
(j+1)
?u
j
+?
j
s
j
j? j +1
q
j
?
R
?
ú q(u
j
,t)dt
exit? (j > j
max
)?

L
j
?L
j?1
L
j?1
< ?

?
 
L
j
> L
j?1

until (exit = true)
return u
j
 
 
Steepest Descent
Conjugate Gradient
Cost [?]
Iteration [?]
0 20 40 60 80 100
200
210
220
230
240
250
260
Fig. 4: Comparison between the conjugate gradient (red) and
the steepest descent (black) method for the planar 4-DOF
manipulator.
by predicting the behavior of the system as a function of
the input trajectory u(?) within a moving horizon ? ?
[t
k
,t
k
+T
horizon
]. The basic scheme is shown in Algorithm
(2).
Calculating the optimal trajectory using a 1
st
order approach
for the system equation as shown in (6) may lead to non-
zero initial joint velocities ú q
k
since joint acceleration in the
nullspace is not considered within the cost functional. The
resulting trajectory using the MPC approach may be non-
smooth as shown in Fig. 5.
We propose therefore to use an adapted system equation
for optimization on acceleration level. A formulation of
the kinematics equation on acceleration level is considered
computational disadvantageous since additional gradients of
e.g.J,J
#
areneeded.Theaugmentationofthestatespacein
Algorithm 2 Model Predictive Control Approach
T
start
= t
0
, T
end
= t
n
, ?t
mpc
= t
k+1
?t
k
for k = 0 to n do
?? t
k
+T
horizon
?
?
? t
k
+?t
mpc
determine u
?
(?) using u
0
(?) =u
?
previous
(?)
apply u
?
(?
?
)
end for
 
 
Single Trajectory Trajectory Local IK
ú q [
rad
/s]
t[s]
0 1 2 3 4 5
?1
?0.8
?0.6
?0.4
?0.2
0
Fig. 5: Resulting nonsmooth trajectory ú q
2
(t) from MPC
optimization on velocity level (blue) of the example given in
SectionII-AandsingleMPCsolutiontrajectories(orange)in
comparison to the local inverse kinematics approach (black).
(6) byu and its derivative ö u as the input vector is an obvious
approach. (6)-(7) are replaced by the following equations:
min
q(?)
L(q, ö u,t) =
Z
?
l(q, ö u,t)dt (24)
f
acc
(q, ö u,t) =

f
1
f
2

=

ú q
ú u

= ...
=
"
J
#
ú x+?
 
I?J
#
J

u
ö u
#
(25)
Hence, Eq. (15)-(20) become:
?
acc
=

?
1
?
2

(26)
H(q, ö u,?
acc
,t) = l(q, ö u,t)+...
?
T
1
f
1
(q, ö u,t)+?
T
2
f
2
(ö u) (27)

¶H
¶?
acc

T
=

ú q
ú u

(28)
?

¶H
¶q

T
=
ú
?
1
=?

¶l
¶q

T
?

¶f
1
¶q

T
?
1
(29)
?

¶H
¶u

T
=
ú
?
2
=?

¶l
¶u

T
?

¶f
1
¶u

T
?
1
(30)
q(t
0
) =q
0
, u(t
0
) =u
0
(31)
?
acc
(t
end
) = 0 (32)
ö u
?
= argmin
ö u
H(q
?
,?
?
acc
, ö u,t) (33)
The numerical solution is analogous to the optimization on
velocity level in nullspace as presented in Section II-C.
5059
 
 
Single Trajectory Trajectory Local IK
ú q [
rad
/s]
t[s]
0 1 2 3 4 5
?1
?0.8
?0.6
?0.4
?0.2
0
Fig. 6: Resulting smooth trajectory ú q
2
(t) from MPC opti-
mization on acceleration level (green) of the example given
inSectionII-AandsingleMPCsolutiontrajectories(orange)
in comparision to the local inverse kinematics approach
(black).
Required gradients are given in the APPENDIX. Using this
approach, we obtain smooth trajectories as shown in Fig. 6.
III. EXAMPLE COST FUNCTIONS
Optimality of the trajectory q(t) is deÞned by the cost
functionLin(5)and(24).Lcanbeformulatedasanintegral
over time of a sum of n
c
sub cost functions l
i
weighted by
scalar factorsc
i
. The required gradients
¶l
¶q
and
¶l
¶u
or
¶l
¶ö u
for
solving the optimal control problem following the proposed
approach in Section II are given in the APPENDIX.
L(q,u,t) =
Z
?
nc
X
i=1
l
i
(q,u,t)dt (34)
The desired behavior of the system such as minimal joint ve-
locities, avoidance of collisions and joint limits is expressed
by these sub cost functions l
i
. Examples are given in the
following section.
A. Joint Velocity and Acceleration in Nullspace
For minimizing joint velocities and joint acceleration in
nullspace, the sum of squares of ú q and ö u can be chosen
as cost functionals, respectively.
l
v
= ú q
T
ú q (35)
l
na
= ö u
T
ö u (36)
B. Joint Limit Avoidance
According to [4], [24] a piecewise deÞned, continuous poly-
nomial function penalizes joint positions q near the maxi-
mum (minimum) joint limits q
M,i
(q
m,i
) within a threshold
ø q
M,i
(ø q
m,i
).
l
l
=
?
?
?
?
?
?
?
?
?
?
?
?
?
n
P
i=1
(qi?ø qM,i)
2
(qM,i?ø qM,i)
2
if q
i
> ø q
M,i
n
P
i=1
(qi?ø qm,i)
2
(qm,i?ø qm,i)
2
if q
i
< ø q
m,i
0 else
(37)
C. Collision Avoidance
For collision avoidance, we use the algorithms developed
for self-collision avoidance of the humanoid robot LOLA
[25] and applied to the CROPS robot [19]. Thereby, complex
geometries of the robot model are simpliÞed by using swept-
sphere volumes (SSV). The cost function of the closest
distance d
k
between two bodies is given by Eq. (38).
l
c
=
(
s
3
(d
a
?d
k
)
3
if d
k
< d
a
0 else
(38)
The parameter s determines the maximum value of the cost
functionwhencollisionoccursandd
a
theactivationdistance.
For the calculation of the gradients refer to [25].
IV. EXPERIMENTAL RESULTS
The proposed computational scheme has been implemented
for a 9-DOF modular robot (see Section I). For preliminary
tests,aself-collisionscenariohasbeenchosen,similiartothe
setup in [19]. Increasing the length of the moving horizon
T
horizon
improves the result, as shown in Fig. 7. Regarding
the computational times, the smaller horizon was already
feasible to calculate on a MATLAB/SIMULINK real time
control unit with a sampling rate of 10ms and one iteration
step.Alargerhorizonof2stakescurrentlyupto7-timesreal-
time computation. While a small horizon of 0.15s slightly
improves the avoidance of velocity peaks, a larger horizon
(2s) leads to signiÞcant better results.
Preliminary tests have shown the real-time capability of
our approach. However, these tests have been performed
using a relatively small moving horizon. Extending the
moving prediction time window by improving the current
implementation is currently on-going.
V. CONCLUSION
In this paper, a novel approach for determining a predictive
solution for inverse kinematics of redundant manipulators,
which can be calculated online, has been presented. Thereby,
an optimal control problem following the formulation of
 
 
2s 0.15s Local IK
E
ps,r
[
rad
2
/s
2
]
t[s]
0 1 2 3 4 5
0
0.5
1
Fig. 7: Pseudoenergy of revolute joints in self-collision
scenario for the harvesting robot calculated by local inverse
kinematics and MPC approach with a moving horizon of
0.15s and 2s.
5060
PontryaginÕs Minimum Principle as proposed in [7] has been
solved within a moving horizon. Facing the large computa-
tional costs, we proposed to exploit the decoupled structure
of the nonlinear problem applying the conjugate gradient
method. The proposed approach has shown its advantages
compared to instantaneous approaches by responding to
future constraints. It has been proven by the implementation
for a 9-DOF redundant robot that this method is suitable
for real-time application. Especially the enlargement of the
moving time window by optimizing the implementation will
be in the focus of our future research. Furthermore we
intend to perform quantitative comparisons to other related
approaches, such as variations of the DDP approach as well
as investigations on robustness and stability.
APPENDIX
Gradients for Optimization on Velocity Level
¶f
¶q
=
¶ú q
¶q
=J
#
q
ú w?J
#
q
J
u
?J
#
J
q
u (39)
¶f
¶u
=I?J
#
J (40)
¶l
v
¶q
=
¶
¶q

ú q
T
ú q

= 2

¶f
¶q

T
ú q (41)
¶l
v
¶u
= 2

¶f
¶u

T
ú q (42)
¶l
l
¶q
=
?
?
?
?
?
?
?
?
?
?
?
?
?
n
P
i=1
2
(qi?ø qM,i)
(qM,i?ø qM,i)
2
if q
i
> ø q
M,i
n
P
i=1
2
(qi?ø qm,i)
(qm,i?ø qm,i)
2
if q
i
< ø q
m,i
0 else
(43)
J
q
#
=
¶J
#
¶q
= ¶
q
J
T

JJ
T

?1
+J
T

?

JJ
T

?1
...

(¶
q
J)J
T
+J(¶
q
J
T
)

JJ
T

?1

(44)
Gradients for Optimization on Acceleration Level
¶f
1
¶q
=
¶f
¶q
,
¶f
1
¶u
=I?J
#
J (45)
¶f
2
¶q
=
¶f
2
¶u
= 0 (46)
¶l
na
¶ö u
= 2ö u,
¶f
2
¶ö u
=I (47)
REFERENCES
[1] D.Whitney,ÒResolvedmotionrate controlofmanipulatorsand human
prostheses,Ó IEEE Transactions on Man-Machine Systems, vol. 10,
no. 2, pp. 47 Ð53, June 1969.
[2] A. Li« egeois, ÒAutomatic supervisory control of the conÞguration and
behavior of multibody mechanisms,Ó IEEE Transactions on Systems,
Man, and Cybernetics, vol. 7, pp. 868Ð871, 1977.
[3] B. Siciliano, ÒKinematic control of redundant robot manipulators: A
tutorial,Ó Journal of Intelligent and Robotic Systems, vol. 3, pp. 201Ð
212, 1990, 10.1007/BF00126069.
[4] J. Baur, J. Pfaff, H. Ulbrich, and T. Villgrattner, ÒDesign and develop-
ment of a redundant modular multipurpose agricultural manipulator,Ó
in Advanced Intelligent Mechatronics (AIM), 2012 IEEE/ASME Inter-
national Conference on, Kaohsiung, Taiwan, July 2012, pp. 823Ð830.
[5] L. S. Pontryagin, The mathematical theory of optimal processes. New
York [u.a.]: Interscience Publ., 1962.
[6] E. Todorov and W. Li, ÒOptimal control methods suitable for biome-
chanical systems,Ó in Proceedings of the 25th Annual International
Conference of the IEEE Engineering in Medicine and Biology Society
(IEEE Cat. No.03CH37439), vol. 2. IEEE, 2003, pp. 1758Ð1761.
[7] Y. Nakamura and H. Hanafusa, ÒOptimal redundancy control of robot
manipulators,Ó Int. J. Rob. Res., vol. 6, pp. 32Ð42, March 1987.
[8] D. H. Jacobson and D. Q. Mayne, Differential Dynamic Programming.
New York, New York, USA: American Elsevier Publishing Company,
Inc., 1970.
[9] L. Lasdon, S. Mitter, and A. Waren, ÒThe conjugate gradient method
for optimal control problems,Ó IEEE Transactions on Automatic Con-
trol, vol. 12, no. 2, pp. 132Ð138, Apr. 1967.
[10] N. Ratliff, M. Zucker, J. A. Bagnell, and S. Srinivasa, ÒCHOMP:
Gradient optimization techniques for efÞcient motion planning,Ó in
2009 IEEE International Conference on Robotics and Automation.
IEEE, May 2009, pp. 489Ð494.
[11] M. Zucker, N. Ratliff, A. D. Dragan, M. Pivtoraiko, M. Klingensmith,
C. M. Dellin, J. A. Bagnell, and S. S. Srinivasa, ÒCHOMP: Covariant
Hamiltonian optimization for motion planning,Ó The International
Journal of Robotics Research, vol. 32, no. 9-10, pp. 1164Ð1193, Sept.
2013.
[12] J. Schulman, J. Ho, A. Lee, I. Awwal, H. Bradlow, and P. Abbeel,
ÒFinding Locally Optimal, Collision-Free Trajectories with Sequen-
tial Convex Optimization,Ó in Proceedings of Robotics: Science and
Systems, 2013.
[13] A.ElKhoury,F.Lamiraux,andM.Taix,ÒOptimalmotionplanningfor
humanoidrobots,Óin 2013 IEEE International Conference on Robotics
and Automation, vol. 0, no. 1. Ieee, May 2013, pp. 3136Ð3141.
[14] S. M. LaValle, Planning Algorithms. Cambridge, U.K.: Cambridge
University Press, 2006, available at http://planning.cs.uiuc.edu/.
[15] M. Vande Weghe, D. Ferguson, and S. S. Srinivasa, ÒRandomized path
planning for redundant manipulators without inverse kinematics,Ó in
2007 7th IEEE-RAS International Conference on Humanoid Robots.
IEEE, Nov. 2007, pp. 477Ð482.
[16] H. Kim, K. Lee, S. Lee, and M. Park, ÒObstacle avoidance navigation
using a local path planning method,Ó in Proceedings of 35th IEEE
Conference on Decision and Control, vol. 1. IEEE, 1996, pp. 869Ð
874.
[17] S. Seereeram and J. Wen, ÒA global approach to path planning
for redundant manipulators,Ó IEEE Transactions on Robotics and
Automation, vol. 11, no. 1, pp. 152Ð160, 1995.
[18] Y. Tassa, T. Erez, and E. Todorov, ÒSynthesis and stabilization of
complex behaviors through online trajectory optimization,Ó in 2012
IEEE/RSJ International Conference on Intelligent Robots and Systems.
IEEE, Oct. 2012, pp. 4906Ð4913.
[19] J. Baur, J. Pfaff, C. Schuetz, and H. Ulbrich, ÒDynamic modeling
and realization of an agricultural manipulator,Ó in Proceedings of
XV International Symposium on Dynamic Problems of Mechanics,
DINAME, 2013.
[20] E.Polak,ÒAnHistorical SurveyofComputationalMethodsinOptimal
Control,Ó SIAM Review, vol. 15, pp. 553Ð584, 1973.
[21] T. Buschmann, S. Lohmeier, H. Ulbrich, and F. Pfeiffer, ÒDynamics
simulation for a biped robot: modeling and experimental veriÞcation,Ó
in Proceedings of the IEEE International Conference on Robotics and
Automation, ICRA, May 2006, pp. 2673 Ð2678.
[22] J. Nocedal and S. J. Wright, Numerical Optimization. Springer, 2006.
[23] M. Diehl, H. Ferreau, and N. Haverbeke, ÒEfÞcient Numerical Meth-
odsforNonlinearMPCandMovingHorizonEstimation,ÓinNonlinear
Model Predictive Control SE - 32, ser. Lecture Notes in Control and
Information Sciences, L. Magni, D. Raimondo, and F. Allg¬ ower, Eds.
Springer Berlin Heidelberg, 2009, vol. 384, pp. 391Ð417.
[24] F. Chaumette and T. Marchand, ÒA redundancy-based iterative ap-
proach for avoiding joint limits: application to visual servoing,Ó IEEE
Transactions on Robotics and Automation, vol. 17, no. 5, pp. 719Ð730,
2001.
[25] M. Schwienbacher, T. Buschmann, S. Lohmeier, V. Favot, and H. Ul-
brich, ÒSelf-collision avoidance and angular momentum compensation
for a biped humanoid robot,Ó in Robotics and Automation (ICRA),
2011 IEEE International Conference on, may 2011, pp. 581 Ð586.
5061
