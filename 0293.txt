Implementation of Arbitrary Periodic Dynamic Behaviors in Networked
Systems
Lorenzo Sabattini
1
, Cristian Secchi
1
, Matteo Cocetti
2
and Cesare Fantuzzi
1
Abstract—Decentralized control of networked systems has
been widely investigated in the literature, with the aim of
regulating the overall state of the system to some desired
conﬁguration, thus obtaining coordinated emerging behaviors
(e.g. synchronization, swarming, coverage, formation control)
by means of local interaction. In this paper we introduce a
methodology to solve a tracking problem, that is deﬁning a
decentralized control strategy for making a networked system
follow an arbitrarily deﬁned periodic setpoint function. The
most suitable interconnection topology is deﬁned together with
the control law as the solution of a constrained optimization
problem, in order to ensure asymptotic tracking. Simulations
are provided for validating the proposed control strategy.
I. INTRODUCTION
This paper introduces a methodology to let a networked
system implement arbitrarily deﬁned periodic dynamic be-
haviors. This objective is fulﬁlled having a subset of agents,
called leaders, that are in charge of controlling the overall
state of the networked system, in a completely decentralized
manner.
Generally speaking, the aim of decentralized control
strategies is implementing local interaction rules to regulate
the state of the overall system to some desired conﬁguration.
On these lines, mainly investigated coordinated behaviors
include aggregation, swarming, formation control, coverage
and synchronization [1]–[4].
The idea of implementing more complex cooperative be-
haviors have recently appeared in the literature. For instance,
[5], [6] present decentralized strategies for the coordination
of groups of mobile robots moving along non–trivial paths.
A decentralized strategy is presented in [7] that extends the
standard consensus protocol to obtain periodic geometric
patterns.
Recently a few works appeared that investigate the pos-
sibility of interacting with a networked system, in order to
obtain a desired behavior [8]. The idea is that of having a
set of agents, interconnected by means of a graph: a subset
of those agents, namely the leaders, may be directly con-
trolled, while the others, namely the followers, are indirectly
controlled through the underlying interconnection graph.
As shown in [9], it is possible to model a networked sys-
tem in such a way that the classical notions of controllability
and observability of LTI systems are applicable. On these
1
L. Sabattini, C. Secchi and C. Fantuzzi are with the Depart-
ment of Sciences and Methods for Engineering (DISMI), University
of Modena and Reggio Emilia, Italy {lorenzo.sabattini,
cristian.secchi, cesare.fantuzzi}@unimore.it
2
M. Cocetti is with the University of Trento, Italy
matteo.cocetti@gmail.com
lines, in [10] we introduced a decentralized methodology
to solve a tracking problem for networked systems in a
decentralized manner. Speciﬁcally, we exploited the well
known regulator equations to design a decentralized control
lawtomakeanetworkedsystemfollowapredeﬁnedsetpoint.
Wedemonstratedthat,givenaﬁxedtopology,itisnotalways
possible to deﬁne a control strategy to track any periodic
setpoint: therefore, we introduced a methodology to deﬁne
the set of admissible setpoint functions, once the topology
of the graph has been deﬁned.
It is worth noting that the setpoint function deﬁnes the
objective to be fulﬁlled. Therefore, in this paper we deﬁne a
methodologytoﬁndacontrolstrategytomakethenetworked
system track an arbitrarily deﬁned setpoint function. For
this purpose, the most suitable interconnection topology is
deﬁned as well.
The paper is organized as follows. In Section II the
networked system is modeled as a LTI system. In Section III
we introduce the regulator equations, and we provide the
problem formulation. The proposed solution is then de-
scribed in Section IV, in terms of a constrained optimiza-
tion problem. Simulation results are provided in Section V
for validation purposes. Finally, Section VI contains some
concluding remarks.
II. PRELIMINARIES
A. Notation
In this section we deﬁne some symbols that will be used
throughout the paper.
The symbols 1
?
and 0
?
will be used to indicate a vector
of all ones and a vector of all zeros, respectively, in R
?
.
Moreover, the symbolI
?
will be used to indicate the identity
matrix in R
???
, while the symbol O
?,?
will be used to
indicate the zero matrix in R
???
.
Let Ω ? R
???
be a generic matrix. We deﬁne
Ω[i,:]?R
?
, Ω[:,j]? R
?
and Ω[i,j]? R as the i–th row,
the j–th column and the element (i,j) of Ω, respectively. On
the same lines, given a vector ? ?R
?
, we deﬁne ?[i]?R
as the i–th entry of ?.
B. Model of the system
Consider a group of N agents, namely mobile robots,
sensors or other entities, whose interconnection structure is
modeled by means of an undirected graph G, where V(G)
and E(G) are the vertex set and the edge set of the graph
G, respectively. The (unweighted) Laplacian matrixL(G) is
deﬁned as follows:
L(G) =I(G)I
T
(G) (1)
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 5004
where I(G) is the incidence matrix. In an edge–weighted
graph, a positive number (the weight) is associated to
each edge of the graph. Let ¯ w
k
> 0 be the weight asso-
ciated with the k–th edge, and let ¯ w = [¯ w
1
,..., ¯ w ¯
M
]?R
¯
M
.
Then, the weight matrix W(G)?R
¯
M?
¯
M
is deﬁned as
W(G) = diag(¯ w).
The (weighted) Laplacian matrixL
W
(G) of the graph G,
associated with the weight matrixW(G) can then be deﬁned
as follows:
L
W
(G) =I(G)W(G)I
T
(G) (2)
Further details can be found for instance in [11].
Let x
i
?R
m
be the state of the i–th agent: without loss of
generality,wewillhereafterconsiderthecasewherethestate
corresponds to each agent’s position. Then, let the agents
be interconnected according to the well known (weighted)
consensus protocol [3]:
˙ x
i
=?
X
j?Ni
¯ w
ij
(x
i
?x
j
) (3)
where ¯ w
ij
> 0 is the edge weight, and N
i
? V(G) is the
neighborhood of the i–th agent, deﬁned as the set of the
agents that are interconnected to the i–th one, namely:
N
i
={j?V(G) such that (v
i
,v
j
)?E(G)} (4)
Without loss of generality, we will hereafter refer to the
scalar case, namely x
i
?R. It is however possible to extend
all the results to the multi–dimensional case, considering
each component independently.
Hence, let ? = [x
1
,...,x
N
]
T
? R
N
be the state of the
multi–agent system. The interaction rule deﬁned in Eq. (3)
can be rewritten as follows:
˙ ? =?L
W
(G)? (5)
As is well known [3], under the consensus protocol the
states of the agents converge to a common value. Assume
now that the goal is to control the states of the networked
agents: for this purpose, deﬁne a few leader agents, whose
state is assumed to be directly controllable. The state of the
other agents, referred to as the followers, evolves according
to the consensus protocol.
More speciﬁcally, let V
L
(G) ? V(G) be the set of the
leader agents, and let V
F
(G) = V(G)\V
L
(G) be the set
of the follower agents. Then, as shown in [9] for unweighted
graphs, the interaction rule introduced in Eq. (3) is modiﬁed
as follows:
?
?
?
˙ x
i
=?
P
j?Ni
¯ w
ij
(x
i
?x
j
) ifv
i
?V
F
(G)
x
k
= u
k
ifv
k
?V
L
(G)
(6)
where u
k
= u
k
(t)?R is a control input.
Let N
L
be the number of leaders. It is always possible to
index the agents such that the last N
L
agents are the leaders,
and the ﬁrst N
F
= N?N
L
are the followers. Without loss
of generality, we assume N
L
≤ N
F
. Then, as shown in [9],
it is possible to decompose the Laplacian matrixL
W
(G) as
follows:
L
W
(G) =?
?
?
?
?
A B
B
T
?E
?
?
?
?
(7)
where A =A
T
?R
NF?NF
represents the interconnection
among the followers, B?R
NF?NL
represents the
interconnection among leaders and followers, and
E =E
T
?R
NL?NL
represents the interconnection among
the leaders.
LetG
F
be the subgraph of the followers, whose Laplacian
matrix isL(G
F
), and let M be the number of edges in G
F
.
Let ??R
NF?NF
be a diagonal matrix whose i–th entry is
?[i,i] =
NL
X
k=1
B[i,k] (8)
Then:
A =?L(G
F
)?? (9)
Deﬁne nowx
F
?R
NF
as the state vector of the followers,
namely x
F
= [x
1
,...,x
NF
]
T
. Deﬁne also u? R
NL
as the
input vector, namely u = [u
NF+1
,...,u
N
]
T
. Moreover, let
y ?R
NL
be the output vector, that is the vector containing
the state variables that are measurable by the leaders: it is
reasonable to assume that each leader is able to measure the
state of its neighbors.
We assume that the leader nodes are able to directly ex-
changeinformationamongeachother.Namely,thefollowing
assumption is made:
Assumption 1 A complete communication graph exists
among the leader nodes.
Therefore, the output vector can be deﬁned as the vector
containing the states of each leader’s neighbors. Namely, the
dynamics of the networked system can then be rewritten as
follows:
(
˙ x
F
=Ax
F
+Bu
y =B
T
x
F
(10)
We will hereafter assume that the topology is deﬁned in
such a way that the system in Eq. (10) is controllable
and observable. Under Assumption 1 it is then possible to
design a Luenberger state observer such that each leader can
computeanestimateofx
F
,whichmakesitpossibletoobtain
a decentralized implementation of the control law that will
be described in the next Sections, following the procedure
in [10].
III. PROBLEM STATEMENT
As shown in [10], the regulator equations can be exploited
to deﬁne the control input u(t) such that the state of the
followers tracks a desired setpoint. Speciﬁcally, given the
topology of the networked system, it is possible to deﬁne a
set of periodic setpoint functions that can be tracked by the
system.
5005
Periodic setpoint functions may be deﬁned as the combi-
nation of a number n of harmonics with period T. Namely, a
genericperiodicsetpointx
s
(t)?R
NF
,thathastobetracked
by the state x
F
(t)?R
NF
of the followers, may be deﬁned
as follows:
x
s
(t) =J?(t) (11)
where J ?R
NF?(2n+1)
, and ?(t) is a vector of generating
harmonics deﬁned as follows:
?(t) =

1 sin

2π
T
t

cos

2π
T
t

...sin

n
2π
T
t

cos

n
2π
T
t

T
(12)
Vector ?(t) can be obtained as the solution of an exosystem
˙
?(t) =G?(t) (13)
where matrix G?R
(2n+1)?(2n+1)
and the initial state ?(0)
are deﬁned as shown in [10].
Deﬁne then the regulation error e(t)?R
NF
as follows:
e(t) = x
F
(t)?J?(t) (14)
As is well known [12] the regulation problem can be
solved deﬁning the input u as follows:
u =Fx
F
+(??F?)? (15)
whereF isanarbitrarymatrix,chosensuchthat(A+BF)is
Hurwitz stable, and ? and ? are the solution of the regulator
equations that, in this case, can be written as follows:

A?+B? = ?G
??J = 0
(16a)
(16b)
In this paper we provide a solution for the following
problem:
Problem Given the desired setpoint function, identiﬁed by
means of the matrixJ, deﬁne a topology for the networked
system such that the desired setpoint function is admissible.
Subsequently, ﬁnd a solution (?,?) for the regulator equa-
tions in Eq. (16), such that the control law in Eq. (15) can
be deﬁned.
In particular, the objective is to deﬁne the minimal graph
that makes the desired setpoint function admissible. By min-
imal graph we refer to the conﬁguration which requires the
smallest possible number of leaders, and of communication
links among the agents.
It is in fact worth noting that several different topological
interconnections among the agents might lead to the exis-
tence of a solution. However, it is desirable to minimize:
• thenumberofleaders,thatisthenumberofindependent
inputs for the multi–robots system.
• the number of edges among the agents, in order to
reduce the communication requirements.
Consider then a group of N
F
followers to be controlled,
and a given desired setpoint function. Therefore, imposing a
given matrixJ, from the regulator equations in Eq. (16) we
obtain:
AJ +B? =JG (17)
The objective is then to deﬁne A,B,? such that the
condition in Eq. (17) holds.
IV. ALGORITHM FOR AUTOMATICALLY DEFINING THE
TOPOLOGY AND THE CONTROL LAW
In this Section we will describe an algorithm to solve the
problem introduced in Section III. In particular, the topology
of the network (namely matrices A and B), as well as the
control law (namely matrix ?) will be deﬁned such that the
condition in Eq. (17) holds.
Therefore, we deﬁne an algorithm for the solution of the
problem, namely:
• deﬁning a topology for the networked system such that
the desired control law is admissible, with the minimum
number of leaders N
L
• deﬁning the control law itself, according to Eq. (15)
This problem can be solved as a constrained optimization
problem, formulated as follows:
minimize f (x) (18a)
subject to c(x) = 0 (18b)
and w[k]≥ 0?k = 1,...,M (18c)
B[i,j]≥ 0?i = 1,...N
F
,?j = 1,...N
L
(18d)
where w ? R
M
is the vectors of the edge weights of G
F
,
and the vector x ? R
Nu
collects the unknown terms to be
deﬁned. The cost function f (x) : R
Nu
7? R
+
in Eq. (18a)
is deﬁned as the following quadratic function:
f (x) =k˜ wk
2
(19)
where ˜ w?R
M
is the vector of normalized edge weights of
G
F
, deﬁned as follows:
˜ w[i] =
(
1 ifw[i]6= 0
0 otherwise
(20)
As will be clariﬁed in the following Sections, the vector w is
a portion of the vector of unknowns x. It is worth noting that
the cost function f (·) increases as the number of non–zero
edge weights increases. Hence, minimizing this cost function
leads to minimizing the number of edges among the agents.
The equality constraint in Eq. (18b), deﬁned by means
of the function c(x) : R
Nu
7? R
Nc
, is deﬁned in order to
imposethesolutionoftheregulatorequations.Theinequality
constraintsinEqs.(18c)and(18d)imposethechoiceofnon–
negative edge weights among the followers, and from leaders
to followers.
Based on the deﬁnition of the equality constraints, the
solution of the problem in Eq. (18) can be obtained by
means of different techniques, as will be illustrated in the
following sections. The number of unknowns N
u
and the
number of equality constraints N
c
will be deﬁned, once
all the parameters of the optimization problem have been
deﬁned.
It is then possible to state the objective as follows: ﬁnding
the minimum value of N
L
such that the problem in Eq. (18)
5006
admits a solution. This objective can be fulﬁlled solving the
problem in Eq. (18) starting witn N
L
= 1, and increasing
N
L
if a solution does not exists.
A. Formulation with linear constraints
In this Section we will show how to deﬁne the equality
constraints in Eq. (18b) in the form a linear system of
equations. In this manner, all the constraints are formulated
as convex constraints, which makes it possible to solve the
problem in Eq. (18) in a very efﬁcient manner, exploiting
standard software tools [13].
For this purpose, it is necessary to make the following
assumption on the interconnection among the leaders and
the followers:
Assumption 2 Each leader is connected to exactly one
follower, and two leaders are not connected to the same
follower.
Without loss of generality, we consider the i–th leader to
beconnectedtothei–thfollower:thiscanalwaysbeobtained
opportunely relabeling the followers. Therefore, the matrix
B?R
NF?NL
is deﬁned as follows:
B =
"
I
NL
O
NF?NL,NL
#
(21)
We will hereafter show that, under Assumption 2, it is
possible to rewrite Eq. (17) in order to obtain a linear
system of equations. For this purpose, deﬁne the matrix
??R
M?(2n+1)
as follows:
? =I
T
J (22)
where I is the incidence matrix of the complete follower
subgraph G
F
. Since J is known once the desired setpoint
has been deﬁned, then ? is a constant known matrix.
Deﬁne then
?
k
i,j
=I[i,k]?[k,j] (23)
where i = 1,...,N
F
, j = 1,...,(2n+1), and k =
1,...,M. It is worth remarking that ?
k
i,j
is a known pa-
rameter, ?i, j, k.
The parameters ?
k
i,j
are then rearranged in the matrixD?
R
NF(2n+1)?M
, whose elements are deﬁned as follows:
D[(2n+1)(i?1)+j,k] = ?
k
i,j
(24)
where i = 1,...,N
F
, j = 1,...,(2n+1), and k =
1,...,M.
We introduce now the matrix Q ? R
NF(2n+1)?NL(2n+1)
as follows:
Q =
"
I
NL(2n+1)
O
(NF?NL)(2n+1),NL(2n+1)
#
(25)
In the following Proposition we will show that the condi-
tion in Eq. (17) can be rewritten as the following standard
linear system of equations:
Hx = ? (26)
where:
• the matrix H ? R
[NF(2n+1)]?[M+NL(2n+1)]
is deﬁned
as follows:
H =
h
?D Q
i
(27)
• the vector of unknowns x ? R
M+NL(2n+1)
is deﬁned
as follows:
x =

w
T
?[1,:]··· ?[N
L
,:]

T
(28)
Namely, the unknowns are represented by the edge
weights, that is the elements of vector w, and by the
elements of the matrix ??R
NL?(2n+1)
.
• the vector ??R
NF(2n+1)
is deﬁned as follows:
? = [Ω[1,:]··· Ω[N
F
,:]]
T
(29)
where the matrix Ω ? R
NF?(2n+1)
is deﬁned as
follows:
Ω =JG +?J (30)
Proposition 1 Consider the deﬁnition of matrix H in
Eq. (27), the deﬁnition of vector ? in Eq. (29), and the
deﬁnition of the vector of unknowns x in Eq. (28). Then,
the condition in Eq. (17) can be rewritten in the form of a
standard linear system of equations as in Eq. (26), namely:
Hx = ?
Proof: Inordertoprovethestatement,wewillhereafter
analyze the terms that compose the condition in Eq. (17),
namely:
AJ +B? =JG
According to Eq. (9), the deﬁnition ofA can be rewritten
as follows:
A =?I(G
F
)W(G
F
)I
T
(G
F
)?? (31)
Any topology can be obtained from the complete graph,
settingtozerotheweightscorrespondingtotheedgesthatare
not in the graph. For this purpose, without loss of generality,
we will hereafter consider a complete follower subgraph:
unless otherwise speciﬁed, when the graph is not explicitly
indicated as an argument, we refer to the matrices of the
complete graph.
When considering a complete graph, the number of edges
M can be computed as follows:
M =
N
F
(N
F
?1)
2
Consider then I as the incidence matrix of the complete
follower subgraph. Therefore we deﬁne
A =?IWI
T
??
where W = diag(w). The weight vector w ? R
M
is
deﬁned as a vector of non–negative elements. Zero elements
correspond to edges that are not in the graph.
Then, considering the deﬁnition of Ω in Eq. (30), it is
possible to rewrite Eq. (17) as follows:
?IWI
T
J +B? = Ω (32)
5007
Introduce now the matrices ? ? R
NF?M
and ? ?
R
NF?(2n+1)
, deﬁned as follows:
? =?IW =?Idiag(w) (33)
? =B? (34)
These matrices collect the unknown terms in Eq. (17),
that are represented by the elements of the matrix ? ?
R
NL?(2n+1)
, and the edge weights, that is the elements of
vector w.
Consider now the deﬁnition ofB given in Eq. (21). Then,
the matrix ? deﬁned in Eq. (34) can be written as follows:
? =
"
?
O
(NF?NL),(2n?1)
#
(35)
Moreover, considering the deﬁnition of ? given in
Eq. (22), that is
? =I
T
J
then Eq. (32) can be rewritten as follows:
??+? = Ω (36)
Deﬁne now ??R
NF?(2n+1)
as follows:
? = ?? (37)
Therefore, each element of ? may be written as follows:
?[i,j] =
M
P
k=1
?[i,k]?[k,j] =
M
P
k=1
I[i,k](?w
k
)?[k,j]
=
M
P
k=1
I[i,k]?[k,j](?w
k
)
(38)
Considering the deﬁnition of ?
k
i,j
given in Eq. (23), it is
possible to rewrite Eq. (38) as follows:
?[i,j] =
M
X
k=1
?
k
i,j
(?w
k
) (39)
Subsequently, considering the deﬁnition of matrix D in
Eq. (24), we obtain
?[i,j] =?D[(i?1)N
F
+j,:]w (40)
Considering then the deﬁnition of Q given in Eq. (25),
and considering the deﬁnition of ? in Eq. (29), then from
Eq. (36) we obtain:
?Dw+Q
?
?
?
?
?[1,:]
T
.
.
.
?[N
L
,:]
T
?
?
?
?
= ? (41)
Finally, considering the deﬁnition of H in Eq. (27), and the
deﬁnition of the vector of unknowns x in Eq. (28), it is
possible to rewrite Eq. (41) as follows:
Hx = ?
which proves the statement.
Hence, exploiting the results of Proposition 1, the equality
constraints in Eq. (18b) can be deﬁned as a linear set of
constraints, namely c(x) =Hx??.
B. Formulation with nonlinear constraints
In this Section we will remove Assumption 2, letting each
leader be connected with more than one follower. While
this formulation generally leads to solutions with a smaller
number of leaders (as will be shown also in the simulations
in Section V), the linearity and convexity properties of
the constraints are lost. In particular, we will show that
the problem in Eq. (18) can be formulated as a nonlinear
optimization problem with non–convex constraints, that is a
NP–complete problem [13].
In this case, then, the elements of B are unknown
terms. Hence, we redeﬁne the vector of unknowns x ?
R
M+NFNL+NL(2n+1)
as follows:
x =

w
T
B[1,:]···B[N
F
,:] ?[1,:]··· ?[N
L
,:]

T
(42)
Namely, the unknowns are represented by the edge weights
of the follower subgraph G
F
, that is the elements of vector
w, by the elements of the matrix ?? R
NL?(2n+1)
, and by
the elements of B?R
NF?NL
.
Consider now the deﬁnition of matrix ? in Eq. (34). Each
element of this matrix can be explicitly computed as follows:
?[i,j] =
NL
X
k=1
B[i,k]?[k,j] (43)
?i = 1,...,N
F
, ?j = 1,...,2n+1.
We deﬁne then the equality constraints in Eq. (18b) as
follows:
c(x) =
?
?
?
?
(?[1,:]+?[1,:]?Ω[1,:])
T
.
.
.
(?[N
F
,:]+?[N
F
,:]?Ω[N
F
,:])
T
?
?
?
?
(44)
It is worth noting that, according to the deﬁnition of ? in
Eq. (43), then the constraint in Eq. (44) represent a nonlinear
function.
Proposition 2 Consider the deﬁnition of the nonlinear func-
tion c(x) in Eq. (44), with the matrix ? deﬁned as in
Eq. (38), the matrix ? deﬁned as in Eq. (43), and the matrix
Ω deﬁned as in Eq. (30). Then, the condition in Eq. (17) can
be rewritten as the following nonlinear equality constraints:
c(x) = 0
Proof: As shown in the proof of Proposition 1, accord-
ing to Eqs. (36) and (37), the condition in Eq. (17) can be
rewritten as follows:
?+? = Ω (45)
which proves the statement.
It is worth noting that the problem in Eq. (18) is a non–
convex problem. However, as the cost function is quadratic
and the equality constraints in Eq. (44) are deﬁned as
continuously differentiable functions, the problem can be
solved by means of sequential quadratic programming [13],
which is an iterative method for nonlinear optimization.
5008
V. SIMULATIONS
Simulations have been performed using MATLAB and the
Optimization Toolbox, in order to evaluate and compare the
performances of the proposed strategies.
Simulations have been performed with a variable number
of followers N
F
? [8,20] and a variable number of harmon-
ics n ? [2,N
F
/2]. For each pair (N
F
,n), ﬁve simulations
runs were performed, deﬁning the matrix J ?R
NF?(2n+1)
as a random matrix.
As expected, with both strategies a solutions was always
found, with N
L
≤ N
F
. Comparing the results, it clearly
emerges that the quality of the solutions obtained with
the nonlinear formulation is typically better than the one
obtained with the linear formulation. In fact, as shown in
Fig. 1(a), for a variable number of followers N
F
, the non-
linear algorithm provides a solution with a smaller number
of leaders N
L
. Moreover, the difference between the two
solutionsappearstobeincreasing,asthenumberoffollowers
N
F
increases.
The supremacy of the solution provided by the nonlinear
algorithm is conﬁrmed by Fig. 1(b) as well, which shows the
number of leader N
L
that solve the problem for a variable
number of harmonics n.
The accompanying video shows MATLAB simulations
whose results are summarized in the following table.
Linear Nonlinear
N
F
n N
L
M N
L
M
14 1 14 84 4 49
9 2 9 24 3 27
The proposed control strategy was also validated for decen-
tralized control of groups of quadrotor Unmanned Aerial
Vehicles (UAVs). Several strategies can be found in the
literature [14] to build a local controller such that the closed
loop behavior of each quadrotor UAV can be effectively
approximatedwiththatofasingleintegratorkinematicagent.
Hence, the scenarios previously simulated with MATLAB
were replicated with a team of UAVs, as shown in the
accompanying video.
VI. CONCLUSIONS
In this paper we introduced a methodology to solve a
tracking problem for networked systems, that is deﬁning a
8 1012 14 16 18 20
6
8
10
12
16
18
20
NF
NL
(a) Number of leaders vs.
Number of followers
2 4 6 8 10
6
8
10
12
16
18
20
n
NL (b) Number of leaders vs.
Number of harmonics
Fig. 1. Comparison between linear (blue dashed line) and nonlinear (red
solid line) formulations (mean and standard deviation)
decentralized control strategy for making the system follow
an arbitrarily deﬁned periodic setpoint function.
Based on the regulator equations, a constrained optimiza-
tion problem is formulated, whose solution provides both the
most suitable interconnection topology and the parameters of
the control law, in order to ensure asymptotic tracking.
Two different formulations have been provided for the op-
timization problem: linear and nonlinear. As is well known,
the solution of a linear optimization problem is much faster
than a nonlinear one. However, in order to obtain a linear
formulation it was necessary to assume that each leader is
connected to only one follower: simulations conﬁrm that this
assumption leads to solutions that require a higher number
of leaders.
Therefore, it is possible to conclude that the linear formu-
lation is to be preferred only when the amount of time to
obtain a solution is crucial, such as for online applications.
Current work aims at ﬁnding robust solution in order to
cope with time varying communication graphs.
REFERENCES
[1] A. Ganguli, J. Cortes, and F. Bullo, “Multirobot rendezvous with
visibility sensors in nonconvex environments,” Robotics, IEEE Trans-
actions on, vol. 25, no. 2, pp. 340 –352, april 2009.
[2] J.A.FaxandR.M.Murray,“Informationﬂowandcooperativecontrol
of vehicle formations,” 2004.
[3] R. Olfati–Saber, J. A. Fax, and R. M. Murray, “Consensus and
cooperation in networked multi–agent systems,” Proceedings of the
IEEE, vol. 95, no. 1, pp. 215–233, 2007.
[4] L.Sabattini,C.Secchi,andC.Fantuzzi,“Arbitrarilyshapedformations
of mobile robots: artiﬁcial potential ﬁelds and coordinate transforma-
tion,” Autonomous Robots (Springer), vol. 30, no. 4, pp. 385–397, may
2011.
[5] L. C. A. Pimenta, G. A. S. Pereira, N. Michael, R. C. Mesquita,
M. M. Bosque, L. Chaimowicz, and V. Kumar, “Swarm coordination
basedonsmoothedparticlehydrodynamicstechnique,”Robotics,IEEE
Transactions on, vol. 29, no. 2, pp. 383–399, 2013.
[6] L. Sabattini, C. Secchi, and C. Fantuzzi, “Closed–curve path tracking
for decentralized systems of multiple mobile robots,” Journal of
Intelligent and Robotic Systems, vol. 71, no. 1, pp. 109–123, 2013.
[7] P. Tsiotras and L. Castro, “Extended multi-agent consensus protocols
for the generation of geometric patterns in the plane,” in American
Control Conference (ACC), 2011, 29 2011-july 1 2011, pp. 3850 –
3855.
[8] A. Franchi, C. Secchi, H. I. Son, H. H. Bulthoff, and P. Robuffo
Giordano, “Bilateral teleoperation of groups of mobile robots with
time-varyingtopology,”Robotics,IEEETransactionson,vol.28,no.5,
pp. 1019–1033, 2012.
[9] M. Egerstedt, S. Martini, M. Cao, K. Camlibel, and A. Bicchi,
“Interactingwithnetworks:Howdoesstructurerelatetocontrollability
insingle-leader,consensusnetworks?” Control Systems, IEEE,vol.32,
no. 4, pp. 66 –73, aug. 2012.
[10] M. Cocetti, L. Sabattini, C. Secchi, and C. Fantuzzi, “Decentral-
ized control strategy for the implementation of cooperative dynamic
behaviors in networked systems,” in Proceedings of the IEEE/RSJ
International Conference on Intelligent Robots and Systems, 2013.
[11] C. Godsil and G. Royle, Algebraic Graph Theory. Springer, 2001.
[12] A. Saberi, A. A. Stoorvogel, and P. Sannuti, Control of Linear Systems
with Regulation and Input Constraints. Springer-Verlag New York,
LLC, 2000.
[13] J. Nocedal and S. J. Wright, Numerical Optimization, 2nd ed., ser.
Springer Series in Operations Research and Financial Engineering.
Springer-Verlag, 2006.
[14] W. Ren and R. W. Beard, Distributed Consensus in Multi-Vehicle
Cooperative Control: Theory and Applications. Springer, 2008.
5009
