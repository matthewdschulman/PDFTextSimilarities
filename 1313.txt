 
 
MIRA: Enabler of Mass Customization through Agent-Based 
Development of Intelligent Manufacturing Systems 
 
Majid Sorouri, The University of Auckland, New Zealand, msor021@aucklanduni.ac.nz 
Valeriy Vyatkin, Luleå University of Technology, Sweden and Aalto University, Helsinki, Finland, 
vyatkin@ieee.org 
Zoran Salcic, The University of Auckland, New Zealand, z.salcic@auckland.ac.nz 
 
 
Abstract-This research proposes an innovative agent-based 
design method known as “MIRA” (Modular, Intelligent and 
Real-time Agent) to represent products as well as 
mechatronic components in manufacturing systems. The 
new agent exploits semantic knowledge representation of its 
capabilities, tasks and surroundings, and upon which 
performs rule-based reasoning leading to generation of the 
IEC 61499 Function Blocks for real time and distributed 
control of production systems. This approach facilitates 
product’s mass customization through development of 
intelligent mechatronic systems. Furthermore, the MIRA 
approach is exemplified in a food production case study. 
 
I. INTRODUCTION 
Jack welch, the “Manager of the Century” (named by 
Fortune magazine-1999) and the former CEO of the 
General Electric describes companies with many 
management layers as “wedding cake hierarchies” and not 
only  believed that their structure can strangle them, but 
also he essentially put an end to the notion that 
organizations are obliged to be ruled by hierarchies [1]. In 
a similar manner, the hierarchical design and centralized 
control nature of current manufacturing systems have 
drastically failed to confront ever increasing challenges 
toward responding to numerous customer demands and 
lack fundamental properties, such as scalability, 
flexibility, handling complexity, and failure avoidance. 
As one of the prominent solutions in this domain, multi-
agent and Holonic manufacturing paradigms have 
conquered many of the aforementioned concerns and 
provided decentralization of control as well as increasing 
robustness, intelligence and flexibility to the 
manufacturing control systems. However, in spite of these 
advantages, the number of industrial use cases that are 
fully implemented using agents are still very limited and 
lack of simplicity can be the key reason for their 
deficiency, as at the present there is no methodology that  
can be applied by an engineer without sufficient 
experience in agent design while being mature enough to 
satisfy manufacturing systems’ expectations 
[2].Therefore, to tackle the above shortcomings, this 
paper proposes an innovative multi-agent development 
method known as MIRA to represent both products and 
mechatronic components in manufacturing systems 
through symbiosis of semantic knowledge and rule-based 
reasoning as high level control, with the IEC 61499 
Function Blocks as real-time and distributed control of 
machineries and processes. 
The paper is structured as follows. Section two gives an 
overview of the focal objectives pursued in current 
researches in the agent-based manufacturing domain. 
Section 3 elaborates on MIRA approach and its 
development process. Section 4 exemplifies MIRA 
concept in a customized production test case. Finally, 
conclusions are made and the future research directions 
are discussed. 
II. MAIN EXPECTATIONS FROM AGENTS 
It has been more than two decades that Agent-based 
manufacturing systems have gained significant research 
interest. So far, various expectations from agents have 
been mentioned, and every research group has attempted 
to focus on one or more aspects of them, some of which 
are elucidated below.  
Vallee et al. [3] propose a multi-agent control architecture 
for transportation systems which is enriched with 
ontological representation of knowledge and reasoning 
[4]. The results of this study have shown increased agility, 
robustness and fault resistance. Researchers in [5] have 
targeted reconfiguration as a pivotal issue in the 
manufacturing domain, and for that purpose, have chosen 
the IEC 61499 standard for distributed control of physical 
components. Furthermore, they developed an ontology to 
represent low-level control functionalities at the high level 
and suggest a creative structure that enables 
reconfiguration of the control system on the fly. Obitko et 
al. [6] proposed a general ontology consisting of three 
main modules which embodies specification of customer 
requirement, production planning and material handling, 
and emphasized on extensibility, modularity and 
flexibility as the main advantages of  integrating multi-
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 258
 
 
agent systems with ontologies. A comprehensive review 
of the past, present and future trend of agent-based 
technology development and the way it evolved over 
almost two decades is given in [7]. Moreover, the authors 
shed light on some of the future challenges ahead of 
agents, such as modular, object/service oriented and real-
time control software design [7]. 
Reviewing most of the literatures about agent-based 
manufacturing systems, one can notice that there are 
various characteristics envisaged for agents, some of 
which listed below.  
Table 1 Agent’s expectations with their root causes                      
Desired Feature/Expectation 
Root cause 
M I R 
Reconfigurability ? ?  
Scalability ? ?  
Adaptability  ?  
Failure avoidance ? ? ? 
Agility  ? ? 
Reliability  ?  
Reasoning-ability  ?  
Design simplicity ?   
Robustness  ? ? 
Reusability ?   
Distribution ability ?  ? 
Plug-and-Play ? ? ? 
 
M: Modularity I: Intelligence R: Real time behavior 
By analyzing each of the above attributes one can realize 
that they all can be derived from three main 
characteristics: Modularity, Intelligence and Real-time 
behavior. For instance, reusability can be considered as a 
fruit of modularity. Similarly, in order to have a reliable, 
robust and  failure tolerant manufacturing system, it 
would be adequate to develop a modular, intelligent and 
real time agent system which can conveniently foresee 
probable failures in the system and dynamically react on 
their occurrence by removing the faulty agents and 
substituting them with their redundant counterpart. 
Moreover, distribution ability of the control system is 
another inevitable benefit derived from the modularized 
software design.  
III. PROPOSED METHODOLOGY 
 
A. MIRA design approach 
 
MIRA brings together the three aforementioned features 
in a single entity. It undoubtedly inherits many of its 
features from current approaches, particularly those who 
used ontology for agent’s knowledge representation such 
as [6, 8, 9]. However, the overall aim of MIRA is 
enhancing simplicity and user acceptability [10] of control 
system design which will result in significant reduction in 
the development costs and time. In addition, this approach 
distinguishes between different sources of knowledge that 
agents require for decision-making, identifies how they 
should be provided to them ,while an inter ontology 
mapping and data exchange [11] between existing agent 
implementations and MIRA is also possible.   The other 
benefit of MIRA is the usage of semantic knowledge and 
rule-based reasoning to determine the compatibility of 
modular software as well as hardware components in 
various manufacturing conditions to achieve the 
appropriate solution. This is to accomplish rapid product 
customization through utilization of new or existing 
mechatronic devices in a flexible, decentralized and 
dynamic control arrangement.  
MIRA approach considers a trio of main role players (Fig. 
1) in an intelligent manufacturing system: Human, 
Operator (O) and Client (C) MIRA, and particular tasks 
are dedicated to each of them. Each MIRA can either take 
part individually in a manufacturing plant, or be grouped 
with other MIRAs and build a more capable (composite) 
MIRA. 
 
 
 
1) HUMAN: Although the aim of using agents in 
manufacturing systems is to minimize humans’ needed 
time and effort on such systems, their considerable role in 
the design can neither be neglected nor underestimated, at 
least for near future. Human can be engaged in the 
decision making process to provide a deeper knowledge 
of the problem domain that is not already captured by the 
agents and as well, adapt the system if problem 
specifications  have altered over time [12]. It is evident 
that humans can always play a valuable monitoring role 
and take part in decision-making whenever needed to 
overrule MIRAs decisions as they are always given a 
higher priority than MIRAs. Apart from the 
aforementioned roles, human can act as an 
operator/technician supporting the system with different 
activities (i.e. maintenance, supplying raw material, etc.). 
 
2) O-MIRA: It represents one or a group of 
mechatronic components including sensors, actuators, 
software components, controllers and power sources (Fig. 
2). The knowledge representation of the O-MIRA is 
captured in a semantic way (Fig. 3). Each O-MIRA has 
two plug types (software and power) that enable it to be 
 
Figure 1 Trio of main role players in MIRA approach 
 
259
 
 
rapidly plugged into an existing design. However, it is 
essential for every two or more collaborating O-MIRAs to 
ensure that both their physical and software components 
match with each other. For every two communicating 
MIRAs, their level of  authority in decision-making is 
defined in two communication patterns: Peer to Peer and 
Master-Slave [13]. These negotiation methods can be 
either set manually or determined through reasoning, but 
their correctness needs to be formally verified as was 
reported in [14]. Finally, if some changes are made in one 
O-MIRA’s ontology, it will result in propagating to all its 
dependent MIRAs and will affect their respective 
operations accordingly. 
 
 
3)    C-MIRA: It is an intelligent product in a sense 
that it has thorough knowledge representation of the 
constituent materials, recipe and other details of the 
product. C-MIRA takes part in negotiation with the 
available O-MIRAs weighing the cost of employing them 
with the services they provide to  arrive to the most proper 
compromise which not only is within its budget limit, but 
is also feasible to transit the product from a concept up to  
full realization of it.  
B. MIRA Internal structure 
Similar to some agent architectures  in manufacturing 
control [15-17], MIRA can be seen in three layers of  
high level control (HLC), low level control (LLC), and 
the physical components layer. Here, the term “Agent” is 
used for MIRA merely to define it as an autonomous 
entity (product or a mechatronic component), though 
there are other definitions of agents which solely refer to 
the high level control of the physical components. The 
HLC works as a “mind” for the agent and fully controls 
the agent behavior based on its world model 
representation. The low level control can be seen as a 
“brain” which directly interacts in real-time with sensors 
and actuators in O-MIRAs or RFID-tagged products in 
C-MIRAs, and controls the physical component as the 
“body” of the agent [16].   
1) HLC development through  STEP method 
The way how MIRA’s semantic knowledge is shaped is 
inspired by human behavior in an analogous work 
environment and is called STEP (Self, Task and 
Environment Perception) method and in fact it is 
considered as “the first step toward agent design”.  
STEP describes how knowledge must be captured and 
who should provide each part of it as ontology to a 
MIRA, so that the integrated knowledge can be easily 
utilized, shared and updated through all manufacturing 
life-cycle from the design level, up to fault avoidance and 
reconfiguration level. However, the “perception” term 
used in this context does not convey any kind of cognition 
as expected from human and solely refers to the semantic 
knowledge and rule-based reasoning ability of a MIRA. 
with which, it can achieve its desired goals. The three 
constituent elements of STEP are as follow (Fig. 3): 
- Self-Perception (SP): In order that a MIRA be 
able to perform its duties, at first it must have a thorough 
understanding of itself. This knowledge known as “SP” 
consists of all material, mechanical, electrical and 
software characteristics and capabilities of MIRA’s 
constituent components (e.g. dimensions, cost, sensor 
types, actuators capabilities, power source, IO info, etc.). 
This type of knowledge is assumed to be provided to the 
MIRAs either by customers (for C-MIRA), or by vendors 
(for O-MIRA) and then converted to semantic ontology. 
SP characterizes a general-purpose agent that can be later 
on tailored to various applications and environments. This 
method also respects the developers’ intellectual property 
as they do not have to reveal their software 
implementation in detail and instead, they merely develop 
SP of their own MIRAS  as “black boxes” [7] with clear 
interfaces and hidden complexity at the background, 
 
Figure 2 A modular storing station (from FESTO Co.)                                        
as an example of a C-MIRA 
              
Side view(Controller)
Software Plug 
Air Tube
Power Cable
Power Plugs
Ethernet Cable
 
Figure 3 Knowledge representation of manufacturing system based 
on MIRA approach 
260
 
 
while leaving minor configurations to the process control 
engineers.  
 
- Task Perception (TP): It consists of the semantic 
knowledge that specifies which tasks are to be managed 
by an O-MIRA or which processes a C-MIRA has to 
undergo in order to achieve the product as its intended 
goal. TP in C-MIRA is provided by product engineer or 
translated from customer order into ontology language. 
As for O-MIRA, TP is generally provided by C-MIRA 
and then the C-MIRA reasoner will break it down to 
detailed tasks to be accomplished. For instance, if a 
“placing cap” task is assigned to a Pick and place (PnP) 
robot, the reasoner initially checks whether it is feasible 
based on its SP and EP and then creates a set of detailed 
tasks (e.g. extend/retract cylinder or vacuum on/off, etc.) 
to achieve that goal. 
 
- Environment Perception: Apart from SP and TP, 
each MIRA requires to have enough information about 
the environment it is being utilized at, such as its location, 
raw materials and finished products positions, whether 
human is present or not and if so, how to maintain their 
safety, with which MIRAs it is collaborating, and so on. 
Some of this information has to be provided manually by 
the process control engineer (e.g. positions) as they are 
specific to that manufacturing environment. However 
some of the other EP software/hardware compatibility 
check and establishment of distributed control patterns 
between O-MIRAs could be performed by human or 
generated within each O-MIRA through the reasoning 
process.   
Once a MIRA has gained a comprehensive “S”, “T”, and 
“E” Perception at the HLC layer, it will result in 
generating the appropriate FBs for real-time execution of 
operations as explained below. It is clear that any 
alteration in any of the three aforementioned perceptions 
will have impact on MIRA’s behavior in a manufacturing 
system. 
2) LLC: IEC 61499  FB for distributed control  
One of the crucial expectations from agents in 
manufacturing systems is their real-time behaviour; 
however, the HLC cannot guarantee this feature in certain 
circumstances. Thus to resolve this issue, it is coupled 
with the LLC which will be deployed to the PLCs or other 
industrial controllers[18] . Among the current industrial 
programming standards for industrial controllers, the 
emerging IEC 61499 [19]  promises significant 
advantages to the users in terms of modularity, simplicity 
of system level design, and more importantly, the 
possibility of distributing low level control programs over 
a variety of distributed hardware and throughout the entire 
network [20]. These features make it an ideal solution for 
being employed in MIRA’s real-time control layer.  
One prominent aspect of MIRA which distinguishes its 
performance from other agents is that not only the 
physical compatibility of agents is checked prior to 
operation, but also the software compatibility among 
interacting agents is being taken into account at an 
execution level. For this purpose, two control design 
patterns (e.g. master-slave and peer to peer) for their 
communication has been considered and a uniform FB 
interface (Fig. 4) is proposed in [13] to facilitate 
derivation of LLC code from the STEP method  while 
their ultimate functionalities are verified formally prior to 
operation [14].   
 
3) Hardware components, Products, and Physical 
components 
In terms of hardware platform for executing agents, in 
general the HLC part has been separated from LLC 
running on PCs, while the LLC was  executed on PLCs  
or embedded controllers [18]. However, with the recent 
advances in making embedded controllers, it is envisaged 
that the future agent implementations could conveniently 
execute HLC and LLC on single runtime environments  
[7].  
In C-MIRAS, use of RFID technology is helpful to enable 
them track the location and completion progress of the 
products, though this method is not applied in our case 
study. In O-MIRAs, the physical components (sensors and 
actuators) constantly exchange information in real-time 
with the industrial controllers to fulfill the desired tasks.  
 
Figure 4 Proposal for a unified FB interface  
 
261
IV. CASE STUDY 
 
This case study was inspired by an innovative and 
futuristic ice cream (IC) shop called iCream  [21] that  
enables their customers order from endless combinations 
of ICs while observing them being made right before their 
eyes. The MIRA approach has been pursued for 
formulation and implementation of this exemplified 
factory. Using available equipment in the Industrial 
Informatics lab of the University of Auckland, the factory 
environment has been simulated (Fig. 5) which enables 
customers to choose among numerous combinations. 
The materials used for this IC include two vanilla and 
chocolate IC types, cream, two sprinkle types, three fruit 
toppings, six sauce types, the cup lid and finally an IC 
case. The choices for a customer may range from the 
simplest (and the cheapest) IC including an IC with lid up 
to the most complete IC which is dressed with a cup case 
and has all the available toppings. Every time a customer 
orders a specific IC through an API, the order is translated 
into ontology and creates a new C-MIRA that has a 
different STEP than the other C-MIRAs.  
As a consequence, a unique sequence of steps will be 
generated for producing that particular IC. The 
mechatronic components utilized in this case study are of 
two types: Stationary and Portable. The stationary parts 
are assumed to be permanently available in the 
manufacturing process. They include a delta robot for 
sorting fruit, two sprinkle dispensers, a rotary sauce 
dispenser, one cream dispenser, a rotary table, three L-
shaped conveyors, and 3 normal conveyors. All fixed 
conveyors have made a group conveyor MIRA. As shown 
in Fig. 5, there are 6 positions on conveyors (blue squares 
P1-P6) that have optic sensors, allowing them to be used 
as entry or exit connection points for the portable devices 
(Fig. 5 A-E). Apart from the inherited flexibility in choice 
that is provided to customers, on the manufacturing side, 
each portable O-MIRA can change location around the 
fixed conveyor track and be connected to any entry/exit 
point and this change will affect its EP as a result of the 
change in location and association with new C-MIRAs. In 
each of the possible circumstances, the C-MIRA pursues 
production of an IC while minimizing the cost (i.e. 
minimum IC travel distance). Among the employed C-
MIRAs, only the Delta robot has “hazardous” 
specification in its EP and if a human is present at 
manufacturing environment, the associated C-MIRA will 
only allow it to operate if the light curtain sensor is 
enabled according to its SP.  
Since the search process for the plant design is thoroughly 
automated, numerous options (e.g. selecting vendors, 
properties, prices) can be evaluated by the rule-based 
 
Figure 5 The Customized IC production implemented as a case study in the laboratory environment  
262
 
 
reasoner and different restrictive conditions can be added 
as production requirements.  
The semantic knowledge of the MIRAs that were 
employed in this case study  has been implemented using  
Protégé [22] which is an open-source ontology 
development tool along with two of its plug-ins (SWRL 
[23] and SPARQL[24]) for rule development and 
querying the inferred solutions from the ontology.  As for 
LLC design, NxtStudio v1.5 [25] tool is used which is 
complaint with the IEC 61499 FB standard. 
V. CONCLUSIONS AND FUTURE WORK 
This paper identified the three key challenges ahead of 
agent-based manufacturing control systems and based on 
that introduced the concept of MIRA with the main 
direction of integrating an intuitive human inspired 
knowledge representation and rule based decision-making 
with the IEC 61499. Furthermore, this research was an 
attempt toward removing the burden from the software 
experts and enhancing comprehension and collaboration 
of ordinary automation engineers in developing 
applications employing intelligent mechatronic 
components.   
In spite of the presented benefits of this approach, its 
immediate use in wide range of applications is still limited 
due to the manual process of defining rules and semantic 
knowledge for each client and operator MIRA.  
Work is in progress to publish in the forthcoming 
literature the detailed specification of knowledge and rule 
development techniques for MIRA operation and 
communication.  Also, as part of this continuing research, 
it is being investigated how to formally verify the 
intended behavior, safety and properties of MIRAs in a 
manufacturing system.  
REFERENCES 
[1] J. A. Krames, The Jack Welch Lexicon of Leadership: McGraw-
Hill, 2002. 
[2] S. Bussmann, N. R. Jennings, and M. Wooldridge, Multiagent 
Systems for Manufacturing Control:A Design Methodology. 
Sringer, Berlin-Heidelberg. 
[3] M. Vallee, M. Merdan, W. Lepuschitz, and G. Koppensteiner, 
"Decentralized Reconfiguration of a Flexible Transportation 
System," Industrial Informatics, IEEE Transactions on, vol. 7, pp. 
505-516, 2011. 
[4] M. Merdan, G. Koppensteiner, I. Hegny, and B. Favre-Bulle, 
"Application of an ontology in a transport domain," in Industrial 
Technology, 2008. ICIT 2008. IEEE International Conference on, 
2008, pp. 1-6. 
[5] W. Lepuschitz, A. Zoitl, M. Valle, and M. Merdan, "Toward Self-
Reconfiguration of Manufacturing Systems Using Automation 
Agents," Systems, Man, and Cybernetics, Part C: Applications 
and Reviews, IEEE Transactions on, vol. 41, pp. 52-69, 2011. 
[6] M. Obitko, P. Vrba , and V. Ma?ík, "Applications of Semantics in 
Agent-Based Manufacturing Systems," Informatica, vol. 34, pp. 
315-330, 2010. 
[7] P. Leitao, V. Marik, and P. Vrba, "Past, Present, and Future of 
Industrial Agent Applications," Industrial Informatics, IEEE 
Transactions on, vol. PP, pp. 1-1, 2012. 
[8] A. W. Colombo, R. Schoop, and R. Neubert, "An agent-based 
intelligent control platform for industrial holonic manufacturing 
systems," Industrial Electronics, IEEE Transactions on, vol. 53, 
pp. 322-337, 2006. 
[9] M. Merdan, M. Vallee, W. Lepuschitz, and A. Zoitl, "Monitoring 
and diagnostics of industrial systems using automation agents," 
International journal of production research, vol. 49, pp. 1497-
1509, 2011/03/01 2010. 
[10] I. Terzic, A. Zoitl, M. Rooker, T. Strasser, P. Vrba, and V. Ma?ík, 
"Usability of Multi-agent Based Control Systems in Industrial 
Automation," in Holonic and Multi-Agent Systems for 
Manufacturing. vol. 5696, V. Ma?ík, T. Strasser, and A. Zoitl, 
Eds., ed: Springer Berlin Heidelberg, 2009, pp. 25-36. 
[11] M. Obitko and V. Marik, "Transparent Ontological Integration of 
Multi-Agent Systems," in Systems, Man and Cybernetics, 2006. 
SMC '06. IEEE International Conference on, 2006, pp. 2488-
2492. 
[12] J. Rachlin, R. Goodwin, S. Murthy, R. Akkiraju, F. Wu, S. 
Kumaran, et al., "A-Teams: An Agent Architecture for 
Optimization and Decision-Support," in Intelligent Agents V: 
Agents Theories, Architectures, and Languages. vol. 1555, J. 
Müller, A. Rao, and M. Singh, Eds., ed: Springer Berlin 
Heidelberg, 1999, pp. 261-276. 
[13] M. Sorouri, S. Patil, and V. Vyatkin, "Distributed control patterns 
for intelligent mechatronic systems," in Industrial Informatics 
(INDIN), 10th IEEE International Conference on, 2012, pp. 259-
264. 
[14] S. Patil, V. Vyatkin, and M. Sorouri, "Formal Verification of 
Intelligent Mechatronic Systems with Decentralized Control 
Logic," presented at the 17th IEEE International Conference on 
emerging technologies and factory automation,(ETFA), Krakow, 
Poland, 2012. 
[15] M. Merdan, W. Lepuschitz, I. Hegny, and G. Koppensteiner, 
"Application of a communication interface between agents and 
the low level control," in Autonomous Robots and Agents, ICARA 
, 4th International Conference on, 2009, pp. 628-633. 
[16] G. Koppensteiner, M. Merdan, I. Hegny, W. Lepuschitz, S. Auer, 
and B. Grossing, "Deployment of an ontology-based agent 
architecture on a controller," in Industrial Informatics (INDIN),  
8th IEEE International Conference on, 2010, pp. 890-895. 
[17] J. H. Christensen, "HMS/FB Architecture and its 
Implementation," Agent-based manufacturing.Deen,ed., pp. 53-
87, 2003. 
[18] P. Vrba, P. Tichy, V. Marik, K. H. Hall, R. J. Staron, F. P. 
Maturana, et al., "Rockwell Automation’s Holonic and 
Multiagent Control Systems Compendium," Systems, Man, and 
Cybernetics, Part C: Applications and Reviews, IEEE 
Transactions on, vol. 41, pp. 14-30, 2011. 
[19] I. 61499, "Function blocks for industrial-process measurement 
and control systems-part 1: architecture, International 
electrotechnical commission,Geneva 2005," ed. 
[20] V. Vyatkin, "IEC 61499 as Enabler of Distributed and Intelligent 
Automation: State of the Art Review," IEEE Transactions on 
Industrial Informatics, 2011 2011. 
[21] http://www.icreamcafe.com/   Accessed in March 2013. 
[22] http://protege.stanford.edu/, Feb 2013. 
[23] SWRL: A Semantic Web Rule Language Combining OWL and 
RuleML. Available: http://www.w3.org/Submission/SWRL/ 
[24] SPARQL. Available: http://www.w3.org/TR/rdf-sparql-query/ 
[25] NxtStudio (2014). Nxt generatioin software for nxt generation 
customers. Available: www.nxtcontrol.com 
263
