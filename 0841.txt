An Effective Vector-driven Biologically-motivated Neural Network
Algorithm to Real-time Autonomous Robot Navigation
Chaomin Luo
1
, Simon X. Yang
2
, Mohan Krishnan
1
, and Mark Paulik
1
Abstract—A novel biologically-motivated neural networks
approach associated with developed vector-driven autonomous
robot navigation is proposed in this paper. The biologically-
motivated neural networks (BNN) algorithm is employed to
guide an autonomous robot to reach goal with obstacle
avoidance motivated by Grossberg’s model for a biological
neural system. As the robot plans its trajectory toward the
goal, unreasonable path will be inevitably planned. A vector-
based guidance paradigm is developed for guidance of the
robot locally so as to plan more reasonable trajectories. In
addition,square cell map representationsare proposed for real-
time autonomous robot navigation. The BNN based scheme
demonstratesthatthealgorithmsavoidtheissueoflocalminima
inpathplanning.Inthispaper,bothsimulationandcomparison
studiesof anautonomous robotnavigation demonstratethatthe
proposed model is capable of planning more reasonable and
shorter collision-free paths in non-stationary and unstructured
environments compared with other approaches.
I. INTRODUCTION
Real-time collision-free navigation of an autonomous
robot in a non-stationary and unstructured environment is a
crucial issue in robotics. A number of methods for real-time
collision-free robot navigation are based on neural networks,
genetic algorithms, Ant Colony Optimization, and fuzzy
logic models have been developed to perform navigation
of an autonomous robot. For energy efﬁciency of real-time
collision-free autonomousrobot navigation,trajectory length
planed and robot turning numbers should be reasonable and
minimized.
There are plenty of studies on the real-time collision-
free navigation for robotic systems using various approaches
(e.g., [2], [3], [4], [5], [6], [7], [8]). Bin and Xiong [2]
proposed a real-time collision-free robot trajectory forma-
tion in a non-stationary environment based on a modiﬁed
neuralnetworkmodelwithout sufferingfromundesiredlocal
minima. However, trajectories generated by their model are
unreasonable and thus robot traverses longer distance to
reach the goal. Hu and Yang [3] proposed a knowledge
based problem-speciﬁc genetic algorithm (GA) method for
path planning of a mobile robot that outperforms standard
GA in terms of real-time robot navigation. Yang and Meng
[4] proposed a neural-dynamics-based path planning model,
which is a successful approach to plan reasonable, safe and
short paths for robot navigation. Glasius et al. [5] developed
a neural network model for real-time collision-free robot
1
C. Luo, M. Krishnan and M. Paulik are with The Advanced Mobility
Laboratory (AML), Department of Electrical and Computer Engineering,
University of Detroit Mercy, Michigan, USA luoch@udmercy.edu;
2
S. X. Yang is with The School of Engineering, University of Guelph,
Canada syang@uoguelph.ca.
pathplanningwithreasonabletrajectorygenerated.However,
the model does not perform appropriately in a dynamically
changing environments. Afsar et al. [6] proposed genetic
algorithms (GA) for optimal path planning integrated with
morphologicalimage processingof the terrain.A specialized
morphological preprocessing technique is employed to im-
prove the computational efﬁciency of GAs. Peng and Xu [7]
suggested a fuzzy logic and Bayesian network based method
associated with a decision-making method for unmanned
vehicle path planning.Recently, Xing et al. [8] described the
applications of Ant Colony Optimization Systems (ACO) to
intelligent vehicle navigation. It shows that ACO has been
devised in vehicle path planning as it is more robust and
faster in achieving the globally optimal solution.
In this paper, an effective vector-driven biologically-
motivated neural network (BNN) model for real-time au-
tonomousrobotnavigationisproposed.Thestatespaceofthe
discretely and topologically organized neural network is the
Cartesian workspace of an autonomous robot. The dynamics
of each neuron is characterized by a dynamical equation
derived from Grossberg’s model from a biological neural
system [1], [9]. There are only local lateral connections
among neurons. The neural activity can autonomously prop-
agate by identifyingthe inter-neuronsstructure and detecting
the strength of neural activities among neighboring inter-
neurons by using vector-driven navigation approach. The
effectiveness and efﬁciency of the proposed BNN integrated
with the vector-driven approach is validated by both com-
parison and simulation studies, in which comparison studies
demonstrate that the proposed model is capable of planning
more reasonable and shorter collision-free paths in non-
stationaryandunstructuredenvironmentsincomparisonwith
other models. The major contributionaddressed in this paper
is that a novel biologically-motivated neural network model
is derived from a biological neural system based on its
electrical circuit elements and it is ﬁrst applied to real-time
autonomous robot navigation.
II. BIO-MOTIVATED NEURAL NETWORK
ALGORITHM
A computational model for a biological neural system
using electrical circuit elements was ﬁrst proposedby Gross-
berg(1982)[1].Themodelofagradientdescentbasedneural
system is represented using electrical components shown in
Fig. 1 motivated from a biological neural system [1], [9]. A
neural system in this paper consists of one or more neurons.
Each neuron is a simple processing device that has inputs
(dendrites) and outputs (axons). Therefore, a neural system
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 4094
is modeled as a circuit shown in Figure 1, which is made up
of n neurons, mapping its input voltage v
i
into the output u
i
through the activation function f(v
i
).
The circuit representationof a Grossberg network delivers
mathematical description of the neural networks [1]. The
conductances g
1
, g
2
, ...,and g
n
aresynapticweightsbetween
the ith neuron and ground, which represents the nonzero
input conductance of the ith neuron. In the Hopﬁeld-type
neural network, conductance w
ij
connects the input of ith
neuron to output of jth neuron.
Each ampliﬁer has an input capacitance, C
i
, and an input
conductance (resistance), g
i
. Each ampliﬁer is supplied a
constant current by the external signals.
Inhibitory signals are simulated by inverting ampliﬁers,
which establish inhibitory connection. In the circuit,the time
constant of the exponential and synaptic weights are approx-
imated by a set of resistors. Description of electrical circuits
results in the equation to express the neuron activation.
Inverting 
amplifiers
In I1 I2
C1 C2 Cn
R1 R2 Rn U1 U2 Un
U1 U2 Un
Nonlinear 
amplifiers
Fig. 1. The electrical component representation of a neural system.
The potential v
i
is given by the following equation.
C
i
dv
i
dt
=? (
n

j=1
w
ij
+ g
i
)v
i
+
n

j=1
w
ij
u
j
+ I
i
(1)
The total current entering through the capacitance C
i
is sum
of n? 1 currents of value (u
j
? v
i
)w
ij
(for j = 1,2,...,n),
the current I
i
, and the current?g
i
v
i
. The total conductance
connectedto the input of neuron i, G
i
, and and its resistance
R
i
is deﬁned as Equation (2) in Figure 1.
1
R
i
=?
n

j=1
w
ij
+ g
i
(2)
The weights w
ij
transform the voltage u
j
?v
i
into currents.
Therefore, the potential v
i
is given by Equation (3).
C
i
dv
i
(t)
dt
=?
1
R
i
v
i
(t)+
n

j=1
w
ij
u
j
(t)+ I
i
(3)
The dynamics with memory of a neuron are modeled by the
capacitive term C
i
(dv
i
(t)/dt) on the Equation (4).
C
i
dv
i
(t)
dt
+
1
R
i
v
i
(t) (4)
Therefore, Equation (3) can be reformed as the following
equations:
dv
i
(t)
dt
=?
1
R
i
C
i
v
i
(t)+
1
C
i
n

j=1
w
ij
u
j
(t)+ I
i
(5)
where the time constant ?
i
= R
i
C
i
of the ith neuron in
Equation (5) is same as the jth neuron.
dv
i
(t)
dt
=?
1
R
i
C
i
v
i
(t)+ S
i
?
n

j=1
w
ij
u
j
(t)+ I
i
(6)
where S
i
? = C
i
. S
i
and ? are positive constants, and j
= 1,2,...,n. The biologically-motivated neural network is a
particular kind of function motivated by neurons in the
brain. The proposed discretely and topologically organized
model is expressed in 2D Cartesian workspace W of the
cleaning robots. The location of the ith neuron the state
space S of the neural network, denoted by a vector q
i
?
R
2
, uniquely represents a location in W. In the proposed
model, the excitatory input results from the goal location
and the lateral neural connections, while the inhibitory input
results from the obstacles only. Each neuronhas local lateral
connections to its adjacent neurons that constitute a subset
R
i
in S. The subset R
i
is called the receptive ﬁeld of the
ith neuron in neurophysiology.The neuron responds only to
the stimulus within its receptive ﬁeld. Thus, the dynamics of
the ith neuron in the biologically-motivated neuron network
is characterized by the following equation as
dv
i
(t)
dt
=? A + S
i
?
k

j=1
w
ij
u
j
(t)+ I
i
(7)
where S
i
? = C
i
, A = 1/(R
i
C
i
) > 0 is a positive constant
representing feedback gain, and k is the total number of
neural connections of the ith neuron to its adjacent neurons
within the receptive ﬁeldR
i
. v
i
is the neural activity. S
i
and
? are positive constants. S
i
is given as
S
i
=

0, obstalce
1, otherwise
, (8)
Parameter I
i
is the externalinput to the ith neuronis deﬁned
as
I
i
=

E, if it is the goal
0, otherwise
, (9)
where E  ?  0 is a large positive constant. The
connection weight w
ij
from the ith neuron to the jth neuron
is given by
w
ij
= w
ji
=(k?/A)
√
2?1
(10)
where,again, k isthenumberofneuralconnectionsofthe ith
neuron to its neighboring neurons within the receptive ﬁeld
R
i
. Eachneuronhas onlylocal lateralconnectionsina small
region [0,r
0
]. It is obvious that the weight w
ij
is symmetric,
i.e., w
ij
= w
ji
. The proposed network characterized by
Equation (7) guarantees that the positive neural activity can
propagateto all the state space, but the negativeactivity only
stays locally. Therefore, the goal globally attracts the robot,
while the obstacles only locally avoid the collision. Fig.
2) illustrates the architecture of a 2D neural network with
adjacent neurons with regard to the central neuron C(p,q).
The activity landscape of the neural network dynamically
changes due to the varying external inputs from the unclean
areas and obstacles and the internal activity propagation
among neurons. The optimal robot path is planned from the
4095
dynamic activity landscape, and the previous robot location
to avoid least navigation direction changes. The robot will
move to the neuron with maximal neural activity or the
neuron with the second largest neural activity, which is
addressedinthefollowingsectionsofNavigationandVector-
driven Algorithms (Algorithm 2 and Algorithm 3 in the next
sections).
After the current location reaches its next location, the
next location becomes a new current location. The current
robot location adaptively changes according to the varying
environment.
i
j
Wij
r0
C(p,q)
O(p+1,q+1)
O(p-1,q)
O(p-1,q+1)
O(p-1,q-1)
O(p+1,q)
O(p+1,q-1)
Fig. 2. The architecture of a 2D neural network with adjacent neurons
with regard to the central neuron C.
A. The Navigation Algorithm
In order to guide the robot autonomously to traverse in
the dynamicalenvironmentwith obstacle avoidance,the pro-
posed model consists of an initialization phase, a navigation
phase and a vector-drivenphase that will be presented in the
next section. In these algorithms, it is necessary to deﬁne
a ﬂag, denoted by f(p,q), for a neuron at Point (p, q) to
indicate its status as visited, unknown (unvisited), obstacle,
or goal.
f(k,l)=
? ? ? 0 if it is unknown/unvisited
1 if it is visited
2 if it is obstacle
. (11)
Initially, the autonomous robot has no priori knowledge
of any obstacles in the environment, except the whole
workspace dimension. The model algorithm is composed
of following three phases: initialization phase, navigation
phase and vector-driven guidance phase. The Initialization
Phase: The initialization algorithm aims to initialize the
starting point of the robot, to set all the neural activities as
zeros, etc., which is given in Algorithm 1. The Navigation
Phase: The goal globally attracts the robot in the whole
state space through neural activity propagation, while the
obstacles only exercise a local inﬂuence on a small region
to prevent from collisions. The navigation algorithm for the
autonomousrobot is given in Algorithm 2. In this algorithm,
for a robot, once it traverses from the current point to its
next point, the next point becomes a new current point, and
the previous point is marked as visited (see Algorithm 2).
The deﬁnition of “next point” is in the sense that the next
point is selected based on the neural activity (see Equation
(7) and Algorithm 2). The Vector-driven Guidance Phase:
The vector-driven guidance algorithm aims to modify the
trajectory generated by the neural-dynamic-basednavigation
model so as to obtain more reasable path, which is indeed
a developed vector-based method. It is presented in the next
section.
The following notations will be utilized to describe the
proposed three algorithms. N
x
and N
y
are the discretized
size of the Cartesian workspace.
O(p, q) The set of the discretized workspace,
{(p, q),1≤ p≤ N
x
,1≤ q≤ N
y
}.
O(p, q) The unknown point (p, q),
1≤ p≤ N
x
,1≤ q≤ N
y
.
˙
O(p, q) The visited point (p, q),
1≤ p≤ N
x
,1≤ q≤ N
y
.
¨
O(p, q) The point (p, q) with the second
largest neural activity
1≤ p≤ N
x
,1≤ q≤ N
y
.
x(p, q) Neural activity at unknown point (p,q).
(p
c
,q
c
) The current point (p
c
,q
c
).
(p
n
,q
n
) The next point (p
n
,q
n
) with the maximal
activity.
x
m
(p
n
,q
n
) The maximal neural activity at
Point (p
n
,q
n
).
I(p, q) External input to neuron O(p, q).
Theneighborhoodofacentralneuron C(p, q)iscomposed
of some neighboring neurons that enclose the central neuron
C(p, q). The neighborhood of a central neuron C(p,q) in
the Grossberg neural network is deﬁned by O
r
(p,q) =
{N(m, n)|max{|m?p|,|n?q|}≤ r,1≤ m≤ N
x
,1≤ n≤
N
y
}, where r is the number of circles enclosing the central
neuron (see Fig. 2). The position of an adjacent neuron
O(m, n) near to the central neuron C(p, q) has the following
property: m?{p? 1,p,p+1} and n?{q? 1,q,q+1}
illustrated in Fig. 2, in which the architecture of a 2D
neural network with adjacent neurons with regard to the
central neuron C(p, q) is shown. The central neuron C(p,q)
illustrated by dark shaded square has eight neighboring
neurons if r=1. In this model, the central neuron locally
connects with closest neurons, i.e., r=1.
Algorithm 1 Initialization Algorithm
1) set p
c
:= p
0
; set q
c
:= q
0
, where (p
0
,q
0
) is a starting
point
// Set starting point to a current neuron
2) set f(p, q):=0; set I(p, q):=0, ? 1≤ p≤ N
x
,1≤
q≤ N
y
// Set all areas as unvisited except obstacles
3) set x(p, q):=0,? 1≤ p≤ N
x
,1≤ q≤ N
y
// Set all neural activities as zero
Algorithm 2 Navigation Algorithm
1) Compute neural activity by Equation (7)
2) O
r
(p, q) = {N(m, n)| m ? (p ? 1,p,p+1) and
n? (q? 1,l,l+1)}
// scan unknown adjacent neurons (p
n
,q
n
) =
4096
argmax
m,n
x(m, n)?{O
r
|m ? (p? 1,p,p+1) and
n? (q? 1,q,q+1)}
// ﬁnd the next adjacent neuron with the maximal
neural activity
3) set p
c
:= p
n
; set q
c
:= q
n
// Set current neuron to neighboring neuron
4) if?(p,q)?O
r
(m, n), s.t. x(p,q)≤ x(p
c
,q
c
)
// if adjacent neural activity≤ current neural activity
then
• set I(p,q):=0
• set
˙
O(p,q):= O(p,q)
• ﬂag f(p,q):=1
// Mark it as visited and external input as zero
end if
5) if?(p,q)?O
r
(m, n), s.t. x(p,q)≤ x(p
n
,q
n
)
// if adjacent neural activity≤ maximal neural activity
then
• set
¨
O(p,q):= O(p,q)
• ﬂag f(p,q):=3
// Mark it as the second largest neural activity
end if
6) if ?(g,h)?O
r
(m, n), ? g?{p? 1,p,p+1} and
h?{q? 1,q,q+1}, s.t. f(g,h)=1
// if adjacent neurons are all visited
then
• set I(g,h):=0
• set
˙
O(g,h):= O(p,q)
// Mark them as visited and external input as zero
end if
7) go to 1).
The computational complexity depends linearly on the
state space size of the neural network, which is proportional
to the workspace size. The number of neurons required is
equal to M = N
x
? N
y
. The workspace is discretized with
dimension of width N
x
and height N
y
. If the workspace
is an N ? N square in shape, there are N
2
neurons and
each neuron has at most eight local neural connections.
The computational complexity of the proposed algorithm is
O(N
2
).
B. The Vector-driven Algorithm
In this section, a vector-based approach is developed to
assist in navigation to plan more reasonable path. A vector
is a speciﬁc mathematical structure, which result primar-
ily from its ability to represent magnitude and direction
simultaneously. In Fig. 3, magnitude and direction of a
vector associated with the proposed BNN model are utilized
to guide the robot to plan a more reasonable and shorter
trajectory. There are two set of adjacent neural architectures
populated in the workspace with starting point S and goal
G in Fig. 3. A vector mathcalV containing magnitude and
direction is deﬁned as
V{|
? ?
V|,?} (12)
, where|
? ?
V| and ? represent magnitude and direction of the
vector, respectively.
According to the Grossberg’s BNN model [1], the robot
is guided to move to the neuron with the maximal neural
activity based on Algorithm 2 described previously. Once a
robot reaches a point/neuron, all the neural activities of ad-
jacent neuronsare investigated.The vector-drivennavigation
strategy is introducedto investigate the two neural activities:
one is the neuron with the maximal neural activity; the other
is the neuron with the second largest neural activity. The
vectors of two neurons are compared to adjust which point
the robot should move to. If the angle and distance to the
goal represented by the deﬁned vector indicate the position
with the second largest neural activity is better than the the
position with the maximal neural activity, then the robot
moves the position with the second largest neural activity.
In the ﬁrst neighboring neural architecture in Fig. 3, the
positions (neurons) with the maximal neural activity and the
second largest neural activity are denotes by N
1
s
and N
1
m
,
respectively. d
1
represents the distance from the current
neurontothegoal Gemployedtoguidetherobotmovetothe
goal effectively. ?
1
L
and ?
1
R
represent the angles to judge
which position of neurons with the maximal neural activity
or the second largest neural activity should be selected to
move.
Algorithm 3 Vector-driven Algorithm
1) Compute neural activity by Equation (7)
2) O
r
(p, q) = {N(m, n)| m ? (p ? 1,p,p+1) and
n? (q? 1,l,l+1)}
// scan unknown adjacent neurons (p
n
,q
n
) =
argmax
m,n
x(m, n)?{O
r
|m ? (p? 1,p,p+1) and
n? (q? 1,q,q+1)}
// ﬁnd the next adjacent neuron with the maximal
neural activity
3) if?(p, q)?O
r
(m, n), s.t. x(p, q)≤ x(p
n
,q
n
)
// if adjacent neural activity≤ maximal neural activity
then
• set
¨
O(p, q):= O(p, q)
• ﬂag f(p, q):=3
// Mark it as the second largest neural activity
end if
4) if?(p, q)?O
r
(m, n), s.t. ?
1
R
≤ ?
1
L
// The angles make better judgement
then
• set
¨
O(p, q):= O(p, q) // move to point with the
second largest neural activity
end if
5) go to 1).
III. COMPARISON AND SIMULATION STUDIES
The proposed vector-guided bio-motivatedneural network
approach is applied for an autonomous robot navigation
in room-like, and unstructured workspace. In this section,
this model with square map representation is applied to
various simulation environments. The proposed approach
4097
1 ?
L
1 ?
R
2 ?
L
2 ?
R
2 d
1 d
G
S
N1
s
N2
s
N2
m
N1
m
Fig. 3. The vector-driven navigation for a robot with magnitude and
direction).
enables an autonomous mobile robot to reach the target
along reasonably long trajectory and body turning numbers.
Simulationandcomparisonstudiesareperformedinthissec-
tion to validate the effectiveness and efﬁciency of proposed
autonomous robot navigation algorithms.
A. Vector-driven Bio-motivated Navigation in a Room-like
Environment
Theproposedmodelisappliedtoaknownindoorroomen-
vironmentcasewithsomeobstaclesintheknownworkspace.
The workspace is shown in Fig. 4, where S (2,2) indicates
the starting point and the squares represent the obstacles.
As describe previously, Bin and Xiong [2] modiﬁed a
neural network model for path planning application. Fig. 4
illustrates the generated unreasonable path of the robot by
their model. The neural network contains 30?30 discretely
and topologically organized neurons, where all the neural
activities are initialized to zero. The model parameters are
set as: r
0
=2 for the lateral connections; and E = 200 for
the external inputs. There are ﬁve set of wall-like obstacles
populated in the workspace. The mobile robot starts from
S(2,2). The generated robot path is shown in Fig. 5A,
where the robot is autonomously capable of traversing the
entire workspace with obstacle avoidance along a more
reasonable path. Finally, the robot reaches the target at
G(27,27). The varying environment is represented by the
dynamic activity landscape of the neural network. The real-
time robot trajectory is planned from the dynamic neural
activity landscape and the previous robot location driven
by vector-based methodology. Fig. 5B illustrates the neural
activitylandscapeoftheBNNinthis room-likeenvironment.
The peak point indicates the goal at G(27,27) while the
valleyareas illustratethe obstacles. Thetrajectorylengthand
robot’s body turning number by the proposed model and
the model of Bin and Xiong were calculated (Table I). It
shows that the trajectory length by our proposed model is
shorter than their model. The length of the trajectory by the
proposed model is 34.79% shorter than theirs. The turns of
the proposed model is only 1/3 of theirs.
B. Vector-driven Bio-motivated Navigation in a Structured
Environment
The proposed model is then compared with the Hu and
Yang’sGAmodel[3].Fig. 6reproducesthenavigationresult
presented by Hu and Yang whereas Fig. 7A implements
TABLE I
COMPARISONOF TRAJECTORY LENGTH AND NUMBERS OF TURNING OF
BIN AND XIONG’S MODEL AND THE PROPOSEDMODEL
Model Length Turns
Bin and Xiong’s model 72.62 27
Proposed model 47.35 9
0 5 10 15 20 25
0
5
10
15
20
25
30
30
G(27, 27)
S(2,2)
Obstacles
Robot
Fig. 4. The generated path by Bin and Xiong’s model (redrawn from Bin
and Xiong 2004).
the proposed BNN model. The same layout is used to run
the BNN navigation model. The simulation results depict
that the path produced by the proposed vector-driven BNN
model is shorter than the one by Hu and Yangs GA model.
The results are summarized in the following table. Fig. 7B
illustrates the neural activity landscape of the bio-motivated
neural networks in this structured environment. The peak
point indicates the goal at G(16,16) while the valley areas
illustrate the obstacles.The trajectorylengthby the proposed
model and the model of Hu and Yang were calculated (Table
II).It shows that thetrajectorylengthbyourproposedmodel
is shorterthantheir model.Thetrajectorylengthof proposed
model obviously calculated in Fig. 7A is 10?
√
2+16
= 30.14. In this case, the length of the trajectory by the
proposed model is 23.01% shorter than theirs.
TABLE II
COMPARISONOF TRAJECTORY LENGTH OF THE PROPOSED MODEL WITH
HU AND YANG’S MODEL
Model Length
Hu and Yang’s model 39.15
Proposed model 30.14
0 5 10 15 20 25
0
5
10
15
20
25
30
G(27, 27)
S(2,2)
30
Robot
A
0
10
20
30
0
10
20
30
0
0.2
0.4
0.6
0.8
1
X
activity value
Y
B
Fig. 5. The simulation result by the proposed model. A: The generated
trajectory; B: The neural activity landscape of the bio-motivated neural
networks.
4098
S
G
Fig. 6. The robot path generated by Hu and Yang’s GA model (redrawn
from Hu and Yang 2004).
0 5 10 15
0
5
10
15
17
S(1,1)
17
Obstacles
Robot
G(16,16)
A
0
5
10
15
0
5
10
15
0
0.2
0.4
0.6
0.8
1
activity value
Y
X
G B
Fig. 7. The simulation result by the proposed model. A: The generated
trajectory; B: The neural activity landscape of the bio-motivated neural
networks.
C. Vector-driven Bio-motivated Navigation in a Double U-
shaped Workspace
In order to validate the efﬁciency and effectiveness of
proposedmodel,asimulationhasbeenperformedtonavigate
the robot in a two U-shaped environment in Fig. 8A. It
demonstrates the the trajectory generated in a square cell
map environment representation is reasonable without local
minima. The robot position at starting point S(18,8) is
indicated by a blue dot whereas the path in square cell
map representation is denoted by dark solid circles with
the ﬁnal goal at G(19,21). Fig. 8B illustrates the neural
activity landscape of the bio-motivated neural networks in
the double U-shaped environment. The peak point denotes
the goal at G(19,21), while the valley areas indicate two
U-shaped obstacles.
0 5 10 15 20 25 30
0
5
10
15
20
25
30
G(19,21)
S(18,8)
Obstacles
Double U-shaped Workspace
Robot
A
0
10
20
30
0
10
20
30
0
0.2
0.4
0.6
0.8
1
activity value
X
G
Y
B
Fig. 8. The simulation result by the proposed model. A: The generated
trajectory; B: The neural activity landscape of the bio-motivated neural
networks.
In the proposed model, the next location of the neuron
propagation is determined by the maximal neural activity
or the second largest neural activity among the neighboring
neurons by the proposed vector-driven algorithm. No any
local minima are foundin this simulationwith two U-shaped
obstacles by the proposed algorithm. The negative activity
stays locally only. Since the goal point in the workspace is
set as I
i
= E, the positive neural activity propagates to the
whole workspace until it reaches the goal at G(19,21).
With regard to the implementation of the proposed model
onto an actual robot. An actual autonomous vehicle will
be developed as a test-bed for real-time navigation of an
autonomous vehicle. The vehicle incorporates six sensors
into its compact design as follows: a LIDAR, a DGPS
(Novatel’sProPak-LBPlus DGPS system),a digitalcompass
(PNI TCM6 digital compass), a camera (The AVT Stingray
CCD camera), and an IMU, each of which is enclosed in a
waterproof case and ﬁrmly mounted to the robot.
IV. CONCLUSIONS
A novel biologically-motivated neural networks approach
integrated with developed vector-driven autonomous robot
navigation is proposed in this paper. Both simulation and
comparison studies validated that the proposed model was
capable of planning more reasonable and shorter collision-
free paths in non-stationary and unstructured environments.
In the future, the proposed model will be implemented on
an actual robot [10].
REFERENCES
[1] S. Grossberg (1982), Studies of mind and brain. Reidel, Boston.
[2] N. Bin and C. Xiong (2004), “New approach of neural network for
robot oath planning”. In: Proc. of IEEE Intl. Symp. on Systems, Man
amd Cybernetics, pp. 735-739.
[3] Y. Hu and S. X. Yang (2004), “A knowledge based genetic algorithm
for Path Planning of a mobile robot”. Proc. of IEEE Intl. Conf. on
Robotics and Automation, pp. 4350-4355.
[4] S. X. Yang and M. Meng (2000), “An efﬁcient neural network method
for real-time motion planning with safety consideration”. Robotics and
Autonomous Systems, vol. 32, no. 2-3, pp. 115-128.
[5] R. Glasius, A. Komoda and S. Gielen (1996), “A biologically inspired
neural net for trajectory formation and obstacle avoidance”. Biological
Cybernetics, vol. 74, no. 6, pp. 511-520.
[6] F. A. Afsar, M. Arif and M. Hussain (2006), “Genetic algorithm based
path planning and optimization for autonomous mobile robots with
morphological”. In: Proc. of IEEEIntl. Multitopic Conf., Philadelphia,
USA, pp. 182-187.
[7] X. Peng and D. Xu (2012), “Intelligent online path planning for UAVs
in adversarial environments”. In: Intl. Journal of Advanced Robotic
Systems, no. 9, pp. 14-25.
[8] F. B. Xing, W.-J. Gao, K. Battle, T. Marwala and F. V. Nelwamondo
(2010), “Can ant algorithms make automated guided vehicle system
more intelligent?”. In: Proc. of IEEE Intl. Conf. on Systems Man and
Cybernetics, pp. 3226-3234.
[9] S. O. Haykin (2008) Neural Networks and Learning Machines (3rd
Edition). Prentice Hall.
[10] J. Chen, C. Luo, M. Krishnan, and M. Paulik (2010), “An enhanced
dynamic Delaunay triangulation-based path planning algorithm for
autonomous mobile robot navigation”. In: Proc. of SPIE Conf. on
Intelligent Robots and Computer Vision: Algorithms and Techniques,
San Jose, California, USA, vol. 7539, pp. 1-12.
4099
