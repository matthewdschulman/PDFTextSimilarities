Differential Geometric Modelling and Robust Path Following Control of
Snake Robots Using Sliding Mode Techniques
Ehsan Rezapour, Kristin Y . Pettersen, P˚ al Liljeb¨ ack, and Jan T. Gravdahl
Abstract— This paper considers straight line path following
control of wheel-less planar snake robots using sliding mode
techniques. We ﬁrst derive the Poincar´ e representation of the
equations of motion of the robot using the techniques of
differential geometry. Furthermore, we use partial feedback
linearization to linearize the directly actuated part of the system
dynamics. Subsequently, we propose an analytical solution to
the robust path following control problem in two steps. In the
ﬁrst step, we use sliding mode techniques to design a robust
tracking controller for the joints of the robot to track a desired
gait pattern. In the second step, we stabilize an appropriately
deﬁned sliding manifold for the underactuated conﬁguration
variables of the robot, thereby guaranteeing convergence of
the robot to the desired straight path. The paper presents
simulation results which validate the theoretical results.
I. INTRODUCTION
Wheels and legs have been the primary locomotion tools
for biologically inspired robots on ﬂat surfaces. However,
challenging environments where the surfaces are irregular
and unstructured, may signiﬁcantly degrade the performance
of such robots. Under these circumstances, snake robots are
an interesting alternative to wheel and leg based robots due to
their long and slender body. The many degrees-of-freedom
(DOF) of snake robots provide adaptability properties and
enable them to maintain mechanical stability even during
failure of some of their actuators. Motion control of snake
robots is, however, challenging due to the underactuation,
which is characterized by fewer independent control inputs
than DOF, complex gait patterns, and complicated force
interactions with their environments. Mine detection and
elimination, ﬁreﬁghting operations, and industrial operations
in narrow environments are typical areas where the structural
ﬂexibility properties of snake robots have made them an
interesting choice for applications.
This paper considers path following control of snake
robots. Path following involves making the outputs of the
motion control system converge to and follow a desired
planar path while guaranteeing forward motion along the
path and boundedness of the system states. This problem is
particularly relevant for snake robots since it can automate
Ehsan Rezapour, Kristin Y . Pettersen, and Jan T. Gravdahl
are with the Department of Engineering Cybernetics, Norwegian
University of Science and Technology, NO-7491 Trondheim, Norway.
emails: fehsan.rezapour, kristin.y.pettersen,
jan.tommy.gravdahlg@itk.ntnu.no. The afﬁliation of P˚ al
Liljeb¨ ack is shared between the Department of Engineering Cybernetics
and the Department of Applied Cybernetics, SINTEF ICT, NO-7465
Trondheim, Norway. email: fpal.liljebaeck@sintef.nog.
This work was partly supported by the Research Council of Norway
through project no. 205622 and its Centres of Excellence funding scheme,
project no. 223254.
their applications in environments where human presence is
unsafe or unwanted. However, underactuation, non-minimum
phase zero dynamics, and complex motion patterns make
this a challenging task where many research challenges still
remain. In this paper, we show how sliding mode control
techniques can be used to solve this problem. Our main
motivation for using this technique for motion control of
snake robots is the fact that these robots move on different
surfaces with different friction properties. Accordingly, the
necessity of developing control methods for snake robots
which are robust w.r.t. changes in the environment of the
robot is well-justiﬁed.
Path following control of snake robots has been considered
in several previous works. The majority of these works
consider snake robots with passive wheels, which is inspired
by the world’s ﬁrst snake robot developed in 1972 [1], and
which introduce sideslip constraints (i.e. nonholonomic ve-
locity constraints) on the links of the robot. These constraints
allow the control input to be speciﬁed directly in terms of
the desired propulsion of the snake robot, which is employed
in e.g. [2-5] for computed torque control of the position and
heading of wheeled snake robots. Path following control of
wheel-less (i.e. without velocity constraints) snake robots
is only considered in a few previous works. In [6], path
following control of swimming snake robots is achieved by
moving the joints according to a predetermined gait pattern
while introducing an angular offset in each joint to steer
the robot to some desired path. Methods based on numerical
optimal control are considered in [7] for determining optimal
gaits during positional control of snake robots. In [8,9] cas-
caded systems theory is employed to achieve path following
control of a snake robot described by a simpliﬁed model.
Sliding mode control of the joint angles of a snake robot is
considered in [10]. This work does, however, not consider
the underactuated DOF of the robot.
The ﬁrst contribution of this paper is to derive a partially
feedback linearized Poincar´ e representation of the equations
of motion of a snake robot without velocity constraints,
which gives a detailed mathematical description of the sys-
tem behaviour that can be used for analysis and model-based
control design. To our best knowledge, the only previous
work which derives the dynamic model of unconstrained
(i.e. without velocity constraints) snake robots in a geo-
metric mechanics framework is [11]. However, that work
employs general afﬁne differential geometry in contrast with
the particular Poincar´ e representation in the present work.
Furthermore, we add parametric modelling uncertainties due
to changes in the friction coefﬁcients to this model. We also
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 4532
present a partial feedback linearization of the resulting model
that makes it more suitable for model-based control design.
The second contribution of this paper is development of a
robust guidance-based path following control approach for
snake robots. Guidance-based control strategies are common
in e.g. marine control systems (see e.g. [12]). These control
strategies are based on deﬁning a desired heading angle
for the vehicle through a guidance law, and subsequently
designing a controller to track this angle. To our best
knowledge, the only previous works which present formal
stability proofs for guidance-based path following control of
unconstrained snake robots are presented in [9] and [17].
The control design in [9] is, however, based on a simpliﬁed
model of the robot, which is only valid for small joint angles.
These simplifying assumptions are not present in the model
considered in this paper. In contrast with [17], we use a
similar idea for the orientation control design, but we use
sliding mode techniques which make the design robust w.r.t.
the modelling uncertainties, and we present formal stability
proofs for the robust guidance-based control of a wheel-less
snake robot.
The paper is organized as follows. In Section II, we
develop a model of the snake robot dynamics in a differential
geometry setting. In Section III, we state the control design
objectives. In Section IV and V , we use sliding mode
techniques to develop tracking controllers for the joints and
the head angle of the robot, respectively. Finally, Section VI
presents the simulation results which validate the theoretical
results.
II. MODELLING
A. Geometry and Kinematics of the Snake Robot
A planarN-link snake robot evolves naturally in the con-
ﬁguration spaceQ =SG, which is composed of a shape
spaceS and a Lie groupG. In particular, the set of variables
that deﬁne the internal conﬁguration of the robot take values
inS. These are the relative joint angles of the robot which
are equipped with DC motors as actuators, and which in
coordinates we denote by q
a
= (
1
;
2
;:::;
N 1
) 2 S.
Moreover, the position variables which deﬁne the orientation
and the position of the robot in the plane, lie inG. These are
passive DOF of the system which in coordinates we denote
byq
u
= (
N
;p
x
;p
y
)2G. The map between the absolutei-th
link angle and (q
a
;
N
) is given by
i
=
P
N 1
n=i

n
+
N
. The
links of the robot are assumed to have uniformly distributed
mass and moment of inertia. Thus, the planar position of the
CM of the robot is deﬁned as the average of the position of
the CM of the individual links as
(p
x
;p
y
) = (
1
N
N
X
i=1
x
i
;
1
N
N
X
i=1
y
i
) (1)
Consequently, the total conﬁguration vector of the system is
q = [
1
;
2
;:::;
N 1
;
N
;p
x
;p
y
]
T
2Q (2)
The velocity space of the system is the (2N +4)-dimensional
tangent bundle of the conﬁguration manifold which we
global
global
n
n n
1 1
2 2
3 3
n-1 n-1
1
2
2
1
n-1
link,3
link,3
x y
0 0
Fig. 1: Kinematic parameters of the snake robot
denote byTQ. Since in this paper we consider a snake robot
without velocity constraints, the velocity vector of the system
has equal dimension to the conﬁguration vector and is given
by the time-derivative of (2) as
v = [
_

1
;
_

2
;:::;
_

N 1
;
_

N
; _ p
x
; _ p
y
]
T
2TQ (3)
So far we have deﬁned all the kinematic parameters that we
need for the control design. For a complete derivation of the
kinematic map for the snake robot see e.g. [8].
B. Equations of Motion
In this sub-section, we derive the Poincar´ e representation
of the equations of motion of the snake robot. The majority
of the previous works on snake robots have derived these
equations based on a Newton-Euler formulation. However,
we believe that formulating the equations of motion of the
system in a geometric mechanics setting can be particularly
useful for effectively addressing problems regarding the
fundamental properties of snake robot motion. In particular,
it is interesting both for controllability analysis and motion
planning algorithms which are derived based on differential
geometric approaches to mechanics, see e.g. [14].
Snake robots are a class of simple mechanical control
systems, where the Lagrangian functionL : TQ! R is
deﬁned as the difference between the kinetic energy w.r.t. a
Riemannian metric and the potential energy of the system.
For geometric modelling of the system, we ﬁrst write the
kinetic energy of thei-th link as the sum of the translational
and rotational kinetic energy of the link
K
i
(q;v) =
1
2
m( _ x
2
i
+ _ y
2
i
) +
1
2
J
_

2
i
(4)
where m and J denote the mass and moment of inertia of
the link, respectively. Thus, the total kinetic energy for the
N-link robot is deﬁned as the sum of the kinetic energy of
the individual links as
K(q;v) =
N
X
i=1
K
i
(q;v) (5)
The kinetic energy of the snake robot deﬁnes a Riemannian
metric on the conﬁguration space that can be written as
G
ij
(q) =
@
2
K(q;v)
@v
i
@v
j
(6)
whereG
ij
denotes the (i;j) component of the positive deﬁ-
4533
nite matrix-valued functionG. One can derive the Christoffel
symbols of the second kind (see e.g. [14]) associated with
the Riemannian metric of the robot in the form
 
k
ij
(q) =
1
2
G
kl
(
@G
il
@q
j
+
@G
jl
@q
i
 
@G
ij
@q
l
) (7)
where i,j,k,l2f1;:::;N + 2g, and G
kl
denotes the (k;l)
component of G
 1
. Note that the summation convention is
applied in (7), and henceforth, to all the repeated superscript
and subscript indices (i.e. whenever an expression contains
a repeated index, one as a subscript and the other as a
superscript, summation is implied over this index [14]).
Using the Riemannian metric and the Christoffel symbols,
it is possible to derive the equations of motion of the system
on the conﬁguration space w.r.t. (q;v) as
_ q
i
= v
i
(8)
_ v
i
=   
i
jk
v
j
v
k
 G
ik
F
diss
k
+
N 1
X
a=1
G
ik
F
a
k
u
a
(9)
where u = [u
1
;:::;u
N 1
] 2 R
N 1
denotes the vector
of control inputs which take values in the control set
U = R
N 1
. Moreover, F
diss
k
2 T

Q denotes the ex-
ternal forces due to ground friction which take values in
the cotangent bundle T

Q (see e.g. [14]). Furthermore,
F = fF
1
;F
2
;:::;F
N 1
g = fd
1
;d
2
;:::;d
N 1
g is
the collection of the input covector ﬁelds of the system
on Q. Since the codistribution generated by the N  1
input covector ﬁelds cannot span T

Q, the snake robot
is underactuated at any point of the conﬁguration space.
This underactuation reﬂects the fact that the input forces
cannot set accelerations instantaneously in all directions of
Q [15], i.e. the directions of the underactuated conﬁguration
variables. Note that since the robot moves in the horizontal
plane orthogonal to the direction of the gravitational ﬁeld,
there exists no gravitational term in the system dynamics (8-
9). The above Poincar´ e representation is called the natural
representation, and it has the property that the equations may
also be written in the following second-order form [14]
 q
i
+  
i
jk
_ q
j
_ q
k
+G
ik
F
diss
k
=
N 1
X
a=1
G
ik
F
a
k
u
a
(10)
where  q
i
= _ v
i
. We have already speciﬁed all the elements
of (10) except F
diss
, which is the subject of the next sub-
section.
C. The Ground Friction Model
In this sub-section, a viscous friction model is used for
capturing the essential properties of the anisotropic ground
friction forces acting on the system during motion on ﬂat
surfaces. For modelling the friction, we ﬁrst deﬁne the
rotation matrix for mapping from the global coordinate frame
to the local coordinate frame of link i, cf. Fig. 1, as
R
i
=
"
cos
i
  sin
i
sin
i
cos
i
#
(11)
Using (11), the velocity of thei-th link in the local coordinate
frame of the link can be written in terms of the velocity of
the i-th link in the global coordinate frame, i.e. ( _ x
i
; _ y
i
), as
v
link;i
=
"
v
link;i
t
v
link;i
n
#
=R
T
i
"
_ x
i
_ y
i
#
(12)
where v
link;i
n
and v
link;i
t
denote the linear velocity of the i-
th link in the normal and tangential direction of the link,
respectively. Assuming equal friction coefﬁcients for all the
links, the friction force acting on link i is deﬁned as
f
link;i
=
h
c
t
v
link;i
t
c
n
v
link;i
n
i
T
(13)
where c
t
and c
n
denote the viscous friction coefﬁcients in
the tangential and normal direction of the link, respectively.
Subsequently, we map the friction force acting on each link
to the global coordinate frame as
f
link;i
global
=R
i
f
link;i
(14)
Finally, we can write F
diss
in (10) as
F
diss
=
N
X
i=1
J
T
i
(q)f
link;i
global
(15)
where
J
T
i
(q) =

@ _ xi
@vj
;
@ _ yi
@vj

2R
(N+2)2
;j2f1;:::;N + 2g (16)
denotes the transpose of the Jacobian matrix of the CM of
the i-th link.
D. Partial Feedback Linearization of the Geometric Model
For performing a model-based control design, we would
like to write the model in the simplest possible form.
Feedback linearization is a common technique that can
simplify the model by cancellation of the nonlinear terms.
However, due to the lack of direct independent control for
some conﬁguration variables of the system, this technique
cannot be directly applied to the snake robot dynamics.
Thus, in this case we use partial feedback linearization which
linearizes the dynamics of the fully actuated conﬁguration
variables, i.e. dynamics of q
a
. To this end, we separate
the vector of the generalized coordinates q into two parts,
in the form q = [q
a
;q
u
]
T
2 R
N+2
, where q
a
2 R
N 1
and q
u
2 R
3
were deﬁned in Section II.A. Note that for
clarity of presentation of the control design, henceforth we
consider a local parametrization of the conﬁguration space in
an open subset of the Euclidean space. A partially feedback
linearized Newton-Euler formulated model of snake robots
was presented in [8], and we here extend it to a geometric
model of the robot that is subject to parametric modelling
uncertainties. This new model can be used for model-based
robust control design for snake robots.
The dynamic model (10) is not suitable for partial feed-
back linearization. This is due to the presence of more than
one input force in every scalar subsystem of (10). We note
that this is the consequence of multiplyingF byG
 1
in the
4534
right-hand side of (10). To obtain a suitable form of (10)
for partial feedback linearization, we change the Christoffel
symbols of the second kind (7), with those of the ﬁrst kind
using the relation
 
jkl
=
N+2
X
i=1
G
li
 
i
jk
(17)
This changes (10) to the following form which is previously
derived in [11], where the model is called the locomotion
dynamics of the snake robot given by
N+2
X
j=1
G
kj
 q
j
+
N+2
X
i=1
N+2
X
j=1
 
ijk
_ q
i
_ q
j
=
k
 F
diss
k
(18)
where  = Fu = [ 
1
;::: 
N 1
; 0; 0; 0] 2 R
N+2
denotes
the vector of input torques, in which 
i
denotes the control
torque provided by the actuator in the i-th robot joint.
The dynamic model (18) is consistent with the well-known
second-order Lagrangian equations of motion in the sense
that in the left-hand side the ﬁrst term is an acceleration
related inertia term, the second term represents the Coriolis
and centrifugal forces, and the right-hand side terms stand
for external forces due to the controls and friction [11].
The dynamic model (18) is suitable for the aim of partial
feedback linearization, since it can be separated into actuated
and underactuated dynamics:
N 1
X
j=1
G
mj
(q
a
) q
j
a
+
N+2
X
p=N
G
mp
(q
a
) q
p
u
+h
m
(q; _ q) = 
m
N 1
X
j=1
G
kj
(q
a
) q
j
a
+
N+2
X
p=N
G
kp
(q
a
) q
p
u
+h
k
(q; _ q) = 0
(19)
where m2f1;:::;N  1g, k2fN;:::;N + 2g, and h(q; _ q)
contain all the contributions of the Coriolis, centrifugal and
friction forces in (18). Since the objective of this paper is to
develop a path following controller that is robust w.r.t. model
uncertainties resulting from different friction properties, we
will furthermore extend the locomotion dynamics model of
[11], by adding these uncertainties to the model. In order
to add parametric modelling uncertainties due to changes in
the friction coefﬁcients, we divide the vector h2R
N+2
in
accordance with [q
a
;q
u
]
T
2 R
N+2
into two parts as h =
[h
a
;h
u
]
T
2R
N+2
, and present the following assumption.
A.I The terms h
a
(q; _ q) and h
u
(q; _ q) are perturbed with
multiplicative uncertainties in the form
h
a
= (I
1
+ 
1
)
^
h
a
2R
N 1
(20)
h
u
= (I
2
+ 
2
)
^
h
u
2R
3
(21)
where
^
h
a
and
^
h
u
are the estimations of the actualh
a
andh
u
,
respectively. Moreover, I
1
2R
(N 1)(N 1)
and I
2
2R
33
are identity matrices. Furthermore, 
1
2 R
(N 1)(N 1)
and 
2
2 R
33
, are measures of parametric modelling
uncertainties due to varying friction properties on surfaces.
For partial feedback linearization, we divide the matrix
representation of the Riemannian metric as
G =
"
G
aa
G
ua
G
au
G
uu
#
2R
(N+2)(N+2)
(22)
where G
aa
2 R
(N 1)(N 1)
, G
au
2 R
(N 1)3
, G
ua
2
R
3(N 1)
, and G
uu
2R
33
denote the corresponding sub-
matrices. We may now write (19) in the matrix form:
G
aa
(q
a
) q
a
+G
au
(q
a
) q
u
+h
a
(q; _ q) = 2R
N 1
(23a)
G
ua
(q
a
) q
a
+G
uu
(q
a
) q
u
+h
u
(q; _ q) = 0
31
2R
3
(23b)
where = [ 
1
;::: 
N 1
]
T
2 R
N 1
, and 0
31
denotes the
column vector of zeros with dimension 3. From (23b) we
have
 q
u
= G
 1
uu
(G
ua
 q
a
+ (I
2
+ 
2
)
^
h
u
) (24)
Inserting (24) into (23a) yields
(Gaa GauG
 1
uu
Gua) qa = +GauG
 1
uu
(I2 +2)
^
hu (I1 +1)
^
ha
(25)
To cancel out the nonlinear terms in the actuated subset of
the equations of motion, we deﬁne the control inputs as
 = (G
aa
 G
au
G
 1
uu
G
ua
)# G
au
G
 1
uu
^
h
u
+
^
h
a
(26)
where# = [#
1
;#
2
;:::;#
N 1
]
T
2R
N 1
is the new vector of
control inputs. Finally, by inserting (26) into (25), we obtain
the dynamics of the system in a control-afﬁne with drift form
 q
a
=# +G
a
(q; _ q)2R
N 1
 q
u
=f(q; _ q) +G
u
(q; _ q) +g(q
a
)#2R
3
(27)
with
f = G
 1
uu
^
h
u
= [f

N
;f
x
;f
y
]
T
2R
3
g
i
= G
 1
uu
G
ua
= [
i
; 0; 0]
T
2R
3
G
a
= 
1
^
h
1
 G
au
G
 1
uu

2
^
h
u
= [G
1
;:::;G
N 1
]
T
2R
N 1
G
u
= G
 1
uu

2
^
h
u
= [G

N
;G
x
;G
y
]
T
2R
3
whereg
i
denotes thei-th column ofg2R
3(N 1)
in which

i
(q
a
) :R
N 1
!R
<0
is a smooth function.
A.II We assume that 
i
(q
a
) is negative-valued for all i2
f1;:::;N  1g in any conﬁguration of the robot.
Remark I. Both through numerical simulations and ex-
periments, it can be veriﬁed that 
i
(q
a
) is negative-valued
for all i2f1;:::;N  1g in any conﬁguration of the robot.
This probably follows from the uniform positive-deﬁniteness
of the Riemannian metric of the robot.
Moreover, in dynamic model (27),f

N
,f
x
, andf
y
denote
the friction forces acting on 
N
, p
x
, and p
y
, respectively.
(f

N
also contains Coriolis and centrifugal forces besides
the friction forces). Furthermore, G
a
and G
u
denote the
parametric modelling uncertainties in the dynamics of the
fully actuated internal conﬁguration variables and the dy-
namics of the underactuated position variables of the robot,
respectively. In particular, the uncertain terms are upper
bounded by some known positive-valued vector function
%(q; _ q) = [%
1
(q; _ q);%
2
(q; _ q);:::;%
N+2
(q; _ q)]
T
2 R
N+2
>0
, i.e.
kG
i
(q; _ q)k%
i
(q; _ q) for every i2f1;:::;N + 2g.
4535
The partially feedback linearized model (27) is suitable for
analysis and control design for snake robot. For the aim
model-based control design, we write (27) in a detailed form
 q
a
= # +G
a
(q; _ q)2R
N 1
(28)


N
= f

N
(q; _ q) +
i
(q
a
)#
i
+G

N
(q; _ q)2R (29)
 p
x
= f
x
(q; _ q) +G
x
(q; _ q)2R (30)
 p
y
= f
y
(q; _ q) +G
y
(q; _ q)2R (31)
where i2f1;:::;N  1g.
III. CONTROL DESIGN OBJECTIVES
In this section, we state the control objectives for the
controllers proposed in the subsequent sections. We ﬁrst
deﬁne a controlled output vector for the system in the form
Y = [
~

1
;
~

2
;:::;
~

N 1
;
~
; ~ p
x
; ~ p
y
]
T
2R
N+2
(32)
Every element of Y denotes the error of the corresponding
conﬁguration variable w.r.t. its reference signal. Furthermore,
we deﬁne three control objectives. The ﬁrst part of the control
objective is to make the internal conﬁguration variables q
a
(i.e. the body shape of the snake robot) asymptotically track
time-varying references which will be deﬁned in the next
section. This control objective is deﬁned as
lim
t!+1
k
~

i
(t)k = 0 (33)
for every i2f1;:::;N  1g.
The second control objective is to make the head angle of
the robot, which is an underactuated DOF, track a reference
head angle such that
lim
t!+1
k
~
(t)k = 0 (34)
The third control objective concerns the position of the
snake robot w.r.t. a desired straight path. In particular,
we deﬁne the desired path as a smooth one-dimensional
manifoldPR
2
, with coordinates in thex y plane given
by the pair (p
xd
;p
yd
). These coordinates are parametrized
by a time-dependent variable (t)2R that is
P =f(p
xd
();p
yd
())2R
2
:  0g (35)
We deﬁne the control objective for the position of the CM of
the robot as practical convergence to the desired path such
that for the vector of the path following error variables ~ p =
[p
xd
((t)) p
x
(t);p
yd
((t)) p
y
(t)]
T
2R
2
we have
lim
t!+1
supk~ p(t)k  " (36)
where  " 2 R
+
is a positive constant that can be made
arbitrarily small. Moreover, we require that
_
(t) 0 and
lim
t!1
(t) =1 (i.e. that the snake robot moves forward
along the path), and boundedness of the states of the system.
IV. SLIDING MODE TRACKING CONTROL OF
THE JOINT ANGLES
In this section, we solve the control objective in (33)
by deﬁning the reference trajectories for the joints of the
snake robot (i.e. the gait pattern), and by using sliding mode
techniques to design a robust joint angle tracking control law.
It has previously been shown in [1] that the gait pattern
lateral undulation, which is the most common type of snake
locomotion, is achieved by moving the joints according
to the serpenoid curve. The resulting reference joint angle
trajectories are

ref;i
(t) = sin (!t + (i  1)) +
o
(37)
where denotes the amplitude of the sinusoidal joint motion,
! denotes the angular frequency, is a phase shift that keeps
the joints out of phase, and 
o
is an offset value that is
identical for all the joints. Moreover, motivated by [8], where
it is shown how 
o
can be used to steer the heading angle
of the robot, we use the second-order time-derivative of 
o
as an additional guidance control term for the underactuated
dynamics of the robot.
The powerful feature of sliding mode control is its ro-
bustness w.r.t. model uncertainties. For snake robots, this
robustness is useful for performing robust control tasks on
surfaces with varying friction properties. To design a robust
tracking controller for the joints of the robot, we ﬁrst deﬁne
the vector of the reference joint trajectories as
q
ref
(t) = [
ref;1
;
ref;2
;:::;
ref;N 1
]
T
2R
N 1
(38)
Thus, the vector of joint angle tracking errors is deﬁned as
(t) = [
~

1
;
~

2
;:::;
~

N 1
]
T
2R
N 1
(39)
where
~

i
=
ref;i
 
i
denotes the i-th joint angle tracking
error variable. We deﬁne the sliding mode variable for the
joint angles of the robot as
s =
_
 +K2R
N 1
(40)
where K = diagfk
i
g
N 1
i=1
2 R
(N 1)(N 1)
is a diagonal
matrix of positive constant gains. The time-derivative of the
sliding mode variable (40) is given by
_ s =

 +K
_
2R
N 1
(41)
The control objective in (33) is achieved by stabilizing the
sliding manifold s = 0
N 1
in ﬁnite time, and remaining on
the manifold for all future time. To this end, we select a
Lyapunov function candidate for (41) as
V =
1
2
s
T
s (42)
Taking the time-derivative of V along the solutions of (41)
gives
_
V =s
T
_ s =s
T
(

 +K
_
) =s
T
( q
ref
   q
a
+K
_
)
=s
T
( q
ref
  [# +G
a
(q; _ q)] +K
_
)
(43)
The typical structure of a robust controller is composed of
a nominal part similar to a feedback linearizing or inverse
control law, and of an additional term aimed at dealing with
model uncertainty [16]. Consequently, we take the joint angle
tracking control law as
# =#
nom
+#
add
(44)
4536
where
#
nom
= ( q
ref
+K
_
)2R
N 1
(45)
#
add
=  sgn(s)2R
N 1
(46)
and where = diagf
i
g
N 1
i=1
2R
(N 1)(N 1)
is a diagonal
matrix of positive constants. Moreover, we deﬁne sgn(s) =
[sgn(s
1
);:::; sgn(s
N 1
)]
T
2 R
N 1
. Substituting (44) into
(43) yields
_
V =s
T
[  sgn(s) G
a
(q; _ q)] (47)
We take 
i
=
0
+%
i
(q; _ q), where 
0
> 0 is a constant. We
note that the i-th term of
_
V denoted by
_
V
i
is of the form
_
V
i
=s
i
( 
i
sgn(s
i
) G
i
(q; _ q))
  (
0
+%
i
(q; _ q))s
i
sgn(s
i
) +js
i
j%
i
(q; _ q) 
0
js
i
j
(48)
Consequently,
_
V = 
P
N 1
i=1

0
js
i
j is negative-deﬁnite. This
implies that the sliding manifold s = 0
N 1
is a positively
invariant set for (41). The positive invariance property of
s = 0
N 1
implies that once the solutions of (41) reach the
sliding manifold, they cannot leave it and the motion of the
joints will be restricted to this manifold. To show that the
solutions of (41) reach the sliding manifold in ﬁnite time
we use the Comparison Lemma (see e.g. [13]). In particular,
we take W =
P
N 1
i=1
p
2V
i
=
P
N 1
i=1
js
i
j. The upper right
derivative D
+
W =
P
N 1
i=1
_
V
i
1
p
2Vi
satisﬁes the differential
inequality
D
+
W (N  1)
0
(49)
Using the comparison lemma we have that W (s(t)) 
W (s(0))   (N   1)
0
, which implies that W =
P
N 1
i=1
p
2V
i
= 0 must reach V
i
= 0 in ﬁnite time.
Accordingly, the solutions of (41) starting off the positively
invariant manifold s = 0
N 1
will reach it in ﬁnite time.
We summarize the results of the foregoing arguments in
the following theorem.
Theorem I. With the robust joint tracking control law (44),
the solutions of (41) reach the sliding manifolds = 0
N 1
in
ﬁnite time. The positive invariance of this manifold, which is
shown by (48), implies that these solutions will remain on the
sliding manifold for all future time. Moreover, exponential
stability of the origin of the joint tracking error dynamics
_
 = K on the sliding manifold, implies that the joint
tracking errors exponentially converge to zero during the
sliding phase, see [13], and the control objective (33) will
be achieved.
Remark II. The discontinuous sgn() function in the slid-
ing mode controller may lead to issues related to existence
and uniqueness of solutions, issues related to the validity of
the Lyapunov analysis, and chattering (see [13]). To avoid
these issues, a common approach is to approximate the (dis-
continuous) sgn(s) function with a high slope (continuous)
saturation function sat(s="). However, with this approxima-
tion the best we can achieve is ultimate boundedness of the
tracking errors with an ultimate bound that can be controlled
by the design parameter " [13]. Also note that in the case
that the snake robot parametric modelling uncertainties are
non-vanishing in the origin (;
_
) = (0
N 1
; 0
N 1
), then
the origin is not an equilibrium point that can be made
asymptotically stable.
V. UNDERACTUATED TRACKING CONTROL VIA
SLIDING MODE DESIGN
In this section, we design a head angle controller for
the snake robot in order to achieve the second controller
objective (34). In particular, we analytically show that robust
tracking control of the head angle of the robot can be
achieved by using 
o
as an additional control term for the
underactuated head angle of the robot. To this end, we
use


o
as a dynamic compensator which adds a similar
extra offset angle to the sinusoidal parts of the reference
joint trajectories such that the overall structure the robot
converges to the desired path. Furthermore, we use sliding
mode techniques to design the dynamic compensator in a
way that this convergence will be achieved even in the
presence of parametric modelling uncertainties due to friction
changes.
A. Sliding Mode Control of the Head Angle
With the gait pattern lateral undulation (37), the reference
joint trajectories are composed of non-identical sinusoidal
parts, and an identical offset. Let us denoteS
i
= sin(!t +
(i  1)). Thus, the reference trajectory of the i-th joint is

ref;i
=S
i
+
o
(50)
The head angle dynamics in closed-loop form can be ob-
tained by substituting the joint control law (44) into the head
angle dynamics (29), which gives (arguments are excluded
for notational convenience)


N
=f

N
+G

N
+
N 1
X
i=1

i
#
i
=
f

N
+G

N
+
N 1
X
i=1

i
(

S
i
+k
i
_
S
i
 k
i
_ q
i
)+
N 1
X
i=1

i
(


o
+k
i
_

o
+
i
sgn(s
i
) +G
i
)
(51)
where G
i
denotes the i-th component of the vector-valued
functionG
a
(q; _ q)2R
N 1
. The goal of the control design is
to make the head angle exponentially converge to a reference
head angle. In the following, we show that this convergence
can be achieved by using the additional control term


o
.
To this end, we ﬁrst deﬁne the error variable for the head
angle of the robot as
~
 =
ref
 
N
, where 
ref
denotes the
reference head angle of the robot which will be deﬁned in
Section V .B. Moreover, we deﬁne the sliding mode variable
for the head angle in the form
s

=
_
~
 + 
~
 (52)
where  > 0 is a constant gain. The time-derivative of the
sliding mode variable (52) is given by
_ s

=

~
 + 
_
~
 (53)
4537
To stabilize the constraint manifold s

= 0, we select a
Lyapunov function candidate for (53) as
V

=
1
2
s
2

(54)
The time-derivative of V

along the solutions of (53) gives
_
V

=s

_ s

=s

(

~
 + 
_
~
) =s

(


ref
 


N
+ 
_
~
) (55)
By inserting


N
from (51) into (55), we obtain
_
V

=s

[


ref
 f

N
 G

N
 
N 1
X
i=1
i(

Si +ki
_
Si ki _ qi)
 
N 1
X
i=1
i(

o +ki
_
o +i sgn(si) +Gi) + 
_
~
]
(56)
In order to stabilize the sliding manifold s

= 0 we take


o
=
1
P
N 1
i=1

i
(


ref
 f

N
 
N 1
X
i=1

i
[

S
i
+k
i
_
S
i
 k
i
_ q
i
+k
i
_

o
+
i
sgn(s
i
)] + 
_
~
 +

sgn(s

))
(57)
where 

> 0 is a constant gain. Since 
i
is a negative-
valued function for all i2f1;:::;N  1g, (57) is globally
well-deﬁned. In this work, through numerical simulations we
show that the states of the dynamic compensator (57), i.e.
(
o
;
_

o
), remain bounded, however, a formal proof of this
boundedness will be presented elsewhere. We deﬁne 

=

0
+%
N
(q; _ q) for some 
0
> 0. Inserting (57) into (56)
yields
_
V

=s

( 

sgn(s

) G

N
)
  (
0
+%
N
(q; _ q))s

sgn(s

) +js

j%
N
(q; _ q) 
0
js

j
(58)
The negative-deﬁniteness of
_
V

implies the positive invari-
ance of the sliding manifold s

= 0 for (53). This implies
that once solutions of (53) reach s

= 0, they will remain
there for all future time.
The results of the foregoing arguments is summarized in
the following theorem.
Theorem II. Inequality (58) along with the comparison
lemma [13], imply that all solutions of (53) starting off the
manifold s

= 0, will reach it in ﬁnite time, and solutions
on the manifold cannot leave it. Moreover, the exponential
stability of the origin of the head angle error dynamics
_
~
 =
 
~
 on the sliding manifold, implies that during the sliding
phase, the head angle error converges exponentially fast to
zero, and the control design objective (34) will be achieved.
B. The Path Following Guidance Law
In this sub-section, we target the third and last control
objective in (36) by deﬁning a Line-of-Sight (LOS) guidance
law in order to make the position of the CM of the snake
robot denoted by (p
x
;p
y
), converge to and follow a desired
straight path. Without loss of generality, we assume that the
desired path is always aligned with the global x-axis, i.e.
p
yd
 0. As a result,p
y
denotes the Euclidean distance from
the robot to the desired path, often referred to as the cross-
track error. We choose the head angle reference according
to the following LOS guidance law

ref
=  arctan(p
y
=) (59)
where > 0 is a constant parameter called the Look-Ahead-
Distance. The idea is that steering the head angle of the snake
robot such that it is headed towards a point located a distance
 ahead of the robot along the desired path, will make the
snake robot move towards the path and follow it.
We conjecture that the proposed guidance-based path
following control strategy steers the position of the CM of the
robot towards the desired path, and drives it along the path
even in the presence of parametric modelling uncertainties.
The next section presents simulation results which support
this conjecture. However, a formal proof of this conjecture
remains a topic of future work.
VI. SIMULATION RESULTS
In this section, the results of simulations of the path
following controller based on the complete model that we
developed throughout Section II are presented. We test our
control approach on a snake robot with N = 4 links.
However, these results are generalizable to snake robots with
more number of links. The inertial parameters of the links
were m = 0:5 kg, l = 0:1 m, and J = 0:0016 kgm
2
.
The parameters of the joint reference trajectory in (37) were
 = =6 rad, ! = 80=180 rad/s, and  = 2=3 rad.
The sliding mode controller gains were K = diagf2g
3
i=1
,
 = diagf15g
3
i=1
,  = 4, and 

= 10. The look-ahead-
distance was  = 3 m. We considered the initial conditions
(q; _ q) = (0
N+1
; 5; 0
N+2
), i.e. all the initial conditions were
set to zero, except 5 meters initial cross-track error.
To show the robustness of the proposed feedback law
w.r.t. the modelling uncertainties due to friction forces, we
assumed that the identiﬁed ground friction coefﬁcients were
c
n
= 10, and c
t
= 1, while the actual coefﬁcients were
c
n
= 20, and c
t
= 2. The simulation results show that the
proposed control strategy successfully steers the snake robot
towards the desired path and drives it along the path.
VII. CONCLUSIONS
In this paper we have considered the problem of robust
path following control of wheel-less planar snake robots.
We derived the equations of motion of the robot in a geo-
metric mechanics setting. We used sliding mode techniques
to design a robust tracking controller for the joint angles
of the robot to track a desired gait pattern. Furthermore,
we designed a dynamic compensator to control the head
angle of the robot to a Line-of-Sight Guidance law. The
simulation results veriﬁed the theoretical results and showed
that the robot successfully converged to and followed the
desired planar path in the presence of parametric modelling
uncertainties. A formal proof of this convergence remains a
topic of future work.
4538
Time [s]
?
o
[rad]
 
 
0 50 100 150 200
?1
?0.5
0
?
o
Time [s]
˙
?
o
[rad/s]
 
 
0 50 100 150 200
?2
?1
0
1
˙
?
o
Fig. 2: The solutions of the dynamic compensator converge to a
neighbourhood of the origin, after compensating for the head angle
error
Time [s]
?
i
[rad]
 
 
0 2 4 6 8 10 12 14 16 18
?1
?0.5
0
0.5
1
?
1
?
2
?
3
Time [s]
˜
?
i
[rad]
 
 
0 1 2 3 4 5
?0.6
?0.4
?0.2
0
0.2
˜
?
1
˜
?
2
˜
?
3
Fig. 3: The joints of the robot track the serpentine motions (above).
The joint tracking errors converge to zero exponentially (below)
Time [s]
˜
? [rad]
 
 
0 5 10 15
0
0.2
0.4
0.6
0.8
1
˜
?
Fig. 4: The head angle tracking error converges to zero exponen-
tially
p
x
[m]
p
y
[m]
 
 
0 10 20 30 40 50
?6
?5
?4
?3
?2
?1
0
1
(px,py)
Initial Head Direction
Desired Path
Fig. 5: The position of the CM of the robot (blue) follows the
desired straight line path (the x-axis).
REFERENCES
[1] S. Hirose, ”Biologically Inspired Robots: Snake-Like Locomotors and
Manipulators”, Oxford University Press, 1993.
[2] P. Prautsch, T. Mita, and T. Iwasaki, ”Analysis and control of a gait of
snake robot”, Transactions-Institute of Electrical Engineers of Japan,
D-120.3. pp. 372-381. 2000.
[3] H. Date, Y . Hoshi, and M. Sampei, ”Locomotion control of a snake-
like robot based on dynamic manipulability”, in Proc. IEEE/RSJ Int.
Conf. Intelligent Robots and Systems, Takamatsu, Japan, 2000.
[4] S. Ma, Y . Ohmameuda, K. Inoue, and B. Li, ”Control of a 3-
dimensional snake-like robot”, in Proc. IEEE Int. Conf. Robotics and
Automation, vol. 2, pp. 2067-2072, Taipei, Taiwan, 2003.
[5] M. Tanaka and F. Matsuno, ”Control of 3-dimensional snake robots by
using redundancy”, in Proc. IEEE Int. Conf. Robotics and Automation,
pp. 1156-1161, Pasadena, CA, 2008.
[6] K. McIsaac and J. Ostrowski, ”Motion planning for anguilliform
locomotion”, IEEE Transactions on Robotics and Automation, vol.
19, no. 4, pp. 637-652, 2003.
[7] G. Hicks and K. Ito, ”A method for determination of optimal gaits with
application to a snake-like serial-link structure”, IEEE Transactions on
Automatic Control, vol. 50, no. 9, pp. 1291-1306, 2005.
[8] P. Liljeb¨ ack, K. Y . Pettersen, Ø. Stavdahl, and J. T. Gravdahl, ”Snake
Robots-Modelling, Mechatronics, and Control”, Advances in Industrial
Control. Springer, 2013.
[9] P. Liljeb¨ ack, I. U. Haugstuen, and K. Y . Pettersen, ”Path following
control of planar snake robots using a cascaded approach”, IEEE
Transactions on Control Systems Technology, no.20, 111-126, 2012.
[10] M. Haghshenas-Jaryani, G. V ossoughi, ”Modeling and Sliding Mode
Control of a Snake-Like Robot with Holonomic Constraints”, in Proc.
IEEE Int. Conf. on Robotics and Biomimetics, Bangkok, 2009.
[11] Z. Wang, S. Ma, B. Li, and Y . Wang, ”A uniﬁed dynamic model
for locomotion and manipulation of a snake-like robot based on
differential geometry”, Science China Information Sciences, 54, no.
2: 318-333, 2011.
[12] T. I. Fossen, ”Marine control systems: Guidance, navigation and
control of ships, rigs and underwater vehicles”, Marine Cybernetics,
Trondheim, Norway, 2002.
[13] H. K. Khalil, ”Nonlinear Systems”, Third ed., Englewood cliffs, NJ:
Prentice-Hall, 2002.
[14] F. Bullo, A. Lewis, ”Geometric Control of Mechanical Systems”,
Springer, 2005.
[15] H. Goldstein, ”Classical Mechanics”, 2nd ed. Reading, MA: Addis-
onWesley, 1980.
[16] J. J. Slotine and W. Li, ”Applied nonlinear control”, Prentice-Hall, NJ,
1991.
[17] E. Rezapour, K.Y . Pettersen, P. Liljebck and J.T. Gravdahl, ”Path Fol-
lowing Control of Planar Snake Robots Using Virtual Holonomic Con-
straints”, in Proc. 2013 IEEE Int. Conf. on Robotics and Biomimetics,
Shenzhen, China, 12-14 Dec. 2013.
4539
