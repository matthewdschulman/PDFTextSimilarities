Identifying the Dynamic Model Used by the KUKA LWR:
A Reverse Engineering Approach
Claudio Gaz Fabrizio Flacco Alessandro De Luca
Abstract— An approach is presented for the model identiﬁ-
cation of the so-called link dynamics used by the KUKA LWR-
IV , a lightweight manipulator with elastic joints that is very
popular in robotics research but for which a complete and
reliable dynamic model is not yet publicly available. The control
software interface of this robot provides numerical values of the
link inertia matrix and the gravity vector at each conﬁguration,
together with link position and joint torque sensor data. Taking
advantage of this information, a general procedure is set up
for determining the structure and identifying the value of
the relevant dynamic coefﬁcients used by the manufacturer
in the evaluation of these robot model terms. We call this
a reverse engineering approach, because our main goal is to
match the numerical data provided by the software interface,
using a suitable symbolic model of the robot dynamics and the
inertial and gravity coefﬁcients that are being estimated. Only
conﬁguration-dependent terms are involved in this process, and
thus static experiments are sufﬁcient for this task. The main
issues of dynamic model identiﬁcation for robots with elastic
joints are discussed in general, highlighting the pros and cons of
the approach taken for this class of KUKA lightweight manip-
ulators. The main identiﬁcation results, including training and
validation tests, are reported together with additional dynamic
validation experiments that use the complete identiﬁed model
and joint torque sensor data.
I. INTRODUCTION
The development of complete and accurate dynamic mod-
els of robot manipulators is a necessary step for the design
of motion controllers with superior performance [1]. Starting
from the historical works on the Unimation Puma robot [2]
in the early days of robotics research, several methods and
procedures for the experimental identiﬁcation of dynamic
models of industrial robots have been formally developed [3],
[4], and the main techniques have reached by now a full
maturity [5].
In the recent years, a large interest has been devoted
to a new generation of lightweight manipulators intended
for safer physical human-robot interaction and improved
energy efﬁciency. Laboratory or specialized prototypes, such
as the WAMS by Salisbury [6] and the lightweight series at
DLR [7], have led now to commercial robots for research,
service, and industrial applications, with the Barrett manip-
ulator [8] and the KUKA LWR-IV arm [9] as two major
representative products.
A common characteristics of these robots is that they
intentionally include compliance at the joints, due to the pres-
ence of harmonic drives or ﬂexible transmission cables. This
The authors are with the Dipartimento di Ingegneria Informatica, Auto-
matica e Gestionale, Sapienza Universit` a di Roma, Via Ariosto 25, 00185
Roma, Italy (fgaz,fﬂacco,delucag@diag.uniroma1.it). This work is sup-
ported by the European Commission, within the FP7 ICT-287513 SAPHARI
project (www.saphari.eu).
poses some extra challenges to the dynamic modeling and
its parametric identiﬁcation, because of the extra variables
and dynamic terms involved, the more complex equations,
and the need of additional sensors [10]. Extensions of the
identiﬁcation methods that work for rigid robots are possible
in order to cover the model of robots with elastic joints,
including link and rotor inertias as well as joint stiffness.
However, complete and satisfactory results are not available
at present, at least to the authors’ knowledge.
While customers of the Barrett manipulator have al-
ready access to the details of the dynamic model and
numerical parameters of this arm, as provided by the de-
signer/manufacturer, KUKA has not yet released a public
version of the dynamic model of its lightweight robot.
Nonetheless, the control software of the LWR, in particular
its Fast Research Interface (FRI), can provide to the end-user
the numerical values of the elements of the link inertia matrix
and of the gravity vector at the current robot conﬁguration
(apparently, evaluated by a Newton-Euler routine). Since the
current link position and joint torque sensor data are also
available at a fast rate, this opens the way to an alternative
identiﬁcation procedure of dynamic model terms. The main
goal of this paper is to show if and how, with a suitable
symbolic modeling of the KUKA LWR-IV dynamics, we
can perform an off-line identiﬁcation of the unknown gravity
and inertial coefﬁcients based only on the numerical data
provided by the software interface.
We shall see that a series of link position measurements
and data reading collected in different static conﬁgurations
(and not necessarily along exciting motion trajectories
1
) al-
lows a very accurate estimation of the numerical values of the
dynamic coefﬁcients used by the robot manufacturer. Using a
symbolic dynamic model of the robot link dynamics obtained
in a classical way [1] and the inertial dynamic coefﬁcients
obtained with this sort of ‘reverse engineering’ procedure, it
is rather straightforward to derive also Coriolis and centrifu-
gal terms. Validation of this dynamic identiﬁcation process
can be performed in a more traditional way, letting the robot
move in its workspace and comparing the torques predicted
by the identiﬁed model with the measurements coming from
the joint torque sensors. It should be emphasized that the
possibility of separating the link dynamics from the motor
dynamics, so as to perform identiﬁcation only of the former,
1
Actually, it is possible to retrieve the same data readings during robot
motion. The choice of using static and randomly extracted positions has been
carried out in order to maximize the information content of the data. We
have repeated also our tests with the robot motion without ﬁnding sensible
differences.
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 1386
is a direct consequence of the presence of joint compliance
and elastic torque measurements.
The paper is organized as follows. After a brief summary
on the KUKA LWR system (Sect. II), the issues of dynamic
identiﬁcation for robots with elastic joints are discussed
in Sect. III. The assumptions made for developing the
dynamic model in symbolic form and the actual identiﬁcation
methodology are described in Sects. IV and V, respectively.
Section VI reports the obtained numerical results and their
discussion.
II. KUKA LWR ROBOT
The KUKA LWR robot (Light Weight Robot), in particular
in its release IV+ considered in this paper, is characterized
by an extremely light anthropomorphic structure with 7
revolute joints, driven by compact brushless motors via
harmonic drives. The presence of such transmission elements
introduces a dynamically time-varying elastic displacement
at each joint, between the angular position of the motor and
that of the driven link. The total weight is approximately
16 kg, with a rated payload of 7 kg. All joints are equipped
with position sensors on the motor and link sides, and with
a joint torque sensor.
Figure 1 shows the robot in its zero position, together with
the link frames chosen according to the Denavit-Hartenberg
convention. The associated parameters are given in Tab. I.
For the purpose of dynamic analysis, the origins of the
base (frame 0) and end-effector (frame 7) frames are taken
coincident respectively with the origins of the ﬁrst and sixth
link frames. In this way, only the two link lengthsd
1
andd
2
are left as non-zero kinematic parameters.
The KR C2 lr robot controller unit, together with the so-
called Fast Research Interface (FRI) [11], is able to provide
(at a 1 msec sampling rate) the link position q and joint
torque 
J
measurements, as well as the numerical values
of the link inertia matrix M
num
(q), of the gravity vector
g
num
(q), and of the robot Jacobian matrix J
num
(q) at the
Fig. 1. Denavit-Hartenberg frames of the KUKA LWR-IV: All x-axes
point toward the viewer (frames are displaced sideways for better clarity)
TABLE I
DENAVIT-HARTENBERG PARAMETERS OF THE KUKA LWR-IV
Link a
i

i
d
i

i
1 0 =2 0 q
1
2 0  =2 0 q
2
3 0  =2 d
1
q
3
4 0 =2 0 q
4
5 0 =2 d
2
q
5
6 0  =2 0 q
6
7 0 0 0 q
7
current conﬁguration (Fig. 2). The controller is designed in
such a way that the commandu
user
given by the user, which
can be in particular a desired joint positionq
d
or velocity _ q
d
,
or a user speciﬁed joint torque
user
as commanded through
the FRI library, is conveniently manipulated so as to have the
motors generate the appropriate torque for the commanded
task. Moreover, the FRI software library is at disposal of
the scientiﬁc community [12], supplying many useful tools
for robot communication and implementations of joint and
Cartesian position or impedance controllers.
  
Robot
t
u
user
q
M
num
(q) g
num
(q)
(q
d  ,  q
d  ,t
user
)
.
   FRI
Robot
KR C2 
Controller
J
num
(q)
q
t
j
t
j
Fig. 2. Signal ﬂows from/to the KUKA LWR robot and the KR C2
controller
III. DYNAMIC IDENTIFICATION OF
ROBOTS WITH ELASTIC JOINTS
For a robot with elastic joints, let  be the n-vector of
motor (i.e., rotor) positions, as reﬂected through the reduction
gears, and q the n-vector of link positions. Under the
standard modeling assumptions introduced by Spong [13],
the dynamic model takes the form
M(q) q+c(q; _ q)+g(q) = K( q) (1)
B

+K( q) =  
F
(2)
whereM is the positive deﬁnite, symmetric inertia matrix of
the robot links (including the motor masses),c is the vector
of Coriolis and centrifugal terms (quadratic in _ q),g is grav-
itational vector, B is the positive deﬁnite, diagonal matrix
of motor inertias (reﬂected through the gear ratios), K is
the positive deﬁnite, diagonal matrix of joint stiffness, are
the motor torques, and
F
are dissipative torques acting on
the motor side of the transmissions. The two n-dimensional
1387
second-order differential equations (1) and (2) are referred
to as the link and the motor equations, respectively.
It should be noted that all dynamic terms depend at most
on link variables only, that friction effects can be neglected in
the link equations (this is especially true for the DLR LWR-
III and the KUKA LWR-IV robots), and that the link and
motor equations are coupled only through the elastic torque

J
=K( q): (3)
This is also the quantity measured by joint torque sensors.
These properties are all relevant for setting up a speciﬁc
dynamic identiﬁcation procedure.
Model identiﬁcation methods for rigid robots rely heavily
on the linear parametrization property of their link dynam-
ics [1], namely on the fact that the left-hand side of eq. (1)
can be factorized asY
R
(q; _ q; q)
R
, where the subscript R
refer the (np
R
) regressor matrixY
R
and the vector ofp
R
dynamic coefﬁcients 
R
to rigid robots, in which case the
right-hand side of (1) is given by the input motor torque .
It can be shown that similar factorizations hold also
for robots with elastic joints [10]. However, one should
distinguish the case when only a measure of the link position
q is available, or when both the motor and link positions
(;q) can be measured. In the ﬁrst case, one can differentiate
twice in time the link equations and use the motor equations
to obtain the relation
BK
 1

M
::::
q +2
_
M
:::
q +

M  q+  n

+ (M +B) q+n+
F
=;
(4)
where n(q; _ q) = c(q; _ q) + g(q) for compactness and
dependencies have been dropped. Having eliminated the
dependence for motor variables, equation (4) takes the form
Y
E;1
(q; _ q; q;
:::
q;
::::
q)
E;1
=; (5)
with a more complex regressor Y
E;1
, having the same
number of rows of the rigid case, and a much larger vector of
dynamic coefﬁcients
E;1
. In the second case, the situation
is slightly simpler. It is easy to see that eqs. (1) and (2) can
be rearranged as
Y
E;2
(q; _ q; q;;
_
;

)
E;2
=

0


; (6)
where the regressorY
E;2
has now twice the number of rows
of the rigid case.
From either (5) or (6), one can proceed in principle to
dynamic identiﬁcation as in the rigid case. However, apart
from the more complex regression matrices and/or the larger
number of (off-line) numerical differentiations needed on the
measured positions, in the case of the KUKA LWR robot we
don’t have access to the actual input torque and so these
methods cannot be used.
On the other hand, the torque-controlled nature of this
robot and the control architecture in Fig. 2 allow to bypass
this problem, by performing a separate, reduced identiﬁca-
tion. In fact, in such a situation, the model (4) can be replaced
by the link equation only
M(q) q+c(q; _ q)+g(q) =
J
(7)
which is formally identical to the rigid case, with the elastic
torque 
J
measured by the joint torque sensor in place of
the commanded torque .
IV. DYNAMIC MODELING OF THE KUKA LWR
A dynamic model of the link dynamics in the form (7) can
be obtained following different approaches [4]. As a result of
any of these procedures, a vector containing (nonlinear) com-
binations of the original robot dynamic parameters (mass,
coordinates of the center of mass, elements of the link inertia
matrix) can be factored out from the ﬁnal dynamic equations.
Only the elements of this vector of dynamic coefﬁcients (also
called base parameters [3]) will be identiﬁable.
We have chosen to avoid any simpliﬁcation or use of a
priori knowledge when setting up the assumptions for the
derivation of the robot dynamic model in symbolic form,
in order to perform the most complete estimation of the
dynamic coefﬁcients.
Therefore, let m
i
be the unknown mass of link i, for i =
1;:::;7. The position of the center of mass of link i with
respect to the ith link frame is denoted as
i
r
i;ci
=
 
c
ix
c
iy
c
iz

T
; (8)
and, similarly, its inertia tensor relative to the center of mass
of link i will possibly be a full (symmetric) matrix
i
I
`i
=
0
@
I
ixx
I
ixy
I
ixz
I
ixy
I
iyy
I
iyz
I
ixz
I
iyz
I
izz
1
A
; (9)
for i = 1;:::;7.
The total kinetic energyT(q; _ q) and potential energyU(q)
are computed from the single energy terms of each link `
i
.
For the potential energy, it is
U =
7
X
i=1
U
`i
= 
7
X
i=1
m
i

T
r
0;ci
; (10)
where the gravity acceleration in the absolute reference frame
(see Fig. 1, assuming that the robot base is horizontal) is
 =
 
0 0  g
0

T
; (11)
being g
0
> 0 the gravity acceleration constant, and the
position r
0;ci
of the center of mass of link i with respect
to the reference frame is computed as

r
0;ci
1

=
0
A
1
(q
1
)
1
A
2
(q
2
)
i 1
A
i
(q
i
)

i
r
i;ci
1

:
(12)
Each term of the kinetic energy comes from K¨ onig theorem,
T =
7
X
i=1
T
`i
=
1
2
7
X
i=1
 
m
i
i
v
T
ci
i
v
ci
+
i
!
T
i
i
I
`i
i
!
i

; (13)
in which
i
v
ci
is the absolute linear velocity of the center of
mass of linki and
i
!
i
is the absolute angular velocity of the
link i, both expressed in the same local frame.
The computation of
i
v
ci
and
i
!
i
has been performed in
symbolic form by means of the following recursive and easily
implementable algorithm (Moving Frames) [1]:
1388
1)
0
!
0
=0,
0
v
0
=0;
2) for i = 1;:::;7,
a)
i 1
!
i
=
i 1
!
i 1
+ _ q
i
i 1
z
i 1
b)
i
v
i
=
i 1
R
T
i
(q
i
)
 
i 1
v
i 1
+
i 1
!
i

i 1
r
i 1;i

c)
i
!
i
=
i 1
R
T
i
(q
i
)
i 1
!
i
d)
i
v
ci
=
i
v
i
+
i
!
i

i
r
i;ci
:
The inertia matrixM(q) and the gravity vectorg(q) are
obtained from the expression of the kinetic energyT and
potential energyU by symbolic differentiation as
M(q) =r
2
_ q
T(q; _ q); g(q) =r
q
U(q): (14)
Finally, the centrifugal and Coriolis velocity vector c(q; _ q)
is computed using the Christoffel’s symbols as
c(q; _ q) =S(q; _ q)_ q; (15)
where the ith rows
T
i
of theS matrix is given by
s
T
i
=
1
2
_ q
T
 

@m
i
@q

+

@m
i
@q

T
 
@M
@q
i
!
; (16)
beingm
i
the ith column of the inertia matrixM.
V. IDENTIFICATION PROCEDURE
The parameters in the gravity vector (mass and coordinates
of the center of mass of each link) can be arranged into a
vector
g
2R
pg
of coefﬁcients so that
g(q) =Y
g
(q)
g
: (17)
The elements of vector
g
have been determined by collect-
ing all the single products of trigonometric functions that
appear in the gravity term, and taking then their coefﬁcients
when different.
The same factorization approach can be applied also to the
inertia matrix M(q), although their (symmetric) elements
have to be rearranged ﬁrst in vector form. Let ~ m(q) be the
stacked vector of all lower triangular elements of the inertia
matrix (henceforth, the inertia stack). In the present case
of n = 7 joints, this is a column with n(n + 1)=2 = 28
components. Similarly to (17), we have
~ m(q) =Y
m
(q)
m
; (18)
where the vector of coefﬁcients 
m
2 R
pm
contains the
masses, the coordinates of the centers of mass, as well as
the elements of the inertia tensor of the links.
The FRI software provides the numerical evaluation of
the gravity vector and the inertia matrix of the LWR at
the current link position usingGetCurrentGravityVector
and GetCurrentMassMatrix. Moreover, the current link
position, measured by the motor encoders and corrected as
q =  K
 1

J
(because of the joint compliance), is
returned by the call GetMeasuredJointPositions. It is
then possible to collect a fair amount of data even in a static
way: once the robot is brought to a desired conﬁguration, the
numerical values of joint position, gravity vector, and inertia
matrix are read and stored. Since the numerical values of
the gravity vector and the mass matrix only depend on the
link positions (and not on velocities and acceleration), the
same acquisition can be performed during a motion as well.
In both cases, this procedure avoids any inﬂuence of friction
or uncertainty.
Data collection is repeated for a list ofN different (special
and/or random) conﬁgurations, under the weak condition
Nnp
g
+p
m
: (19)
For a generic conﬁgurationq
k
in the list (1kN), we
have
g
k
=Y
g
k

g
; m
k
=Y
mk

m
; (20)
where the numerical gravity vector g
k
and the numerical
inertia stack vector m
k
are both retrieved from the FRI,
Y
g
k
=Y
g
(q
k
), and Y
mk
=Y
m
(q
k
). All these relations
are organized as
g =
0
B
B
B
@
g
1
g
2
.
.
.
g
N
1
C
C
C
A
=
0
B
B
B
@
Y
g
1
Y
g
2
.
.
.
Y
g
N
1
C
C
C
A

g
=Y
g

g
(21)
and
m =
0
B
B
B
@
m
1
m
2
.
.
.
m
N
1
C
C
C
A
=
0
B
B
B
@
Y
m1
Y
m2
.
.
.
Y
mN
1
C
C
C
A

m
=Y
m

m
: (22)
At this stage, one should possibly drop linearly dependent
columns of the regressors in order to reach a full (col-
umn) rank condition. Consequently, some coefﬁcients will
be grouped following the procedure suggested in [3]. A
coefﬁcient K
j
can be grouped with some other coefﬁcients
K
j1
;:::;K
jr
if the columnD
j
of a regressor (eitherY
g
or
Y
m
) is linearly dependent onD
j1
;:::;D
jr
, or
D
j
=t
j1
D
j1
+:::+t
jr
D
jr
; (23)
where t
jk
are constants. In this case, the column D
j
and
the coefﬁcient K
j
can be eliminated, while the coefﬁcients
K
j1
;:::;K
jr
will be replaced by K
R
j1
;:::;K
R
jr
, where
K
R
jp
=K
jp
+t
jp
K
j
, for p = 1;:::;r.
Condition (19) on the number N of samples is used to
avoid ill-conditioning of the matrices Y
g
and Y
m
. Equa-
tions (21) and (22) are solved using a least squares technique
as
^ 
g
=

Y
T
g
Y
g

 1
Y
T
g
g =Y
#
g
g (24)
and
^ 
m
=

Y
T
m
Y
m

 1
Y
T
m
m =Y
#
m
m; (25)
where Y
#
g
and Y
#
m
are the left pseudoinverse matrices of
Y
g
andY
m
, respectively.
Using (17) and (18), we obtain the estimates ^ g(q) and
^
M(q). From eqs. (15) and (16), we compute also the
estimate of the remaining velocity terms in the dynamic
1389
model (7). Finally, for a generic (q; _ q; q) given in symbolic
or numerical form, the expression
^ 
J
=
^
M(q) q+^ c(q; _ q)+^ g(q) (26)
provides also an estimation of the vector of the torques acting
at the elastic joints.
VI. NUMERICAL RESULTS
We have performed several data collections and pre-
liminary tests on the KUKA LWR-IV+ available in our
laboratory, in order to get more conﬁdence in the proposed
identiﬁcation procedure. From these tests, we have drawn
two basic observations:
1) Since the base of our robot is on a horizontal table, the
ﬁrst element of the gravity vector (the gravity acting on
the vertical joint axis 1) should always be identically
zero. Nonetheless, the numerical data provided by the
FRI may contain some small noise/calibration errors,
possibly due to the fact that the supporting table may
not be perfectly horizontal. We decided to simply
discard this element from the estimation procedure,
reducing to 6 the number of rows inY
g
(q).
2) The values retrieved with GetCurrentMassMatrix
for the inertia elements M
7;6
= M
6;7
were found
to be always zero, independently of the link position.
Therefore, since
M
7;6
(q) = c
7y
c
7z
m
7
cos(q
7
) I
7xz
sin(q
7
)
 I
7yz
cos(q
7
)+c
7x
c
7z
m
7
sin(q
7
) = 0;
it must be necessarily
I
7xz
=m
7
c
7x
c
7z
; I
7yz
=m
7
c
7y
c
7z
: (27)
No column drop was found to be necessary on the re-
gressor matrixY
g
, which had 12 independent columns from
the beginning of its contruction. On the other hand,Y
m
was
reduced from a matrix with108 columns to a full-rank matrix
with 74 columns, by dropping linear dependent columns
(and grouping the corresponding coefﬁcients). Using (27),
the total number of coefﬁcients are p
g
= 12 for the gravity
vectorg(q) and p
m
= 74 for the inertia stack vector ~ m(q).
The number of joint conﬁgurations used as training set
in the identiﬁcation procedure was chosen to be N = 1000.
For each data sample k 2 [1;N] and each robot joint, a
random value was extracted from a uniform distribution in
the admissible joint range (the upper and lower limits are
170

for joints 1, 3, 5 and 7, and120

for the remaining
joints), in such a way that bothY
g
andY
m
were found to
be full column rank. A different validation set of N
v
= 200
joint conﬁgurations has been chosen in a similar way.
The symbolic structure of the vector 
g
of dynamic
coefﬁcients that factorizeg(q) is

g
=
0
B
B
B
B
B
B
B
B
B
B
B
B
B
B
B
@
c
7y
m
7
c
7x
m
7
c
6x
m
6
c
6z
m
6
+c
7z
m
7
c
5z
m
5
 c
6y
m
6
c
5x
m
5
c
5y
m
5
+c
4z
m
4
+d
2
(m
5
+m
6
+m
7
)
c
4x
m
4
c
4y
m
4
+c
3z
m
3
c
2x
m
2
c
3x
m
3
c
2z
m
2
 c
3y
m
3
+d
1
(m
3
+m
4
+m
5
+m
6
+m
7
)
1
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
A
:
(28)
The numerical values (expressed in [mkg]) resulting from
the identiﬁcation procedure are
^ 
g
=
0
B
B
B
B
B
B
B
B
B
B
B
B
B
B
B
B
@
9:545710
 4
 2:982610
 4
8:352410
 4
0:0286
 0:0407
 6:563710
 4
1:334
 0:0035
 4:725810
 4
0:0014
9:453210
 4
3:4568
1
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
A
: (29)
As a ﬁrst validation, another identiﬁcation procedure has
been performed on a second, different LWR arm that was
mounting on its ﬂange a symmetric steel tip of 250 g. The
obtained result was:
^ 
tip
g
=
0
B
B
B
B
B
B
B
B
B
B
B
B
B
B
B
B
@
9:548610
 4
 2:982310
 4
8:353410
 4
0:0507
 0:0407
 6:561810
 4
1:4320
 0:0035
 4:731710
 4
0:0014
9:455510
 4
3:5580
1
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
C
A
: (30)
Note that only the values of ^ 
g
(4), ^ 
g
(7), and ^ 
g
(12)
changed remarkably, while the other coefﬁcients remained
practically the same. Indeed, the values of the mass and of
the position of the center of mass of link7 should change due
to the added tip mass, affecting in particular the coefﬁcients
that depend onm
7
andc
7z
. Considering the known kinematic
parametersd
1
= 0:4 m andd
2
= 0:39 m, we have computed
m
tip
7
 m
7
=
1
d
1

^ 
tip
g
(12)  ^ 
g
(12)

' 0:25 kg (31)
and
m
tip
7
 m
7
=
1
d
2

^ 
tip
g
(7)  ^ 
g
(7)

' 0:25 kg; (32)
1390
TABLE II
COMPONENTWISE MEAN SQUARE ERROR OF GRAVITY ESTIMATE
RELATIVE TO THE TRAINING SET (TS) AND VALIDATION SET (VS)
AND TO THE TORQUE VALIDATION EXPERIMENT (TVE)
TS VS TVE
J1 – – –
J2 9:310
 9
4:210
 7
2:110
 2
J3 9:110
 10
3:910
 9
2:410
 3
J4 3:310
 9
3:110
 8
3:310
 4
J5 7:310
 12
7:310
 11
2:910
 6
J6 6:410
 12
2:310
 10
5:810
 7
J7 7:410
 13
6:0210
 13
6:910
 10
TABLE III
COMPONENTWISE MAXIMUM ABSOLUTE ERROR OF GRAVITY ESTIMATE
RELATIVE TO THE TRAINING SET (TS) AND VALIDATION SET (VS)
AND TO TORQUE VALIDATION EXPERIMENT (TVE)
TS VS TVE
J1 – – –
J2 6:220210
 4
0:0019 0:3707
J3 5:355310
 4
1:695910
 4
0:1275
J4 5:615410
 4
4:783910
 4
0:0447
J5 2:139310
 5
2:326610
 5
0:0052
J6 1:236210
 5
3:297010
 5
0:0031
J7 1:591710
 6
2:080110
 6
1:027210
 4
i.e., the additional mass of the tip.
The identiﬁcation results for the vector 
m
of dy-
namic coefﬁcients that factorize ~ m(q) are obtained in a
similar way, but are not reported here due to lack of
space However, the symbolic expressions of 
m
and the
numerical values of ^ 
m
are available on the webpage
http://www.diag.uniroma1.it/labrob/lwrdyn.
Using (29), we have reconstructed the gravity vector ^ g(q)
according to (17). The ﬁrst two columns of Tab. II report
the mean square errors of the estimate of each component
of the gravity vectorg(q), respectively for the training and
the validation sets. Similarly, Table III reports the maximum
absolute errors.
The third column in both Tables refers to the following
torque validation experiment, used to evaluate the quality
of the estimation of 
g
and 
m
. We have imposed a
desired joint trajectory to the robot by means of the routine
JointPositionController of the FRI library. In partic-
ular, all the joints are requested to move along the same
following periodic trajectory:
q
des
(t) =

2
cos


7
t

; t2 [0;T]; T = 14 [s] (33)
so as to have a cyclic trajectory with start/end in q =
=2 at zero velocity. We have collected then the measured
joint positions and elastic torques 
J
, see eq. (3), by
means of the FRI routines GetMeasuredJointPositions
and GetMeasuredJointTorques. The position data were
differentiated twice numerically, in order to compute joint
velocities and accelerations, and then ﬁltered through a
4th order zero-phase digital Butterworth ﬁlter with a cutoff
0 2 4 6 8 10 12 14
?2
?1
0
1
2
time [s]
q
i
 [rad]
0 2 4 6 8 10 12 14
?1
?0.5
0
0.5
1
time [s]
dq
i
 [rad/s]
0 2 4 6 8 10 12 14
?0.4
?0.2
0
0.2
0.4
time [s]
ddq
i
 [rad/s
2
]
Fig. 3. Filtered joint positions (top), velocities (center) and accelerations
(bottom) retrieved when imposing the same sinusoidal trajectory to all joints
0 5 10 15
?1
0
1
2
time [s]
?
1
 [Nm]
0 5 10 15
?40
?20
0
20
40
time [s]
?
2
 [Nm]
0 5 10 15
?20
?10
0
10
20
time [s]
?
3
 [Nm]
0 5 10 15
?4
?2
0
2
4
time [s]
?
4
 [Nm]
0 5 10 15
?1
?0.5
0
0.5
1
time [s]
?
5
 [Nm]
0 5 10 15
?0.5
0
0.5
1
time [s]
?
6
 [Nm]
0 5 10 15
?1.5
?1
?0.5
0
0.5
time [s]
?
7
 [Nm]
 
 
retrieved torques
computed torques
Fig. 4. Sensed joint torques
J
after ﬁltering [dashed-blue] and estimated
torques evaluated according to eq. (26) [solid-green] for the motion of Fig. 3
frequency of 1 Hz. The obtained joint positions, velocities,
and acceleration are shown in Fig. 3. They were ﬁnally
substituted in eq. (26) in order to obtain the estimate ^ 
J
of
the joint torques. Figure 4 shows the evolution of the ﬁltered
torque
J
measured by the joint torque sensor, together with
the estimated joint torque ^ 
J
for all seven robot joints.
While a good estimation was obtained for joints 2, 3,
4, and 5, the residual errors (always smaller than 1 Nm
maximum) at the other joints 1, 6, and 7 may indicate the
1391
0 10 20 30 40 50 60
?200
?150
?100
?50
0
50
100
150
200
time [s]
q [deg]
 
 
J1
J2
J3
J4
J5
J6
J7
Fig. 5. Imposed joint trajectories for the ﬁnal validation experiment
0 10 20 30 40 50 60
?50
?40
?30
?20
?10
0
10
20
30
40
50
Time [s]
g[2] value [Nm]
 
 
actual
estimated
0 10 20 30 40 50 60
0
0.5
1
1.5
2
2.5
3
Time [s]
M[1,1] [Kg m
2
]
 
 
actual
estimated
Fig. 6. Comparison between the retrieved values [blue lines] of the gravity
vector element g
2
(q) (left) and of the inertia matrix element M
1;1
(q)
(right) and those estimated according to the reconstructed model [green
lines]
presence of unmodeled dynamics, especially static friction.
For instance, although the robot executes a joint trajectory
that is ‘specular’ around T=2 = 7 s, the sensed torques at
joints 1, 5, and 6 are considerably larger in magnitude during
the return phase.
A ﬁnal validation experiment has been performed in order
to evaluate each of the individual components of the esti-
mated gravity vector ^ g(q) and inertia matrix
^
M(q) (a total
of7+28 = 35 elements). Sinusoidal reference trajectories of
different frequency and amplitude have been imposed during
1 minute to each joint, as shown in Figure 5. The numerical
values of the current link position, inertia matrix, and gravity
vector have been retrieved from FRI every 120 ms. At the
end of the data acquisition, the values of each term of the
estimated inertia stack ^ m(q) and gravity vector ^ g(q) are
evaluated for each samplek, using the retrived link positions
q(k). Figure 6 shows the comparison between the retrieved
values of the dynamic elementsg
2
(q) (gravity acting on joint
2) and M
1;1
(q) (top/left element of the link inertia matrix)
and the estimated ones when 500 samples are used. This
perfect agreement is conﬁrmed also by the behavior of the
other dynamic elements (see the website). We note that the
element M
1;1
(q) has been chosen because it is the richest
in terms of number of dynamic coefﬁcients (it contains 52
out of the total of 74 inertial coefﬁcients).
VII. CONCLUSIONS
We have presented a new approach to the identiﬁcation of
the relevant part of the dynamic model used by the KUKA
LWR robot, namely the dynamics associated to the link
motion and implemented inside the KR C2 controller. The
method takes advantage of the numerical values of gravity
and inertia terms provided by the control software interface
FRI. Unmodeled dynamic effects are not considered in this
way (we cannot be more accurate or offset than the KUKA
engineers) and joint elasticity is also completely masked
(which was probably intentional in their control design). We
need to rely on the KUKA low-level (torque or position)
controller for making sure thatu
user
is actually executed. A
more complete model identiﬁcation that includes everything
(from the input command
user
to the link output positionq)
should consider also the modeling of the low-level controller.
Nevertheless, the model validated so far is very promising
and can help in the implementation of custom approaches,
in order to deﬁne ‘homemade’ dynamic controllers (e.g.,
passivity-based tracking laws) or to reconstruct the resid-
ual vector due to collisions in an independent (and more
accurate) way outside the KUKA controller. Moreover, from
the obtained dynamic coefﬁcients one can extract a set of
feasible dynamic parameters of the KUKA LWR, such as
link masses or inertia tensor elements, and supply realistic
values to cross-platform robot simulators such as V-REP.
REFERENCES
[1] B. Siciliano, L. Sciavicco, L. Villani, and G. Oriolo, Robotics: Mod-
eling, Planning and Control, 3rd ed. London: Springer, 2008.
[2] B. Armstrong, O. Khatib, and J. Burdick, “The explicit dynamic model
and inertial parameters of the Puma 560 arm,” in Proc. IEEE Int. Conf.
on Robotics and Automation, 1986, pp. 510–518.
[3] W. Khalil and E. Dombre, Modeling, Identiﬁcation and Control of
Robots. Hermes Penton London, 2002.
[4] J. Hollerbach, W. Khalil, and M. Gautier, “Model identiﬁcation,” in
Springer Handbook of Robotics, B. Siciliano and O. Khatib, Eds.
Springer, 2008, pp. 321–344.
[5] J. Swevers, W. Verdonck, and J. De Schutter, “Dynamic model iden-
tiﬁcation for industrial robots,” IEEE Control Systems Mag., vol. 27,
no. 5, pp. 58–71, 2007.
[6] K. Salisbury, W. Townsend, B. Eberman, and D. DiPietro, “Preliminary
design of a whole-arm manipulation system (WAMS),” in Proc. IEEE
Int. Conf. on Robotics and Automation, 1988, pp. 254–260.
[7] G. Hirzinger, A. Albu-Sch¨ affer, M. H¨ ahnle, I. Schaefer, and N. Sporer,
“On a new generation of torque controlled light-weight robots,” in
Proc. IEEE Int. Conf. on Robotics and Automation, 2001, pp. 3356–
3363.
[8] W. Townsend and J. Salisbury, “Mechanical design for whole-arm
manipulation,” in Robots and Biological Systems: Towards a New
Bionics?, P. Dario, G. Sandini, and P. Aebischer, Eds. Springer,
1993, pp. 153–164.
[9] R. Bischoff, J. Kurth, G. Schreiber, R. Koeppe, A. Albu-Sch¨ affer,
A. Beyer, O. Eiberger, S. Haddadin, A. Stemmer, G. Grunwald, and
G. Hirzinger, “The KUKA-DLR Lightweight Robot arm a new
reference platform for robotics research and manufacturing,” in Proc.
41st Int. Symp. on Robotics, 2010, pp. 741–748.
[10] A. De Luca and W. Book, “Robots with ﬂexible elements,” in Springer
Handbook of Robotics, B. Siciliano and O. Khatib, Eds. Springer,
2008, pp. 287–319.
[11] KUKA.FastResearchInterface 1.0, KUKA System Technology (KST),
D-86165 Augsburg, Germany, 2011, version 2.
[12] T. Kr¨ oger, “Fast Research Interface Library.” [Online]. Available:
http://cs.stanford.edu/people/tkr/fri/html/annotated.html
[13] M. Spong, “Modeling and control of elastic joint robots,” ASME J.
Dyn. Syst. Meas. Control, vol. 109, no. 4, pp. 310–319, 1987.
1392
