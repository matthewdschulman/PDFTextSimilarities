On the use of IMUs in the PnP Problem
Luigi D’Alfonso, Emanuele Garone, Pietro Muraca, Paolo Pugliese
Abstract— In this paper the problem of estimating the relative
orientation and position between a camera and an object is
investigated. It is assumed that both the camera and the object
are provided with an Inertial Measurement Unit (IMU) capable
of measuring their attitude with respect to the gravity and the
earth magnetic vectors. Furthermore, the object is assumed to
contain a feature of n points, the position of which is known in
the object coordinate frame. An algorithm is proposed, which
uses the image provided by the camera and the information
provided by the IMUs, to solve the PnP problem, i.e., to estimate
the relative pose of the object in the camera reference frame.
Two special cases will be studied. The ﬁrst is the case where
all the attitude information given by the IMU is used. In the
second case only the measurements provided by inclinometers
are used, neglecting those coming from the magnetometers,
because they are usually quite noisy. The effectiveness of the
proposed algorithms is tested either by numerical simulations
and by experimental tests with cameras.
I. INTRODUCTION
The Perspective-n-Point (PnP) problem, also known as pose
estimation, has been introduced for the ﬁrst time in the 80’s
by Fischler and Bolles [1]. It is the problem of determining
the relative position and orientation of an object with respect
to a camera by exploiting the image provided by the camera
and the knowledge of a feature of n points placed on
the object (see Figure 1). This problem ﬁnds application
in several ﬁelds, such as computer vision [2], computer
animation [3], photogrammetry [4] and robotics [5], [6], [7].
Several solutions to the PnP problem have been proposed
in the literature. From the theoretical viewpoint, it has been
proved that the smallest number of points which yield to a
ﬁnite number of solutions for this problem isn = 3 [1], since
the P2P problem (n = 2), in its classical formulation, admits
inﬁnite solutions. Moreover, as proved in [8], the smallest
number of feature points ensuring a unique solution to the
PnP problem in all possible object conﬁgurations is n = 4,
under the assumption they are coplanar and no more than
two of them lie on a single line.
Even if using n = 4 correspondences between feature
points and pixels is sufﬁcient to obtain a unique solution for
the PnP problem, a larger set of points, sayn> 4, makes the
solution more robust with respect to the measurement noise.
For this reason, many works in the literature focus on ﬁnding
algorithms to solve the generic PnP problem for n > 4.
In [9], authors consider triplets of points among then avail-
able correspondences, and for each of them they derive fourth
E. Garone is with Faculty of Applied Science, Control and Systems Anal-
ysis Department, Universit´ e Libre de Bruxelles, 1050 Bruxelles, Belgium.
E-mail: egarone@ulb.ac.be.
L. D’Alfonso, P. Muraca, P. Pugliese are with DIMES, Universit` a della
Calabria, Rende, E-mail:fldalfonso,muraca,puglieseg@dimes.unical.it.
degree polynomials in the unknowns of the problem. Then,
they rearrange such polynomials in a matrix form and use
the singular value decomposition to estimate the unknown
values and solve the PnP problem. In [10], authors propose a
non-iterative solution to the PnP problem, the computational
complexity of which grows linearly with n. The main idea
behind this method is to express the n feature points as a
weighted sum of four virtual control points in the camera
reference frame. The control points can be estimated inO(n)
time by expressing their coordinates as weighted sum of
the eigenvectors of a 12 12 matrix and solving a small
number of quadratic equations to pick the right weights. In
[11], an iterative method based on the minimization of an
error index in the 3D space, optimizing alternatively on the
relative position and orientation unknowns, is proposed. This
algorithm has a very fast convergence time, but it can get
stuck in local minima, depending on its initial guess.
In the classical PnP problem the only available informa-
tion is the one provided by the camera and the feature. How-
ever, in many cases, such as in robotics applications, addi-
tional sensors are available that might provide further useful
information to enhance the pose estimation. For instance,
mobile robots and cameras are often equipped with Inertial
Measurement Units (IMUs) that, in the static conﬁguration,
are able to measure the gravity vector, in their own reference
frame, through the accelerometers, and the magnetic ﬁeld, by
the magnetometers. Therefore, at the equilibrium, an IMU
provides all the information on the rotation of the sensor
itself with respect to North-East-Down (NED) reference
frame. However, it should be remarked that the information
on the magnetic ﬁeld is quite unreliable as magnetometers are
in general imprecise as their measurements are often affected
by local magnetic ﬁelds.
The aim of this paper is to use data from the IMUs
to ‘help’ the vision system to solve the PnP problem. In
particular, we will consider a static conﬁguration where,
due to the high resolution of the IMUs’ accelerometers,
the proposed approach is expected not only to simplify
the solution of the PnP problem, but also to yield a more
accurate pose estimation.
To the best of our knowledge, only a few recent works
using this approach have been presented in the literature.
In [12], the authors use the roll, pitch and yaw angles
provided by the IMU to compute the translation vector
between the feature and a ﬁxed camera with known position
and orientation. In the same paper it is also shown that, if
the whole object attitude is known, the P2P problem admits
a unique solution whenever the two points on the image
are distinct. However, it is worth mentioning that the results
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 914
obtained in that paper, although interesting from the scientiﬁc
viewpoint, are quite fragile w.r.t. pixel noise. Moreover, the
information about the attitude is computed by the IMU using
both the accelerometers and the compass, the latter of which,
as already remarked, can be noisy and unreliable. In [13],
authors assume to know the coordinates of two points in
the absolute reference frame and, using the roll and pitch
provided by an IMU mounted on the camera, they solve a
P2P problem on reconstructing the absolute camera pose.
The yaw angle provided by the IMU is discarded due to the
low accuracy of the compass.
In the present paper we consider a more general scenario
where no assumption on the absolute coordinates of either the
camera or the object is made, and both the observed object
and the camera are provided with IMUs. Several results
obtained for this conﬁguration will be presented, both in the
case where the information of the magnetometer is used or
only inclinometers are considered.
Early theoretical results along this line have been pre-
sented in [14] and [15]. In these works it has been shown
that the P2P problem using only inclinometers always gives
two solutions, except when the two points are seen as one
by the camera. Moreover, it has been remarked that singular
conﬁgurations and ambiguities could be avoided by using a
feature of 3 non-collinear points.
In this paper, ﬁrst we will propose a closed-form solution
for the P2P Problem with IMUs (i.e., using both incli-
nometers and magnetometers) which considerably improves
the robustness to pixel noise w.r.t. the algorithm proposed
in [12]. Then we will extend the above solution to the general
PnP Problem with IMUs.
Finally, the PnP problem using only inclinometers will
be investigated. In particular, the PnP problem will be
reformulated as an optimization problem where the objective
function is a least mean square index. This choice allows
to solve the PnP problem by solving a single variable
unconstrained optimization problem. The effectiveness of the
proposed PnP problem solution will be tested by means of
both numerical simulations and experimental tests.
The paper is organized as follows: in Section II we
state the problem and deﬁne our framework; in Section III
the solution to the PnP Problem with the rotation matrix
provided by IMUs is proposed; in Section IV the solution to
the PnP problem using only accelerometers is described and
analyzed; in Section V the experimental results are shown
and in Section VI we draw our conclusions.
II. PROBLEM STATEMENT
Assume to have a camera and an object in the ﬁeld of
view of the camera. Two reference frames are deﬁned: the
camera reference frame O
xyz
, the origin of which is in
the camera focus, and the object reference frame O
0
uvw
.
It is assumed that the object is provided with a feature
composed of n points, the coordinates of which are known
a priori in the object reference frame. Both the object and
the camera are equipped with an IMU capable of measuring
Fig. 1. Camera, image and object reference frames
the gravity unit vector
1
and the earth magnetic ﬁeld unit
vector: ^ g
o
= [g
u
;g
v
;g
w
], ^ m
o
= [m
u
;m
v
;m
w
] in the object
reference frame, and ^ g
c
= [g
x
;g
y
;g
z
], ^ m
c
= [m
x
;m
y
;m
z
]
in the camera reference frame, respectively. It is assumed that
the distance between the camera and the object is negligible
w.r.t. the earth radius, hence ^ g
c
; ^ m
c
and ^ g
o
; ^ m
o
represent the
same couple of vectors in two different coordinate frames.
Furthermore, the camera is assumed to have no distortion
and to be characterized by the focal length f and the
distance per pixeldpx. The image reference frame is denoted
by O
c
xcyc
, the image plane is z =f and the image center is
C
I
= (x
C
I
;y
C
I
). The overall scenario is shown in Figure 1.
The goal of this paper is to solve the PnP problem using
information provided both by the IMUs and the camera. The
aim is to obtain the transformation matrix from the object
reference frame to the camera reference frame
R
t
=

R t
0 0 0 1

;
where R is the relative rotation matrix and t = [t
x
;t
y
;t
z
]
T
is the translation vector.
III. PnP PROBLEM USING IMUS
Using the information provided by the IMUs, the whole
rotation matrix from the object reference frame to the camera
reference frame can be estimated. In this context, solving
the PnP problem translates into determining the translation
vectort between the two reference frames. In the following,
a new solution to the P2P problem with IMUs will be
presented. Afterwards, this solution will be extended to the
more general PnP problem with IMUs.
A. P2P Problem with known Rotation Matrix
The P2P problem is the problem of estimating the rel-
ative pose of the object in the camera reference frame
when the object contains a feature of two distinct points
A = (A
u
;A
v
;A
w
) and B = (B
u
;B
v
;B
w
), the coordinates
1
The IMU also gives the magnitude of the gravity and earth magnetic
ﬁeld vectors, but in this work only the vectors directions are used.
915
of which are known in the object reference frame. The in-
formation provided by the camera can be modeled using the
pinhole model [16] as follows. LetK = (K
u
;K
v
;K
w
) be a
point in the object reference frame. Using the transformation
matrix R
t
, the coordinates of K in the camera reference
frame can be written as
P
K
= [K
x
;K
y
;K
z
]
T
=RK +t; (1)
the coordinates of pixelP

K
related toP
K
in the image being
x
K
=
~
f
K
x
K
z
+x
C
I
; y
K
=
~
f
K
y
K
z
+y
C
I
; (2)
where
~
f = f=dpx is the camera focal length in pixels.
Using the above equations it is possible to compute the pixels
P

A
= (x
A
;y
A
) and P

B
= (x
B
;y
B
), where points A and B
are projected in the image plane. On deﬁning
~
P
A
=P

A
=
~
f,
~
P
B
=P

B
=
~
f, from equations (2) and (1) we obtain
~
P
A
= (~ x
A
;~ y
A
) =

r
1
A+t
x
r
3
A+t
z
;
r
2
A+t
y
r
3
A+t
z

;
~
P
B
= (~ x
B
;~ y
B
) =

r
1
B+t
x
r
3
B+t
z
;
r
2
B+t
y
r
3
B+t
z

;
(3)
where r
i
is the i-th row of matrix R.
Since all the information from the IMUs is used, matrixR
is known, thus solving the P2P problem simpliﬁes to estimate
the translation vector t. A possible way to ﬁnd t is to
use the results presented in [12]. There, the authors solve
equations (3) with respect tot
x
;t
y
;t
z
, obtaining the solution
t
x
=A
z
~ x
A
 r
1
A;
t
y
=A
z
~ y
A
 r
2
A;
t
z
=A
z
 r
3
A;
(4)
where
A
z
=
8
>
>
<
>
>
:
(r
1
  ~ x
B
r
3
)(A B)
~ x
A
  ~ x
B
if ~ x
B
6=~ x
A
,
(r
2
  ~ y
B
r
3
)(A B)
~ y
A
  ~ y
B
otherwise.
(5)
The above solution is very sensitive to pixel noise. To
mitigate the problem, we compute the translation vector
^
t
which minimizes the following index
E =jj
^
P
A
(
^
t) 
~
P
A
jj
2
+jj
^
P
B
(
^
t) 
~
P
B
jj
2
; (6)
where
^
P
A
(
^
t) and
^
P
B
(
^
t) are the pixels in which pointsA and
B are projected using the rotation matrixR provided by the
IMUs, the translation vector
^
t and equations (3). The above
index represents the reprojection error due to using R and
^
t
([12], [13], [10]). It is important to highlight that the resulting
optimization problem must be solved through numerical
methods and may require a high computational effort. To
overcome this difﬁculty, an alternative least mean square
index is proposed. The starting point is that equations (3)
can be rewritten as the following set of linear equations
 t
x
+t
z
~ x
A
= r
1
A r
3
A~ x
A
;
 t
y
+t
z
~ y
A
= r
2
A r
3
A~ y
A
;
 t
x
+t
z
~ x
B
= r
1
B r
3
B~ x
B
;
 t
y
+t
z
~ y
B
= r
2
B r
3
B~ y
B
;
(7)
Fig. 2. Index "t in some of the performed tests
which can be written in matrix form as follows
Qt =s; (8)
where
Q =
2
6
4
 1 0 ~ x
A
0  1 ~ y
A
 1 0 ~ x
B
0  1 ~ y
B
3
7
5; s =
2
6
4
r
1
A r
3
A~ x
A
r
2
A r
3
A~ y
A
r
1
B r
3
B~ x
B
r
2
B r
3
B~ y
B
3
7
5: (9)
An index alternative to (6) is deﬁned as
E
2
=jjQt sjj
2
; (10)
which is the least mean square index over equations (7). The
main advantage of using index (10) rather than (6) is that, as
well known, the optimal solution of this LMS problem can
be computed by the pseudo-inverse matrix of Q:
^
t =Q
†
s: (11)
Clearly, this solution is more robust with respect to pixel
noise than the one provided by (4).
To verify the robustness of the proposed solution with
respect to pixel noise, a set of 10000 numerical tests has
been performed, using a feature of n = 2 points placed in
A = [0;0;0]
T
m and B = [0:1;0:1;0]
T
m in the object
reference frame, assuming a zero mean Gaussian noise with
standard deviation  = 5 pixels on the pixels provided by
the camera. For each test, the transformation matrix has
been chosen randomly. The estimation of vector t by (11)
has been contrasted with the one proposed in [12] by the
relative error"
t
=jjt 
^
tjj=jjtjj. Figure 2 shows the results of
some of the performed tests. As expected, using the pseudo-
inverse, the estimation error "
t
is generically smaller than
the one obtained using equations (4) of [12], and provides an
average value of 0:0691 (7% error) against an average value
of 0:5029 (50% error) for the estimation method of [12].
Remark 1 Interestingly enough, indexE and indexE
2
are
related as E =jjMjj
2
E
2
, where
M = diag
h
1
r3A+tz
;
1
r3A+tz
;
1
r3B+tz
;
1
r3B+tz
i
;
for this reason, and under appropriate assumptions (e.g.,
t
z
 r
3
(A B)), the optimal value for E
2
can be taken
as a good approximation of the optimal value for E.
916
Fig. 3. Index "t minimizing E and minimizing E
2
Remark 2 As the indexE is the most used in the literature
when it comes to pose estimation, it is worth to compare it
with E
2
. Figure 3 shows the "
t
index for some of the per-
formed tests, computed using the translation vector obtained
by equation (11) and the translation vector resulting from
the index E minimization. Results show no evidence of any
real estimation advantages in using E and E
2
. Conversely,
as shown in Figure 4, the use of E
2
clearly outperforms the
use ofE in terms of computational time. The averaged com-
putation time
2
required to solve the P2P problem over the
performed 10000 tests is 0:0021s and 0:5563s, minimizing
w.r.t. E
2
and E respectively.
B. PnP Problem with known rotation matrix
In this section the results obtained for the P2P problem will
be extended to the PnP problem in the general case n 3.
To avoid situations where all the points of the featureP
i
are
seen by the camera as a single pixel it will be assumed that
at least three points of the feature are not collinear.
As in the P2P case, if the rotation matrix R between
the object and the camera reference frames is provided by
IMUs, the PnP problem can be reformulated as a set of
linear equations and LMS solution can be found using the
pseudo-inverse method. More formally, given a set of n
correspondences between feature points and pixels, the Q
matrix and the s vector will contain 2n rows, two rows for
each correspondence. Given a generic pixel
~
P
i
= (~ x
i
;~ y
i
)
and the related point P
i
= (P
u;i
;P
v;i
;P
w;i
) in the object
reference frame, the Q matrix and the s vector will contain
the following two rows, respectively:
Q
i;1
= [ 1 ; 0 ; ~ x
i
] s
i;1
=r
1
P
i
 r
3
P
i
~ x
i
;
Q
i;2
= [0 ;  1 ; ~ y
i
] s
i;2
=r
2
P
i
 r
3
P
i
~ y
i
:
Thus the matrix Q and the vector s will be:
Q =
2
6
6
6
6
6
4
Q
1;1
Q
1;2
.
.
.
Q
n;1
Q
n;2
3
7
7
7
7
7
5
; s =
2
6
6
6
6
6
4
s
1;1
s
1;2
.
.
.
s
n;1
s
n;2
3
7
7
7
7
7
5
: (12)
2
The computation time refers to using Matlab R2012 running on an Intel
Core i7 CPU Q720 processor.
Fig. 4. Computation times required to minimize w.r.t. E or w.r.t. E
2
Remark 3 Note that the dimension of matrix Q only
grows linearly withn. Moreover, in the common case where
the feature points are known a priori, the pseudo-inverse
matrix Q
†
can be pre-computed ofﬂine, thus translating the
PnP problem in a mere matrix-vector product.
IV. PnP PROBLEM USING ACCELEROMETERS ONLY
In the previous Section, the rotation matrix provided by
the IMUs is computed using both the magnetometers and
the accelerometers. However, due to the low reliability of
the compass, the information about the magnetic ﬁeld can be
noisy and yield to unreliable attitude values. In these cases,
a possible choice is to neglect the measurements provided
by the magnetometer and only use the inclinometers. To this
end, the ﬁrst step will be to parametrize the transformation
matrix R
t
with respect to the neglected data. Then, using
this new transformation matrix, a method to tackle the PnP
problem will be detailed.
Following the lines shown in [14], the rotation matrix R
can be parametrized w.r.t. the angle  representing the
information usually provided by the magnetometers. The
resulting parametrized transformation matrix will be:
R
t
(;t) =

R() t
0 0 0 1

: (13)
Solving the PnP problem only using information provided
by accelerometers translates in the problem of ﬁnding the
angle  of the parametrized rotation matrix R() and the
translation vector t between the camera and the object.
Given the set of feature points fP
i
g
n
1=1
in the object
reference frame and the related set of pixelsf
~
P
i
g
n
i=1
, the
following index is deﬁned
J(;t
x
;t
y
;t
z
) =
n
X
i=1
jj
^
P
i
(;[t
x
;t
y
;t
z
]
T
) 
~
P
i
jj
2
; (14)
where
^
P
i
(;[t
x
;t
y
;t
z
]
2
) is the pixel in which the fea-
ture point P
i
is mapped using the transformation matrix
R
t
(;[t
x
;t
y
;t
z
]
T
).
The above index represents the total quadratic repro-
jection error due to the use of the transformation matrix
R
t
(;[t
x
;t
y
;t
z
]
T
).
917
The following optimization problem can be formulated:
f

;t

x
;t

y
;t

z
g = arg min
;tx;ty;tz
J(;t
x
;t
y
;t
z
); (15)
once the optimal solution 

;t

x
;t

y
;t

z
has been found,
the transformation matrix R
t
(

;[t

x
;t

y
;t

z
]
T
) will be the
solution to the PnP problem.
As explained in Section III, ﬁnding an optimal solution for
the reprojection index may be difﬁcult and computationally
onerous. Again, to overcome this problem the use of LMS
as an alternative cost function is proposed
J
2
(;t
x
;t
y
;t
z
) =jjQ()t s()jj
2
; (16)
where Q() and s() are the Q matrix and the s vector
obtained in (12) when the rotation matrix is R = R().
Using this function, the optimization problem associated to
the solution of the PnP problem becomes
f

;t

x
;t

y
;t

z
g = arg min
;tx;ty;tz
J
2
(;t
x
;t
y
;t
z
): (17)
Interestingly enough, this four variables optimization prob-
lem can be reformulated without loss of generality as an
equivalent single variable optimization problem. In fact, if
the angle  is ﬁxed, the translation vector
^
t minimizing the
cost function admits the closed-form solution (11). Hence,
^
t
can be rewritten as a function of , and Problem (17) can
be equivalently reformulated as


= argmin

J
2
(;
^
t
x
();
^
t
y
();
^
t
z
()); (18)
where

^
t
x
();
^
t
y
();
^
t
z
()

T
= Q()
†
s(). Clearly, the
optimal solution of (18) will be the optimal solution for
Problem (17) too. The main advantage of this reformulation
is that the optimization problem (18) is a single variable
unconstrained optimization problem whose solution is com-
putationally less cumbersome than the one of (17).
Several efﬁcient unconstrained optimization algorithms
exist to solve the optimization problem (18), e.g., the Nelder-
Mead method [21]. Most of these algorithms are iterative and
require an initial guess; thus, to solve (18), an initialization
value
0
is required. A possible estimate consists of solving
a P3P problem on three arbitrary chosen feature points using
the P3P problem solution proposed in [14].
V. EXPERIMENTAL RESULTS
To assess the performance of the proposed algorithm,
several numerical simulations and real experiments have
been performed. Three algorithms have been compared: the
method (18) proposed in this paper, implemented through
the Nelder-Mead algorithm (using the Matlab function fmin-
search) and hereafter denoted as -PnP; the efﬁcient PnP
algorithm proposed in [10], denoted as e-PnP, in the im-
plementation provided by in [20]; the PnP with IMUs
method proposed in Section III-B, denoted as IMU-PnP
and based on the rotation matrix provided by IMUs and on
the translation vector computed using (11). To compare the
results obtained by the three algorithms the relative error
index " =jjR
t
 
^
R
t
jj=jjR
t
jj has been used, where
^
R
t
is
the estimated transformation matrix obtained by one of the
estimation algorithms and R
t
is the real one.
Fig. 5. Averaged " index over 300 conﬁgurations with n = 4;5;:::;200
feature points
A. Numerical Simulations
To evaluate the performance of the proposed solutions to
the PnP problem, a set of simulations have been performed.
In all simulations, different features with points randomly
generated in the box B = [ 0:2;0:2]
3
have been used. To
ensure the existence of at least three non collinear feature
points, the ﬁrst three points of each feature are in all cases
P
1
= [0;0;0], P
2
= [0:1;0:1;0] and P
3
= [0:1;0;0]. For
each test, the relative rotation and translation between the
camera and the object reference frames have been randomly
generated in the box B
0
= [ 0:5;0:5]
2
[0:5;2:5].
In all tests, a camera having a focal length
~
f = 800 pixels,
a resolution of 640480 pixels and centerC
I
= (320;240)
has been simulated. The data acquired by the IMUs and
the image provided by the camera are affected by zero
mean Gaussian noise with standard deviation 
g
= 0:01I
3
for ^ g
c
and ^ g
o
, 
pixel
= 5 pixels in the image, 
mag
= 8°
on the measurements provided by the magnetometer. The
performance of the algorithms have been tested with different
values of the numbern of feature points, starting fromn = 4
up to n = 200. Each set of feature points has been tested
in 300 different conﬁgurations. Figure 5 shows the averaged
value of the " index as n changes.
Note that the-PnP algorithm performs better than the e-
PnP and the IMU-PnP algorithms, always giving a smaller
value of the " index. Moreover, after a certain number of
points (about 40), adding further points to the feature does
not increase signiﬁcantly the quality of the solution.
B. Real Experiments
To experimentally test the proposed PnP solutions, the
following experimental setting has been used:
 A Logitech C310 HD webcam with resolution 1280
960 [17]. The camera intrinsic parameters have been
estimated using the Camera Calibration Toolbox [19].
 Two ArduIMU V3 Inertial Measurement Units [18].
 The four squares feature shown in Figure 6. Each corner
of the squares can be used as a feature point.
A set of experiments has been performed using the follow-
ing procedure: as a ﬁrst step, the camera and the object have
been placed in an unknown conﬁguration, with the object
918
Fig. 6. The four squares feature
in the ﬁeld of view of the camera, and an estimation
^
R
t;1
of the actual transformation matrix R
t;1
has been computed
using the -PnP, the IMU-PnP and the e-PnP algorithms.
Then the object has been rotated and translated by a known
transformation matrix R
t;2
. As a third step, an estimate
of R
t;2
, namely
^
R
t;2
, has been obtained. The displacement
matrix between the two conﬁgurations has been computed
as
^
R
2
t;1
= (
^
R
t;1
)
 1
^
R
t;2
. Finally the estimation
^
R
2
t;1
has
been compared withR
2
t;1
. Figure 7 shows two pictures taken
during the experiments.
The performance of the three algorithms have been con-
trasted through the proposed index " using n = 4;:::;16
feature points. A set of 42 experiments has been performed
changing the relative rotation and translation between the
camera and the object. The" index has been computed over
the obtained R
2
t;1
and
^
R
2
t;1
. The resulting averaged " index
is " = 29% for the e-PnP algorithm, " = 34% for the IMU-
PnP algorithm and" = 24% for the-PnP algorithm. Again
the-PnP algorithm presented in this paper performs in the
average better than the e-PnP and the IMU-PnP algorithms.
VI. CONCLUSIONS
In this paper the problem of estimating the relative ori-
entation and position between a camera and an object has
been considered. It is assumed that both the camera and
the object are equipped with an IMU and that the object
contains a feature of n points, the position of which in the
object reference frame is known a priori. Two new algorithms
that solve the PnP problem using the image provided by the
camera and the information measured by the IMUs have been
presented. The ﬁrst covers the case where all the information
provided by the IMU is used. The second algorithm covers
the case where only the measurements provided by incli-
nometers are used and the ones from the magnetometers are
discarded. It has been shown that if the entire information
provided by IMUs is used, then the resulting PnP problem
solution is more affected by noise than the solution obtained
using only cameras and inclinometers. Numerical simulations
and experimental tests have shown the effectiveness of the
proposed solution for the PnP problem.
Fig. 7. Pictures taken by the camera in conﬁguration R
t;1
(l) and R
t;2
(r)
REFERENCES
[1] M.A. Fischler, R.C. Bolles, Random sample consensus: a paradigm
for model ﬁtting with applications to image analysis and automated
cartography, Commun. ACM, 24(6):381–395, 1981
[2] R. Horaud, B. Conio, O. Leboulleux, An analytic solution for the
perspective 4-point problem, Computer Vision, Graphics and Image
Processing, 47:33–44, 1989
[3] C. Su, Y . Xu, H. Li, S. Liu, Application of Wu’s method in computer
animation, Proc. Fifth Int. Conf. on CAD/CG, Shenzhen, China,
December 2-5, 1997, pp. 211–215
[4] J.S.C. Yuan, A general photogrammetric method for determining
object position and orientation, IEEE Trans. Robot. Autom., 5(2):129–
142, 1989
[5] G. Chen, D. Xu, P. Yang, High precision pose measurement for
humanoid robot based on PnP and OI algorithms, Proc. IEEE Int.
Conf. on Robotics and Biomimetics, Tianjin, China, December 14-18,
2010, pp. 620–624
[6] Q. Wang, X Zhang, D, Xu, Human behavior imitation for a robot
to play table tennis, Proc. 24th Chinese Control and Decision Conf.,
Taiyuan, China, May 23-25, 2012, pp. 1482–1487
[7] Q. Wang, X Zhang, D. Xu, On pose recovery for generalized visual
sensors, IEEE Trans. Pattern Anal. Mach. Intell., 26(7):848–861, 2004
[8] M.A. Abidi, T. Chandra, A new efﬁcient and direct solution for pose
estimation using quadrangular targets; algorithm and evaluation, IEEE
Trans. Pattern Anal. Mach. Intell., 17(5):534–538, 1995
[9] L. Quan, Z. Lan, Linear N-point camera pose determination, IEEE
Trans. Pattern Anal. Mach. Intell., 21(8):774–780, 1999
[10] V . Lepetit, F. Moreno-Noguer, P. Fua, EPnP: An accurate O(n) solu-
tion to the PnP problem, Int. J. Comput. Vision, 81(2):155–166, 2009
[11] C.P. Lu, G.D. Hager, E. Mjolsness, Fast and globally convergent pose
estimation from video images,IEEETrans.PatternAnal.Mach.Intell.,
22(6):610–622, 2000
[12] L. Merckel, T. Nishida, Evaluation of a method to solve the
perspective-two-point problem using a three-axis orientation sensor,
Proc. 8th IEEE Int. Conf. on Computer and Information Technology,
Sydney, Australia, July 8-11, 2008, pp. 862–867
[13] Z. Kukelova, M. Bujnak, T. Pajdla, Closed-form solutions to the
minimal absolute pose problems with known vertical direction, Proc.
10th Asian Conf. on Computer Vision, Queenstown, New Zeeland,
November 8-12, 2010, pp. 216–229
[14] L. D’Alfonso, E. Garone, P. Muraca, P. Pugliese, P3P and P2P
problems with known camera and object vertical directions, Proc. 21st
IEEE Mediterranean Conf. on Control and Automation, Crete, Greece,
June 25-28, 2013, pp. 444–451
[15] L. D’Alfonso, E. Garone, P. Muraca, P. Pugliese, On the use of the
inclinometers in the PnP Problem,Proc.12thEuropeanControlConf.,
Zurich, Switzerland, July 17-19, 2013, pp. 4112–4117
[16] P. Corke, Robotics, Vision and Control. Fundamental Algorithms in
Matlab, Springer Berlin Heidelberg, 2011
[17] www.logitech.com
[18] http://code.google.com/p/ardu-imu/wiki/HomePage
[19] http://www.vision.caltech.edu/bouguetj/calib doc
[20] http://petercorke.com/Machine Vision Toolbox.html
[21] J.C. Lagarias, J.A. Reeds, M.H. Wright, P.E. Wright, Convergence
properties of the Nelder-Mead simplex method in low dimensions,
SIAM J. Optimiz., 9(1):112–147, 1998
919
