Polynomial Reconstruction of 3D Sampled Curves
Using Auxiliary Surface Data
Fredrik Bagge Carlson*
Lund University
Dept Automatic Control
PO Box 118
SE22100 Lund Sweden
FredrikB@control.lth.se
Ngoc Dung Vuong
Singapore Institute of
Manufacturing Technology
Mechatronics Group
71 Nanyang Drive, Singapore
ndvuong@SIMTech.a-star.edu.sg
Rolf Johansson
Lund University
Dept Automatic Control
PO Box 118
SE22100 Lund Sweden
Rolf.Johansson@control.lth.se
Abstract—This paper proposes a method for struc-
tural enhancement of a 3D sampled curve. The curve
is assumed to be organized, but corrupted with low
frequency noise. The proposed method approaches
the notion of curve reconstruction in a novel way,
where information about the structure in a scanned
surface is used to reconstruct the curve. Principal
Component Analysis is carried out on successive
neighborhoods along the curve to estimate reduced
dimensionalityspaces,whichallowspolynomialrecon-
struction. The e?ectiveness of the proposed method
is veriﬁed by both simulations and experiments.
IndexTerms—Polynomial reconstruction, 3D sam-
pled curve, point cloud, smoothing
I. INTRODUCTION
Industrial robots have traditionally been used for pick
and place tasks, where absolute accuracy performance
is not crucial. In recent years however, industrial ma-
nipulators have been introduced to contact tasks and
machining, where they can o?er a ﬂexible, lower cost
alternative to CNC (Computer Numerical Control) ma-
chines [1] [2]. Traditionally, programming of industrial
robots have been done using online programming ap-
proaches such as Lead through or Walk through [3]. This
method requires an operator to manually guide the robot
to a number of poses along the desired trajectory, which
will then be remembered and repeated. In the context
of Small and Medium-sized Enterprises (SMEs), high-
mix low-volume operations where the robot program is
executed a few times, is common. The workload related
to online programming will, in such operations, amount
to a signiﬁcant part of the total cost related to oper-
ating the robot. This often makes online programming
economically infeasible, thus raising the need for new,
rapid, programming methods.
O?ine programming is an alternative programming
methodthatinvolvesplanningofarobottrajectoryusing
a CAD model of the work piece. The work piece CAD
model however may not always be accessible in practice,
especially if the work piece was used or modiﬁed since
*Work supported by the project C12-R-006 at Singapore Insti-
tute of Manufacturing Technology.
Fredrik Bagge and Rolf Johansson are members of the LCCC Lin-
naeusCenterandtheeLLIITExcellenceCenteratLundUniversity.
design. To enable o?ine programming, the operator may
resort to reverse engineering of the work piece which
is both time consuming and costly. Nevertheless, the
ﬁeld of reverse engineering of industrial work pieces has
seen increasing popularity along with the introduction of
the o?ine programming methodology. The availability of
high performance 3D scanners from companies such as
GOM [4] and Leica [5] has further increased the interest
intechniquesforCADmodelconstructionbasedonpoint
cloud data [6].
An important part of a workpiece model is natural
features, such as edges. Several authors have considered
reconstruction of point sampled surfaces using feature
reconstruction [7] [8] [9] [10]. In [11], the author used
a moving least-squares technique to obtain a thinner
version of an unorganized point cloud representing a
curve sampled under heavy noise and in [12], knowledge
of a kinematic process used to generate a surface were
used to reconstruct the surface itself and its features.
To alleviate the o?ine programming procedure from
the costs of workpiece reconstruction, a new program-
ming approach is proposed. As can be seen, the market
is still open for a rapid robot programming method that
requires no prior knowledge of the work piece geometry
and does not rely on perfect work piece reconstruction,
which is based on costly and time consuming reverse
engineering. In this work, we introduce the need for
reconstruction of a sampled curve in an application of
intuitive robot programming, where a user indicates a
robot path using a device, which location in space can be
accurately tracked. The user indicated path is assumed
to be following a surface with unknown structure and is
prone to errors due to hand shake and mistakes made by
the user, reducing the accuracy and raising the need for
curve reconstruction.
After recording, the user indicated path is augmented
using information from a 3D scan of the work piece along
the indicated path. The point cloud representing the
surface of the work piece will contain structural infor-
mation, which can be exploited in order to reconstruct
the recorded path and correct errors caused by the user.
The above mentioned approaches all provide recon-
struction of curves present in a point cloud representa-
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 4411
tion of a surface. No method exits that considers path
reconstruction where the curve is reconstructed using
structuralinformationfromanauxiliary,relateddataset.
Theareaofcurvereconstructionisawellexploredﬁeld
outside the ﬁeld of workpiece reconstruction. Savitzky
and Golay pioneered the ﬁeld of polynomial reconstruc-
tion of curves [13]. Their method ﬁts a polynomial to
points within some distance from a center point. The
center point is then projected onto the ﬁtted function.
This approach applies to two-dimensional data and does
unfortunately not extend directly to higher dimensions.
To proceed to three dimensions, one approach is to
ﬁt a three dimensional function to the recorded data.
This has been explored in [14], where the authors use
Principal Component Analysis (PCA) to locally estimate
the tangent vector of a point sampled curve. A piece
wise linear curve is then obtained using the estimated
tangents. The data sets under consideration were unor-
ganized noisy point clouds and no information regarding
the sequence in which the points occur was available,
thus raising problems with self-intersecting curves.
As can be seen, existing literature concentrate ei-
ther on reconstruction of curves from unorganized point
clouds, or on reconstruction of curves that are believed to
bepresentinapointcloud,suchasedges.Reconstruction
of a curve related to a point cloud, but not belonging to
it, has not been treated.
The piecewise linear curve obtained in [14] is not suit-
able for representation of a curve following an arbitrary,
smooth surface. To deal with this shortcoming, a new
method is proposed. The proposed approach considers
the surface point cloud as an auxiliary data set, used
as a mean to enhance the structure of a curve which is
sharing features with it, in a way that may not have
been considered before. A novel approach is therefore
investigated,wherenoCADmodelreconstructionisdone
and only relevant parts of the surface, from a small
neighborhood around the curve, is used. This results in
an algorithm suitable for reconstruction of noisy curves
indicated by hand, aimed at execution by industrial
robots for manufacturing and ﬁnishing tasks.
First, a novel procedure for extension of the Savitzky-
Golayﬁltertothreedimensionalcurvesisdeveloped.The
ﬁlter is then further augmented with information in the
auxiliarydataset,producingareconstructedcurvewhich
more closely resembles the structure in a surface it is
relatedto.Sincethereconstructionamountstotheo?ine
calculation of an improved estimate of a point p
i
in a
sequence p
1:N
, given the entire sequence, the problem
falls in the category of smoothing [15].
The curve and the surface point cloud are dissimilar
in nature, but related to each other. In the application
considered, no restriction is put on what kind of surface
feature the curve is following. A reconstruction algorithm
must thus be able to handle a large variety of cases. For
high ﬂexibility, the 3D scanner is mobile, which intro-
duces uncertainty in the kinematic calibration between
the tracking system and the scanner. This fact increases
the di?culty of the exploitation of the auxiliary data.
The paper is organized as follows. Initially, a brief
review of theory related to the proposed solution is
presented in Sec. II, followed by the proposed approach
in Sec. IV. Simulations and experimental results are
presented in Sec. V and VI, followed by an ending
discussion.
II. Preliminaries - Principal Component
Analysis
Principal Component Analysis (PCA), originally in-
troduced by Pearson [16], is often used as a way to
reduce the dimensionality of high-dimensional data. A
dimensionality reduction may enable easier visualization
of the data or a lower complexity representation. It will
be used here as a way to allow analytical functions on
the form f :R?R to be ﬁtted to the originally three-
dimensional data.
To allow dimensionality reduction, PCA ﬁnds a vector
?R
n
, along which the data exhibit the greatest amount
of variance. This vector will be called the ﬁrst principal
component of the data set. The second principal com-
ponent will be the direction which describes as much as
possible of the variance that is not described by the ﬁrst
principal component, under the restriction that the two
componentsareorthogonal(Fig.1).Theﬁgureillustrates
how, in this case, the small third principal component
can be neglected in order to obtain a lower-dimensional
representation of the data, which is mostly contained in
a two-dimensional subspace.
Fig. 1. Illustration of dimensionality reduction using PCA [17]
Formally, PCA ﬁnds the eigenvalue, eigenvector pairs
(?,V ) of the covariance matrix ? of the data, such that
?V =?V (1)
The eigenvector V
X
corresponding to the greatest eigen-
value ?
x
will be the ﬁrst principal component.
III. Problem Statement
Apath,consistingofasequenceofpointssampledwith
equidistant spacing, is following a surface with unknown
geometry. Given a point cloud representation of the
surface, a reconstruction of the curve is to be performed
so as to both reduce the amount of noise present in the
path, and impose upon the path, structure in the surface
not already present in the path.
4412
Existing literature considers the problem of recon-
struction of curves present in a surface cloud or pure
reconstructionofpointsampledcurves.Nomethodexists
that reconstructs a curve and allows for exploitation of
an auxiliary, related surface data set.
IV. PROPOSED APPROACH
Inthissection,amethodforpolynomialreconstruction
of a 3D curve using a related point sampled surface
is developed. The curve is assumed to be organized,
corrupted with low frequency noise and following the
surface of a workpiece with unknown geometry.
After pre-processing, outlined in Algorithm 1, the path
is assumed to consist of a single segment with equidistant
points and without discontinuities. Reconstruction starts
by a choice of a parameter r called the reconstruction
radius. For each pointp
i
on the path, neighboring points
within distance r will be used in the reconstruction of
p
i
. This parameter will allow the user to control the
amount of smoothing and must be chosen according to
the amount of detail present in the work piece. The set
of points within the reconstruction radius will be termed
the path reconstruction neighborhood N
P
. Each point
will also have a set of nearest neighbors in the surface. If
a large fraction of the nearest neighboring surface points
to the current path segment is considered to be edge
points (points with high curvature), the path segment is
considered to be following an edge. Nearby edge points
will then be chosen as the surface reconstruction neigh-
borhoodN
S
. If no edge is present in the surface,N
S
will
consist of the k nearest neighbors in the surface to all
points?N
P
.
Algorithm 1 Pre-processing outline
Re-sample path to ensure points are equidistant;
Dividepathintosegmentsifsharpfeaturesarepresent;
for all Segments do
Determine ifsegment follows edge based on surface
curvature;
for all points p in segment do
Establish N
P
and N
S
;
end for
end for
Using the established N
P
and N
S
, the reconstruction
proceedsasfollows.APCAwillbecarriedoutonN
P
and
N
S
respectively. The analysis will yield two orthonormal
rotation matrices C
P
and C
E
? SO(3), whose columns
correspond to the principal components of the respective
data set. The PCA will through the matricesC
P
andC
E
transform each data pointp
i
to the principal component
space ˆ p
i
as
ˆ p
i
=C
?1
(p
1
??) (2)
where? is the center of mass for the considered data set.
The transformed points are then orthogonally pro-
jected to the subspace spanned by the ﬁrst two principal
components. Under the assumption that the data lives in
a planar subspace, the third principal component holds
no information and only noise is lost in the projection.
A polynomial of low degree is ﬁtted to the projected
points. For a single data set, a reconstructed point ˜ p
i
is
formed by the projection of ˆ p
i
onto a ﬁtted polynomial
f as
˜ p
i
= (˜ p
x
i
, ˜ p
y
i
, ˜ p
z
i
) =? +C
x
ˆ p
x
i
+C
y
f(ˆ p
x
i
) (3)
where the super-script p
x
? R
1
denotes the ﬁrst com-
ponent of p = (p
x
,p
y
,p
z
)
T
and C
x
? R
3?1
denotes
the ﬁrst column of C = (C
x
C
y
C
z
). The operation
p
i
=C ˆ p
i
+? transforms a point in principal component
space back to Cartesian space. The term C
y
f(ˆ p
x
i
) forms
the second component of the reconstructed point by
evaluating the polynomial and transforming the result
back to the original space.
To allow the use of information from the surface in the
reconstruction, Eq (3) is extended to
˜ p
i
=?
P
+C
x
P
ˆ p
x
i
+C
y
P
f
P
(ˆ p
x
i
)?? +C
y
P
f
S
(ˆ p
x
i
)(1??)? (4)
where ?
P
is the center of mass of the points?N
P
. The
parameter ?? [0, 1] is a weight that balances the inﬂu-
ence of information from the path and the surface and
?? [0, 1] determines the total amount of reconstruction.
The procedure is illustrated in Fig. 2.
x
z
y
C1
C2
mu_P
px
py
pz
p
(a)
C1
C2
C2 = f(C1)
p^x
f(p^x)
p^
p^y
mu_p
(b)
Fig. 2. Path in Cartesian space 2(a) and in principal component
space, together with a ﬁtted polynomial 2(b). The point ˆ p will be
projected onto the polynomial to form the reconstructed point ˜ p =
f(ˆ p
x
)
Notice how separate principal component analyses are
doneonthetwodatasets.Thisismotivatedbythedesire
to use only structural information in the surface cloud,
without using any absolute location or directional infor-
mation. This way, the impact of a slight misalignment
of the two data sets is reduced. A reconstructed point is
transformed back to the original space of the path using
only the principal components of the path C
P
.
By choosing the parameter ? close to one, little or
no structural information from the surface is used, and
all reconstruction is done from information in the path.
This choice resembles a two dimensional Savitzky-Golay
ﬁlter,extendedtoworkinthreedimensions.If?ischosen
closer to zero, only information from the surface is used
in the reconstruction. The reconstruction procedure is
summarized in Alg. 2.
4413
Algorithm 2 Reconstruction algorithm summary
for all Points p in segment do
C
P
,C
S
?PerformPCAonN
P
andN
S
separately;
ˆ
N
P
,
ˆ
N
S
? Transform N
P
, N
S
using C
?1
P
, C
?1
S
;
Discard third component of transformed points;
f
P
,f
S
? Fit functions to two-dimensional points;
Project ˆ p onto f
P
and f
S
;
Balance inﬂuence of projected points using ?;
˜ p? Transform projected points back to original
path space using C
P
;
end for
The choice of functions onto which the points are
projected is not limited to low-order polynomials. If the
curve is known to follow some speciﬁc type of function,
this function may be used instead.
Toassesstherationalityoftheproposedreconstruction
equation, Eq. (4), consider the case depicted in Fig. 3(a).
The path depicted exhibits structure not present in the
surface. The reconstruction radius is chosen so small that
the ﬁtted polynomial (blue) will render the reconstructed
point almost equal to the original point. The surface,
however, is free from the defect in the curve. When the
polynomial ﬁtted to the surface (red) is used in the frame
of the path’s principal components, it is no longer a
good ﬁt. When a path point is projected to the surface
polynomial it will therefore render a reconstructed point
far from the original one, more consistent with the
structure in the surface. Projecting the path point onto
the surface polynomial in this case will have a smoothing
e?ect, reducing the unwanted structure in the path. For
both reconstruction radii shown, the smoothing e?ect
will be greater using the surface polynomial than using
the path polynomial.
In Fig. 3(b), the surface exhibits structure not present
inthepath.Thecenterpointonthepathwillbeorthogo-
nallyprojectedtoapointonthesurfacepolynomial, thus
introducing to the path, some of the structure present in
thesurface.Byusingahigher-degreepolynomial,alarger
reconstruction radius can be used while maintaining
a good ﬁt on features in the surface like the one in
Fig. 3(b). Using a larger r in this case would shift the
center of mass closer to the straight part of the surface,
while the higher-degree polynomial would be able to
closely follow the deep feature. The reconstructed points
in this case would closer resemble the structure in the
surface. For the application considered however, the case
depicted in Fig. 3(a), where the path exhibits unwanted
structure, is more likely to occur. For this task, a lower-
degree polynomial will allow the amount of smoothing to
be dependent on the reconstruction radius chosen.
V. Simulation
In this section, the functionality of the proposed algo-
rithm is veriﬁed using artiﬁcial data sets. The synthetic
data were corrupted with noise to simulate the output
(a) (b)
Fig. 3. Surface (red) and path (blue) together with ﬁtted polyno-
mials (dashed). The center point of the respective data sets within
thereconstructionradius(circle)isshownasablackdot.Bothcases
are depicted with two di?erent reconstruction radii.
from real systems, such as low-frequency noise induced
by the operators hand motions and noise in the 3D
scanner generating the surface point cloud.
Initially, the intended usage of the algorithm is il-
lustrated. Fig. 4 shows a simulated point cloud surface
(red) with a noisy path (blue) following an edge in
the surface. The simulation compares the output of the
algorithm using both pure polynomial smoothing of the
path, (? = 1, magenta), and reconstruction using edge
information (? = 0, green). For this experiment, colored
noise was added to the path before reconstruction to
allow comparison between the reconstruction result and
a noise free, ground truth path. The noisy path was
aligned to the edge points of the surface point cloud
using the Iterative Closest Point algorithm [18]. This
resembles a real scenario where alignment between the
two data sets may be inaccurate due to the uncertainty
in the location of the 3D scanner. The surface cloud was
synthetically constructed and corrupted with noise with
standard deviation of 2% of the model scale. Moving
least-squares ﬁltering and curvature estimation was done
using Point Cloud Library [19].
Fig. 4. Reconstructed curved path. The path is following the
circular edge of a cylinder. Results are shown using ? = 1, ? = 0
and radius 4.
A simulated path allows a point-wise error to be cal-
culated between the reconstructed path and the original,
ground truth path, before it was corrupted by noise.
Fig. 5 shows a residual plot for an experiment using
4414
the same conﬁguration as when the result in Fig. 4 was
produced. The errors produced by the formula
e =
N
X
i=1


p
desired
i
?p
i


(5)
was e
0
= 13.0 for the reconstructed path using ? = 0,
e
1
= 16.8 for the reconstructed path using ? = 1, and
e
n
= 21.9 before reconstruction. The absolute magnitude
of these numbers is of secondary interest, the ratio
however indicates that the average error decreased after
reconstruction.
0 10 20 30 40 50 60 70 80 90 100
0
0.2
0.4
0.6
0.8
Norm of residuals, ||p
desired
?p||
 
 
Reconstruction using ? = 0
Reconstruction using ? = 1
Without reconstruction
Pointnumber
mm
Fig. 5. Norm of residuals for the conﬁguration shown in Fig. 4.
Residuals are calculated from the ground truth path.
We refer to Fig. 6 for a comparison between cases
where varying quality of both path and surface is used.
All data sets were constructed from a second-order
polynomial with added colored noise to produce sets of
varying quality. The results are discussed in section VII.
VI. Experimental results
Fig. 7. Test results using a scan from the Kinect sensor and path
recorded using OptiTrack Flex 13 optical tracking system.
602
604
155 160 165 170 175 180 185
?300
?250
?200
 
Inspection of path reconstruction result
 alpha = 1, radius = 30      
 
Resampled path
Reconstructed path
Break points
mm
mm
Fig. 8. Reconstruction of a path using no surface information.
Path recorded using OptiTrack Flex 13 optical tracking system.
To verify the functionality of the proposed approach
on real world data, an experimental result using a surface
point cloud obtained from the Kinect sensor is shown in
Fig. 7. The Kinect [20] sensor is a low-cost 3D scanner
which is used to prove the concept of the proposed intu-
itive robot programming approach. The Kinect estimates
su?er from correlated noise, described in [21]. When
used at its minimum working distance, this noise has
approximately the same magnitude as the typical errors
in the path caused by the operator, with a standard
deviation of approximately 1mm.
Thepathusedintheseexperimentswasrecordedusing
the OptiTrack Flex 13 optical tracking system [22]. The
recorded path shows typical errors related to indicating
a path by hand. Experience has shown that indication of
an edge by hand typically introduces a maximum error
of 2-5mm and a standard deviation of 0.5-1mm.
In the experiment, the path is supposed to follow a
ﬂat surface. In the center of the segment, the user has
made a signiﬁcant error, causing the path to rise above
the surface. If the surface is used in the reconstruction
(? = 0), the reconstructed path will be following the
surface more closely, indicated by the green path.
If no surface information is available, the proposed
method can be used using only information from the
path. Figure 8 illustrates a result where a curved path
is reconstructed without the use of surface information.
If no auxiliary data is available, a large reconstruction
radius may be used to enhance the structure of the
path using pure polynomial smoothing, adapted to three
dimensions. This indicates that the proposed method is
useful even for cases where the auxiliary data is absent
or of poor quality.
VII. Discussion
In Secs. V and VI, it has been shown that the proposed
algorithm can indeed enhance the structure of the point
sampled curve. Figure 4 indicates that involving edge
informationyieldabetterresult,wherethereconstructed
path follows the edge better compared to when pure
polynomial smoothing of the path is used for reconstruc-
tion. This veriﬁes that reconstruction using structural
information from the auxiliary data may increase the
performance of the algorithm, provided that the surface
cloud used has low noise content. However, if the surface
used is of low quality, the reconstruction is likely to be
better using only information in the path.
For a comparison between cases where varying quality
of both path and surface is used, refer to Fig. 6. The
ﬁgure indicates that the parameter ? can be used to
balance the amount of information used from the dif-
ferent data sources. If the surface data contain less noise
than the path, a value of ? close to 0 yields a better
reconstruction. If the path data, however, are of higher
quality, a value of ? closer to 1 is more likely to yield
a good result. A value of ?≈ 0.5 can be used if both
the surface and the path are noisy. The noise in the
two data sets are then more likely to average out and
yield a better estimate. All data sets were constructed
from a second-order polynomial with added colored noise
4415
(a) High-quality surface and noisy path (b) Noisy surface and high-quality path (c) Both surface and path are of low quality
Fig. 6. Results using di?erent levels of ? are shown for varying quality of path and surface.
to produce sets of varying quality. The results indicate
that the tunable parameter? can be used to balance the
relative conﬁdence in quality between the two data sets.
The simulated results shown earlier indicate that the
performance of the algorithm will improve with better
quality surface data. Still, Fig. 7 shows that the data
from a very low-end scanner can be used for correction
of errors in the user indicated path. This result indicates
that low-cost equipment such as the Kinect is indeed
useful for reconstruction for manufacturing purposes. An
application where the curve under consideration have
errors of greater magnitude than the ones presented here,
may thus beneﬁt greatly from structural enhancement
using such low cost equipment.
The errors typically introduced by the user in an
unprocessed path, in particular the high maximum error,
make the indicated path unsuitable as trajectory for
an industrial robot in the considered application. After
reconstruction, a path can typically be indicated and ex-
ecuted with a maximum error of 1mm, making it suitable
for ﬁnishing tasks such as polishing and deburring using
force control [23].
VIII. CONCLUSIONS
An algorithm has been proposed which can signiﬁ-
cantly improve the structure of a point sampled curve in
three dimensions, making it more suitable as trajectory
for execution on an industrial robot. This is achieved
using a novel approach, where structural similarities in
a related point cloud surface is exploited. The alignment
between the surface and the curve may be assumed to
be imperfect and the amount of reconstruction desired
is tunable. The e?ectiveness of the algorithm has been
veriﬁed in both simulations, using a synthetic ground
truth path and in experiments, using data from a real
3D scanner and optical tracking system.
References
[1] K. Hartmann, R. Krishnan, R. Merz, G. Neplotnik, F. B.
Prinz, L. Schultz, M. Terk, and L. E. Weiss, “Robot-assisted
shape deposition manufacturing,” inProc.IEEEInt.Conf.on
RoboticsandAutomation(ICRA94), San Diego, CA, 05 1994,
pp. 2890–2895.
[2] J. Wang, H. Zhang, and T. Fuhlbrigge, “Improving machining
accuracy with robot deformation compensation,” in Proc.
IEEE/RSJ Int. Conf. on Intelligent Robots and Systems
(IROS 2009), St. Louis, MO, 10 2009, pp. 3826–3831.
[3] D. Todd, Fundamentals of robot technology: an introduction
to industrial robots, teleoperators and robot vehicles. Kogan
Page, 1986.
[4] GOM. [Online]. Available: www.gom.com/
metrology-systems/3d-scanner.html
[5] Leica. [Online]. Available: http://hds.leica-geosystems.com/
en/Leica-ScanStation-C10_79411.htm
[6] D. W. Eggert, A. W. Fitzgibbon, and R. B. Fisher, “Simul-
taneous registration of multiple range views for use in reverse
engineering of {CAD} models,” Computer Vision and Image
Understanding, vol. 69, no. 3, pp. 253 – 272, 1998.
[7] R. Fabbri and B. Kimia, “3D curve sketch: Flexible curve-
based stereo reconstruction and calibration,” in Proc. IEEE
Conf. on Computer Vision and Pattern Recognition (CVPR
2010). San Francisco, CA: IEEE, 06 2010, pp. 1538–1545.
[8] F. Han and S.-C. Zhu, “Bayesian reconstruction of 3D shapes
and scenes from a single image,” in IEEE Int. Workshop on
Higher-LevelKnowledgein3DModelingandMotionAnalysis,
vol. 0, Los Alamitos, CA, USA, 2003, p. 12.
[9] H. Hoppe, T. DeRose, T. Duchamp, M. Halstead, H. Jin,
J. McDonald, J. Schweitzer, and W. Stuetzle, “Piecewise
smooth surface reconstruction,” in Proc. Conf. on Computer
Graphics and Interactive Techniques, ser. SIGGRAPH ’94.
New York, NY, USA: ACM, 1994, pp. 295–302.
[10] S. M. Seitz, B. Curless, S. Agarwal, and C. Wu, “Schematic
surfacereconstruction,”vol.0. LosAlamitos,CA,USA:IEEE
Computer Society, 2012, pp. 1498–1505.
[11] I.-K. Lee, “Curve reconstruction from unorganized points,”
Computer Aided Geometric Design, vol. 17, no. 2, pp. 161 –
177, 2000.
[12] I.-K. Lee, J. Wallner, and H. Pottmann, “Scattered data
approximation with kinematic surfaces,” SAMPTA, vol. 99,
pp. 72–77, 1999.
[13] A. Savitzky and M. J. Golay, “Smoothing and di?erentiation
of data by simpliﬁed least squares procedures.” Analytical
chemistry, vol. 36, no. 8, pp. 1627–1639, 1964.
[14] O. Ruiz, C. Vanegas, and C. Cadavid, “Principal component
and Voronoi skeleton alternatives for curve reconstruction
from noisy point sets,”JournalofEngineeringDesign, vol. 18,
no. 5, pp. 437–457, 2007.
[15] G.A.Einicke,Smoothing,FilteringandPrediction-Estimating
the past, present and future. InTech, 2012.
[16] K. Pearson, “Liii. on lines and planes of closest ﬁt to systems
of points in space,” Philosophical Magazine Series 6, vol. 2,
no. 11, pp. 559–572, 1901.
[17] L. E. Kavraki, 2013. [Online]. Available: http://cnx.org
[18] P. J. Besl and N. D. McKay, “Method for registration of 3D
shapes,” IEEE Transactions on pattern analysis and machine
intelligence, vol. 14, no. 2, pp. 239–256, 1992.
[19] R. B. Rusu and S. Cousins, “3D is here: Point cloud library
(pcl),” in Proc. IEEE Int. Conf. on Robotics and Automation
(ICRA 2011), Shanghai, 05 2011, pp. 1–4.
[20] Microsoft. [Online]. Available: www.xbox.com/kinect
[21] K. Khoshelham, “Accuracy analysis of kinect depth data,” in
ISPRSworkshoplaserscanning,vol.38,Calgary,082011,p.1.
[22] NaturalPoint. [Online]. Available: www.naturalpoint.com/
optitrack/products/ﬂex-13/
[23] C. W. Lim and P. Y. Tao, “Enhancing robotic applications
in the industry through force control,” Singapore Institute of
Manufacturing Technology, Tech. Rep., 2010.
4416
