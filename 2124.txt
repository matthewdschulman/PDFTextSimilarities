Online Human Walking Imitation in Task and Joint Space based on
Quadratic Programming
Kai Hu, Christian Ott and Dongheui Lee
Abstract— This paper presents an online methodology for
imitating human walking motion of a humanoid robot in task
and joint space simultaneously. Two aspects are essential for
a successful walking imitation: stable footprints represented
in task space and motion similarity represented in joint space.
The human footprints are recognized from the captured motion
data and imitated by the robot through conventional zero-
moment point (ZMP) control scheme. Additionally we focus
on similar knee joint trajectories for the motion similarity,
which are related to knee stretching and swing leg motion.
The inverse kinematics suffers from three problems: knee
singularity, strongly conﬂicting tasks and underactuation. We
formulate this problem as a quadratic programming (QP) with
dynamic equality and inequality constraints. The discontinuity
of dynamic task switching is solved by introducing an activation
buffer, resulting in a cascaded QP form. Finally we evaluate the
effectiveness of the proposed approach on the DLR humanoid
robot TORO.
I. INTRODUCTION
The goal of humanoid research is to develop humanoid
robots that can work as human in our daily life. Therefore
humanoid robots are expected to behave like human, which
could achieve expressive and meaningful motions, enhance
its acceptance in the human environment and therefore
improve the human robot interaction. However the meaning
of human-like motion is related to the motion kinematics,
dynamics as well as subjective feelings in different scenarios
and it is difﬁcult to formulate a general deﬁnition.
Recently methods based on human motion capturing to
generate feasible human-like motions for humanoid robots
have drawn great attention in robotics community. In the
context of motion imitation, target systems usually have sim-
ilar kinematic structures as human and it is straightforward
to deﬁne human-like motion as having similar joint or task
space conﬁgurations. The quality of the imitation depends
greatly on the selection of appropriate corresponding targets.
This paradigm has been proven to be efﬁcient and effective
by many research works [1], [2], [3], [4], [5], [6]. The motion
similarity of upper-body part has been well demonstrated
by both task and joint space mapping in kinematic level.
However lower-body motions are either omitted or limited
to slow stepping without consideration of motion similarity.
In this work we focus on online generating human-like
walking motions from captured human motion data for a
Kai Hu and Dongheui Lee are with the Department of Electrical
Engineering and Information Technology, Technical University of Munich,
D-80290 Munich, Germany. kai.hu@tum.de, dhlee@tum.de
Christian Ott is with the Institute of Robotics and Mechanics,
German Aerospace Center (DLR), D-82234 Weißling, Germany.
christian.ott@dlr.de
Captured Human Walking Motion Walking Imitation of  TORO
Fig. 1. Humanoid robot TORO imitates the human walking motion with
foot prints imitation and knee joint tracking. Note that only lower body is
controlled for imitation.
humanoid robot. The walking imitation is considered with
two aspects: footprint imitation in task space and motion
similarity in joint space. The human footprints are recognized
from the captured motion data and imitated through conven-
tional ZMP control scheme, which results in a non human-
like walking behavior with similar footprints as human.
The motion similarity is considered to have similar joint
trajectories which results in similar leg motions. Finally
the walking imitation problem is formulated by a set of
task and joint space tracking targets with different priorities.
Since the task and joint space targets are usually conﬂict-
ing strongly with each other, we introduce dynamic target
activation during different walking phases. Because of the
limitation of the robot’s degrees of freedom (DOFs) and
the kinematic difference of the feet, we focus particularly
on achieving similar knee joint trajectories, which results in
knee stretched walking and human-like swing leg motions.
We formulate our walking control problem as a quadratic
programming in order to avoid the knee singularity explicitly
by inequality constraints. Dynamic constraint is introduced
to resolve conﬂicting tasks during different walking phases.
A continuous control law is achieved by adding an activation
buffer during constraint switching.
The rest of the paper is organized as follows. Related
works are discussed and compared in Section II. In Section
III procedures of walking motion recognition from human
motion data and pattern generation based on ZMP preview
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 3458
control are brieﬂy introduced. We propose the walking imi-
tation controller with knee joint mapping in Section IV. The
experiment results on the DLR humanoid robot TORO are
shown in Section V. Fig. 1 shows a preview of the walking
imitation by TORO.
II. RELATED WORKS
Without considering the motion similarity, feasible walk-
ing motion was generated from human motion data by
designing the ZMP trajectory based on a rolling foot model
[7]. Online footprint imitation was realized on the MAHRU-
R robot by feeding the recognized and adapted human step
parameters into a classical ZMP based walking controller
[8]. Instead of applying human motion data directly, some
researchers have worked on human-like biped gait synthesis
based on certain human walking characteristics. Harada et al.
[9] extracted many human walking features in a parametric
form from multiple human motion data and applied them
to a ZMP-based pattern generator. Their major contribution
is the reduction of the waist sway. Vertical waist motions
are designed to achieve knee stretched walking behaviors
in [10], [11], [12]. They focused on stretching the knee
as much as possible within the singularity safe margin by
lifting the waist. Compared with these methods, our approach
avoids knee singularity explicitly and therefore can achieve
more stretched knee conﬁguration (5 degrees in this imple-
mentation). Moreover our algorithm can be solved online
for different robots and different foot step motions while
the above works rely on ofﬂine optimization and careful
trajectory design based on the robot’s speciﬁc leg geometry.
Some research works also considered heel-down and toe-off
motions during walking [12], [13]. Because most state of
the art humanoid robots still have rigid ﬂat feet without toe
joints, we consider this part as future work when robot foot
design becomes more biomimic.
Ogura et al. proposed an approach to realize the knee
stretched walking with predeﬁned knee trajectories by uti-
lizing additional waist joints [13]. Their method requires re-
dundant leg systems which restrict the application to general
biped platforms. Our approach deals with the underactuation
problem by introducing dynamic target switching in different
walking phases instead of demanding more DoFs of the
system. Fig. 2 shows an overview of the proposed walking
imitation framework.
III. WALKING MOTION RECOGNITION AND PATTERN
GENERATION
There are several techniques available for the human mo-
tion capturing which is precise enough to do lower-body mo-
tion imitation, such as marker based optical motion sensor,
inertial measurement unit and exoskeleton system. Cartesian
data of different body segments are usually provided directly.
Joint space trajectories can be easily calculated based on
a simpliﬁed human skeleton model. We use both Cartesian
and joint space data as the reference input of our imitation
algorithm.
Motion
Capture
   Stance 
Estimation
Human Joint 
Computation
Joint Data
Adaptation
Footprint 
Extraction
ZMP & COM 
Pattern 
Generation
Balance
Control
State-dependent
Foot Position Control
Human Reference Trajectories
Closed Loop Inverse Kinematics
based on Quadratic Programming
Joint 
Command
Position
Controlled
Robot
ZMP COM
Feedback
Fig. 2. Overview of the walking imitation framework with task and joint
space mapping.
-
PF
q
in
˙ q
in
k
e
˙ q
re
d/dt
R q
out
Fig. 3. Human joint trajectory adaptation using repulsive potential ﬁeld
and velocity saturation.
A. Human Joint Angle Adaptation
Before we use the human joint data for the joint space
mapping, it is reasonable to check if they are consistent
with the robot hardware limits. Additionally the minimal
angle of the knee is set to be ﬁve degrees, which is selected
as the limit value for singularity avoidance. The adaptation
procedure is formulated as a joint tracking system (Fig. 3).
We utilize the concept of potential ﬁelds to avoidance the
joint limit. The repulsive joint velocity ˙ q
re
is generated as
an exponential function when the joint is approaching the
limit:
˙ q
re
=
?
?
?
?
?
k
1
e
k2
q?q
min
for q≤ q
min
+ q
0
0 for q
min
+ q
0
< q< q
max
? q
0
?k
1
e
k2
q max?q
for q≥ q
max
? q
0
(1)
where q
min
and q
max
are lower and upper bounds of the
joint position, q
0
is a positive start distance from where the
potential ﬁeld acts and k
1
and k
2
are positive parameters. The
velocity limits are treated by simple saturation. The velocity
discontinuity as the joint reaches the joint limit is treated by
a position dependent velocity constraint in Section IV. In this
study the adaptation procedure reduces the leg swing motion
if human swings his leg too fast and ensures the minimal
singularity robust knee angles in the reference trajectories.
B. Footprint Recognition
Based on the observation that the supporting foot velocity
should stay within a predeﬁned threshold value for a certain
3459
Begin
LS
RS
DSL DSR End
? C
r
? C
l
C
l
? C
r
C
r
? C
l
C
end
C
end
Fig. 4. Finite state machine for stance estimation. LS and RS are left
and right single support states. DSL and DSR are separated double support
states. C
r
and C
l
correspond to the support condition of the right and left
leg respectively and ? represents the logic operation NOT.
time [8], we can judge the support state of each foot from
foot velocities. Position data usually suffer from sensor drift
and therefore are not suitable for the stance estimation. In
order to prevent wrong estimation because of sensor noise
we construct a ﬁnite state machine and design state transition
conditions (Fig. 4).
We control the humanoid robot as a marionette by feeding
the corresponding human joint angles into the robot forward
kinematics model. In this way the task space targets are not
related to the size of the robot. The next supporting foot
position is then determined by extracting the relative feet
position at the time of stance changes and adding it to the
current supporting foot position. The walking turning angle
can be extracted from human toe data directly. The foot
swing trajectories are constructed by interpolation between
via points which are taken time-uniformly from the foot
trajectory of the joint mapping.
C. Pattern Generation
1) Reference ZMP Trajectory Planning: Without special
equipment such as force plate it is hard to measure human’s
ZMP data online. Moreover mapping human’s ZMP to the
robot is difﬁcult because there is a big gap of the dynam-
ics properties between the two subjects. In this study we
design the robot reference ZMP trajectory according to the
footprints as follows:
• Single Support: The ZMP moves along the main axis of
the supporting foot forward with a predeﬁned velocity.
The maximal ZMP displacement is bounded by the foot
size. There is no displacement of the ZMP along the
orthogonal direction of the main axis.
• Double Support: The ZMP jumps to the middle of the
new supporting foot position at the beginning of the
double support phase.
2) Reference COM Trajectory Generation: For walking
pattern generation, simpliﬁed robot model is usually utilized
to avoid complex multi-body dynamics computation. In this
study the linear inverted pendulum model (LIPM) is taken
as the simpliﬁed dynamics model of the humanoid robot
p=c?
c
z
g
¨ c (2)
in which p =

p
x
p
y

T
1
is the ZMP position vector,
c=

c
x
c
y

T
the COM position vector, c
z
the constant COM
height and g the gravity constant. Despite its simplicity, the
effectiveness of this model has been proven by many appli-
cations. We used the preview control scheme proposed by
Kajita et al. [14] to compute the reference COM trajectory.
IV. WALKING IMITATION CONTROL
Compared with conventional walking controller, we have
additional tasks of joint space tracking for the motion simi-
larity, which make the biped system underactuated. Moreover
targets in task space and joint space usually conﬂicting
strongly with each other, which means the tasks cannot
be resolved together. Instead of requiring additional system
DoFs, the concept of dynamic tasks is introduced to solve
the problems. During different walking phases different tasks
are activated or deactivated, which achieves a compromise
between the dynamic stability and human motion similarity.
We choose to formulate our walking control as a QP problem
which gives us the beneﬁt that we can consider inequality
constraint explicitly. This gives us a good solution of the
knee stretching singularity problem.
A. General Formulation of Redundant Inverse Kinematics
Conventional solution of redundant inverse kinematics is
based on the pseudo-inverse of the Jacobian matrix. Lower
priority tasks are projected into the null space of the higher
priority tasks [15]. More generally it can be formulated as
a constrained quadratic programming problem with equality
and inequality constraints:
argmin
˙ q
f( ˙ q)=
1
2
˙ q
T
H ˙ q+C ˙ q
subject to J ˙ q= ˙ x (3)
A ˙ q≤b
where H ?R
n?n
is a positive deﬁnite cost matrix and
C ?R
n
a linear cost vector. The high priority tasks can be
regarded as equality constraints with J and ˙ x while lower
priority tasks can be considered in the cost function. One of
the advantages of the QP form of inverse kinematics is that it
allows inequality constraints explicitly, which are represented
by A and b. Researchers also proposed methods to assign
priorities to inequality tasks [16].
B. Walking Imitation Control in QP form
We formulate the walking imitation control of the biped
system as following QP problem:
1
Throughout this paper, x denotes the forward walking direction, z is
vertical direction (opposite to the gravity) and y is orthogonal to x and z.
3460
argmin
˙ q
f( ˙ q)= w
1
f
1
+ w
2
f
2
+ w
3
f
3
f
1
=


˙ x
body,ori
? J
body,ori
˙ q


2
f
2
=


˙ q
knee
? ˙ q
knee,human


2
f
3
=


˙ x
leg,xz
? J
leg,xz
˙ q


2
subject to J
com,xy
˙ q= ˙ x
com,xy
(4)
J
leg,y,ori
˙ q= ˙ x
leg,y,ori
(dynamic) J
leg,xz
˙ q= ˙ x
leg,xz
A
knee
˙ q≤b
knee
A
com,z
˙ q≤b
com,z
˙ q
min
≤ ˙ q≤ ˙ q
max
The quadratic cost function consists of three terms: f
1
is the
body orientation error; f
2
is the knee joint tracking term;
f
3
represents the foot position error in x and z directions,
which has conﬂict with the knee tracking targets. And
{w
i
|i= 1,2,3} are weighting factors of each term respec-
tively. They are selected according to the task importance (in
our implementation w
1
> w
2
> w
3
). The equality constraints
correspond to the highest priority task which should be
solved exactly. The foot positions in x and z directions are
treated as dynamic targets by activating and deactivating
the corresponding equality constraints in different walking
phases. The inequality constraints contain the robot joint
velocity bounds, the knee joint constraint and the COM
vertical motion constraint which will be explained later. All
the reference velocities are obtained through human motion
processing in Section III except for ˙ x
com,xy
, which is obtained
through the feedback balance controller discussed later. In
this study we keep the foot orientation always parallel to
the ground during the swinging phase to avoid premature
collisions between feet and ground. In each control time
step, this QP problem is solved to obtain the desired joint
velocities.
C. Knee Joint Constraint
Human stretches the knee joints fully during the walk-
ing. However in the neighborhood of robot’s knee joint
singularity, very large joint velocity is needed to achieve
small Cartesian velocity, which will make the QP problem
unsolvable because of the robot joint velocity limits. The
knee singularity is avoided by setting a minimal angle of the
knee joint. In the experiment we found q
s
= 5
?
is an enough
margin which makes the QP always solvable. We formulate
this position limit in velocity level and combine it with the
joint velocity limit
max

˙ q
min,knee
,
q
s
? q
knee
Dt

≤ ˙ q
knee
. (5)
The knee minimal position introduces unilateral constraints
which results in joint velocity jumps when the knee joint
reaches the limit. We solve this problem by changing the
knee joint velocity constraints to a position dependent ve-
locity constraint:
q
2(q
knee
? q
s
) ¨ q
knee,max
≤ ˙ q
knee
(6)
in which q
knee
is the current knee joint position and ¨ q
knee,max
is the maximal amplitude of the knee joint acceleration. With
this constraint the joint velocity is always able to be reduced
to zero from the current joint position with maximal joint
acceleration. We can combine the knee joint constraints with
the joint velocity lower bound to form one constraint:
max

˙ q
min,knee
,(q
s
? q
knee
)/Dt,
q
2(q
knee
? q
s
) ¨ q
knee,max

≤ ˙ q
knee
(7)
D. Vertical COM Acceleration Constraint
The COM height motion is not controlled directly in our
framework. The vertical COM motion could be generated
by the supporting leg knee trajectory indirectly. Since our
pattern generator is based on the LIPM, it is necessary
to examine the ZMP error caused by the vertical COM
motion. Without consideration of angular momentum the
ZMP equation can be written as
p
?
=c?
z
¨ z+ g
¨ c (8)
where z is the changing COM height. The ZMP error
introduced by the COM height motion in x direction can
be calculated by subtracting (8) from (2)
e
px
= p
x
? p
?
x
=
c
z
¨ z+ g(c
z
? z)
g(¨ z+ g)
¨ x . (9)
It has been shown in [11] that the ZMP error is mainly
determined by ¨ z. We want to limit our ZMP error to be
small


e
px


≈




c
z
¨ z
g(¨ z+ g)
¨ x




≤ e
pxm
(10)
in which the e
pxm
is the maximal magnitude of the ZMP
error in x direction introduced by vertical COM motions.
The value of e
pxm
is determined by the maximal allowed
deviation from the desired ZMP position to the foot edges,
e.g. half of the foot length. After rearrangement we can get
the limit of the COM height acceleration
?
e
pxm
g
2
c
z
| ¨ x|+ e
pxm
g
≤ ¨ z≤
e
pxm
g
2
c
z
| ¨ x|? e
pxm
g
. (11)
If we assume the maximal horizontal COM acceleration ¨ x
m
are known, which depends on the walking speed, we can
replace| ¨ x| with ¨ x
m
and get the strict limit of the COM height
acceleration. The same calculation can be done also in y
direction.
In order to include the acceleration constraints into the QP
formulation, ¨ z at time t may be approximated as:
¨ z(t)≈
1
Dt
(˙ z(t)? ˙ z(t? Dt)) (12)
3461
By using (12) we can write the COM height acceleration
constraint in velocity level:
¨ z
min
Dt+ ˙ z(t? Dt)≤ ˙ z(t)≤ ¨ z
max
Dt+ ˙ z(t? Dt) (13)
in which ¨ z
min
and ¨ z
max
are the COM height acceleration limits
obtained from (11).
E. Dynamic Targets for State-dependent Foot Control
The reason of separating the foot position control in x,z
directions from y direction is due to the conﬂict between knee
joint angle and foot Cartesian trajectories. The knee joint
approximately determines the leg length and therefore the
feet relative height. Also the x direction movement is closely
related with the knee joint. We want to achieve stable foot
contact while following the human knee joint trajectory as
close as possible. A state-dependent foot position controller
based on dynamic target switching is designed to achieve the
goal.
1) Single Support: The single support phase is separated
time-equally into two periods: swing phase and landing
phase. In swing phase the foot height trajectory is determined
by the knee trajectory of the human swing leg, aiming at
achieving human-like swing motion. Therefore the dynamic
targets of foot x and z direction are deactivated and the knee
tracking target has good performance. At the beginning of the
landing phase landing foot trajectory is generated from the
current foot position and velocity through monotone cubic
interpolation.The dynamic targets of foot x and z direction
are activated in order to achieve a stable foot landing.
2) Double Support: The foot height has to be strictly
regulated to achieve a stable foot contact in the beginning
of double support. This is important for the transition of the
robot ZMP. In this case we need to keep the dynamic targets
activated and make the feet stay on the ground for maximal
stability. Since both knee joints are almost stretched at the
beginning of the double support, human moves his COM
forward and maintains the double support by heel up motion
and toe support. However the robot has ﬂat feet and must
have full contact between foot and ground, which leads to
knee bending motion. This can be reduced by shortening the
double support period.
3) Smooth Transition of Dynamic Targets: The activation
and deactivation of the dynamic targets brings impacts into
the system, which results in joint velocity jumps. The dis-
continuity of the joint velocities can be solved by introducing
an activation buffer which smoothly activates or deactivates
the dynamic targets. Instead of directly inserting or removing
the corresponding equality constraints, we put the following
constraint into the QP:
J
f eet,xz
˙ q= h ˙ x
xz
+(1? h)J
f eet,xz
˙ q
static
(14)
in which h is activation parameter changes smoothly from 0
to 1 during task activation and 1 to 0 during task deactivation.
Any smooth function can be used for designing the activation
parameter, e.g. sinus function in our implementation. ˙ q
static
represents the QP solution with only static constraints. This
treatment requires to solve an additional QP only with the
static constraints during the switching.
F . Online Balance Control
The COM-ZMP feedback controller proposed by Choi et
al. [17] is adopted as the online feedback balance controller,
which should work against many existing disturbances in the
real robot system. It has the following control law:
u= ˙ c
d
?K
p
e
p
+K
c
e
c
e
p
=p
d
?p
r
e
c
=c
d
?c
r
(15)
whereu denotes the control input for the COM velocity, ˙ c
d
is the reference COM velocity vector, e
p
and e
c
are ZMP
and CoM error vector respectively. p
d
and c
d
are desired
ZMP and COM positions. p
r
and c
r
are the real ZMP and
COM positions calculated from the force torque sensors and
joint encoders. The error gain matrices K
p
and K
c
should
obey the stability condition given in [17].
V. EXPERIMENT RESULTS
The proposed walking imitation approach is evaluated on
the DLR humanoid robot TORO in the joint position control
mode. The robot is about 1.6 meters high from foot to
shoulder and the body weight is about 75kg. It has total
25 DoFs, including each leg 6 DoFs, each arm 6 DoFs and
torso 1 DoF. In the experiment we only control the 12 DoFs
of the legs and other joints are ﬁxed as constant values. The
robot has a rather compact foot size (95mm wide and 190mm
long), which makes the balance control very challenging. In
each foot a force/torque sensor is equipped to measure the
ground reaction force for the calculation of the ZMP.
The human motion data is captured by Xsens MVN motion
capture suit which is based on inertial sensors and has the
ability to stream the motion data in real-time. A straight
forward walking motion consisting of 8 steps performed by
a young male person of 1.8 meters high is used for evaluating
the effectiveness of the proposed approach (Fig. 5 (a)). The
algorithm is not restricted only for straight walking imitation.
The walking frequency is around 0.8sec/step and the human
step length is around 35cm.
Our whole procedure runs online with a time delay of
preview length 1.6s. We use an open source QP solver called
qpOASES [18] for online calculation. We have conducted
the experiment both in dynamics simulation (OpenHRP [19])
and on real robot platform. For real robot the cascaded QP
form runs at 1000 Hz on the robot’s one board real time
linux system equipped with a recent intel i7 CPU. Due to
the relative low joint velocity limit of the robot, the mapped
step length can currently achieve 20cm on the robot with the
same step frequency as human (Fig. 5 (c)). When we release
the joint velocity constraints to larger values in the dynamic
simulation, the simulation results show that the robot can
also imitate the walking with a large step length as human
(Fig. 5 (b)).
A. Motion Similarity
In this study the motion similarity is mainly evaluated
by comparing the difference between human and robot
knee angles. Two experiments (conventional and proposed
3462
Fig. 5. Snapshots of the simulation results: (a) recorded human walking
motion; (b) TORO robot imitates the human walking with larger step length
(around 35cm) in simulation; (c) TORO robot imitates the human walking
with smaller step length (around 20cm).
methods) are compared to show the effectiveness of the
proposed approach (Fig. 6). The blue line shows the human
reference knee trajectory. The green line shows the knee joint
trajectory of controlling the robot to follow the recognized
walking pattern using conventional ZMP-based controller, in
which the COM height is ﬁxed to be 0.92m (highest value
for singularity-free walking) with ﬁxed body orientation. The
red lines show the results of proposed approach. In order
to compare the differences between the human reference
and robot trajectory, we calculate the mean and standard
deviation of the absolute error of both knee trajectories
together:
m =
1
T
Z
2
å
i=1
|e
i
|dt (16)
s =
1
T
Z
(m?
2
å
i=1
|e
i
|)
2
dt (17)
TABLE I
ABSOLUTE ERROR MEAN AND STANDARD DEVIATION OF DIFFERENT
WALKING STYLES COMPARED WITH HUMAN REGARDING KNEE JOINTS.
walking style m s
walking imitation 0.2154 0.0067
conventional walking 1.1603 0.1971
The results in TABLE I show clear advance of the pro-
posed method over the conventional method about the motion
similarity measured by the knee joint angles. Since the target
robot system has only ﬂat feet, it is not capable of imitating
all the contact states of the human. Bent knees are required to
achieve long double support phase. This result also suggests
0 1 2 3 4 5 6 7 8 9 10
0
20
40
60
80
100
Time [s]
Right Knee Joint Angle
0 1 2 3 4 5 6 7 8 9 10
0
20
40
60
80
100
Time [s]
Left Knee Joint Angle
 
 
human
robot conv
robot imitaiton
[°] [°]
Fig. 6. Comparison of knee joint trajectories of different walking control
strategies.
0 1 2 3 4 5 6 7 8 9 10
?0.2
?0.15
?0.1
?0.05
0
0.05
0.1
0.15
Time [s]
Foot Landing Height [m]
 
 
z landing planning
foot relative z
stance
0 1 2 3 4 5 6 7 8 9 10
0
0.2
0.4
0.6
0.8
1
Time [s]
Activation Bu"er
 
 
Activation Bu"er
stance
Fig. 7. State-dependent foot control: Upper-graph: The blue line shows
the planned foot landing trajectory and the green line shows the real foot
landing trajectory. The foot relative height is always calculated with respect
to the left foot. Lower-graph: The blue line shows the activation parameter
h. The transition is designed to be sinus form.
that a more human-like foot structure, such as with toe joints,
can help to realize human-like walking on a humanoid robot.
B. State-dependent Foot Control
We design the activation parameter change smoothly fol-
lowing a sinus form. Fig. 7 shows the results of the state-
dependent foot control. In the ﬁrst half of the swinging phase,
the robot tries to follow the knee trajectory without the foot
position constraints in x and z directions. In the middle of
the swing phase, a landing trajectory is planned and the foot
position control constraint is added smoothly into the QP.
C. Motion Stability
There are two factors that inﬂuence the stability of the
motion: the vertical COM motion and the upper body angular
momentum. It has been shown in [9] that the effect of angular
momentum on the ZMP deviation is much severer than the
waist vertical motion. Therefore we set the weighting factor
for body orientation higher than the knee tracking (w
1
=
500,w
2
= 50). The generated vertical COM motion has a
magnitude of round 1.5cm and upper body orientation errors
are within 2 degrees (Fig. 8). The real ZMP data shows that
the robot can still maintain the motion stability quite well
3463
0 1 2 3 4 5 6 7 8 9 10
0.955
0.96
0.965
0.97
0.975
0.98
0.985
Time [s]
Vertical COM Motion [m]
0 1 2 3 4 5 6 7 8 9 10
?2
?1
0
1
2
Time [s]
Toros Orienation [°]
 
 
roll
pitch
yaw
Fig. 8. Vertical COM motion and upper body orientations.
0 1 2 3 4 5 6 7 8 9
?0.2
0
0.2
0.4
0.6
0.8
1
1.2
1.4
1.6
Time [s]
ZMP [m]
 
 
ZMP x
ZMP y
desired ZMP x
desired ZMP y
Fig. 9. ZMP data of walking imitation experiment on the real robot.
(Fig. 9). Moreover from the body orientation we can clearly
observe that the robot utilizes the body roll to achieve vertical
foot movements when necessary.
VI. CONCLUSIONS
In this paper we propose a novel approach for online
human walking imitation in task and joint space based on
quadratic programming. Besides the footprints imitation, mo-
tion similarity is considered as human knee tracking for the
ﬂat foot humanoid robot. The redundant inverse kinematics
problem is formulated as a QP with dynamic equality and
inequality constraints. The knee singularity is avoided by
limiting the joint to a minimal safe value and treating it as an
inequality constraint. Experiment results show more human-
like walking motion by the proposed approach compared
with the conventional ZMP based walking control.
VII. ACKNOWLEDGMENTS
This work is supported partially by Technical University
Munich - Institute for Advanced Study, funded by the
German Excellence Initiative. The authors want to thank
Mr. Johannes Englsberger for his help on conducting the
experiment.
REFERENCES
[1] N.S. Pollard, J.K. Hodgins, M.J. Riley, and C.G. Atkeson. Adapting
human motion for the control of a humanoid robot. In IEEE
International Conference on Robotics and Automation, volume 2,
pages 1390–1397, 2002.
[2] S. Nakaoka, A. Nakazawa, K. Yokoi, H. Hirukawa, and K. Ikeuchi.
Generating whole body motions for a biped humanoid robot from
captured human dances. In IEEE International Conference on Robotics
and Automation, volume 3, pages 3905–3910, 2003.
[3] B. Dariush, M. Gienger, Bing Jian, C. Goerick, and K. Fujimura.
Whole body humanoid control from human motion descriptors. In
IEEE International Conference on Robotics and Automation, pages
2677 –2684, May 2008.
[4] C. Ott, D. Lee, and Y . Nakamura. Motion capture based human motion
recognition and imitation by direct marker control. In 8th IEEE-RAS
International Conference on Humanoid Robots, pages 399–405, 2009.
[5] K. Yamane and J. Hodgins. Control-aware mapping of human motion
data with stepping for humanoid robots. In IEEE/RSJ International
Conference on Intelligent Robots and Systems, pages 726 –733, oct.
2010.
[6] Kai Hu and Dongheui Lee. Prediction-based synchronized human
motion imitation by a humanoid robot. at-Automatisierungstechnik,
60(11):705–714, 2012.
[7] Anirvan Dasgupta and Yoshihiko Nakamura. Making feasible walking
motion of humanoid robots from human motion capture data. In IEEE
Int. Conf. on Robotics and Automation, volume 2, pages 1044–1049.
IEEE, 1999.
[8] S.K. Kim, S. Hong, and D. Kim. A walking motion imitation
framework of a humanoid robot by human walking recognition from
IMU motion data. In 9th IEEE-RAS International Conference on
Humanoid Robots, pages 343–348, 2010.
[9] Kensuke Harada, Kanako Miura, Mitsuharu Morisawa, Kenji Kaneko,
Shinichiro Nakaoka, Fumio Kanehiro, Tokuo Tsuji, and Shuuji Kajita.
Toward human-like walking pattern generator. In IEEE/RSJ Int. Conf.
on Intelligent Robots and Systems, pages 1071–1077. IEEE, 2009.
[10] Ryo Kurazume, Shuntaro Tanaka, Masahiro Yamashita, Tsutomu
Hasegawa, and Kan Yoneda. Straight legged walking of a biped robot.
In IEEE/RSJ Int. Conf. on Intelligent Robots and Systems, pages 337–
343. IEEE, 2005.
[11] Zhibin Li, Nikos G Tsagarikis, Darwin G Caldwell, and Bram Van-
derborght. Trajectory generation of straightened knee walking for
humanoid robot icub. In Int. Conference on Control Automation
Robotics & Vision, pages 2355–2360. IEEE, 2010.
[12] Kanako Miura, Mitsuharu Morisawa, Fumio Kanehiro, Shuuji Kajita,
Kenji Kaneko, and Kazuhito Yokoi. Human-like walking with toe
supporting for humanoids. In IEEE/RSJ Int. Conf. on Intelligent
Robots and Systems, pages 4428–4435. IEEE, 2011.
[13] Yu Ogura, Kazushi Shimomura, A Kondo, Akitoshi Morishima, Tatsu
Okubo, Shimpei Momoki, Hun-ok Lim, and Atsuo Takanishi. Human-
like walking with knee stretched, heel-contact and toe-off motion by
a humanoid robot. In IEEE/RSJ Int. Conf. on Intelligent Robots and
Systems, pages 3976–3981. IEEE, 2006.
[14] S. Kajita, F. Kanehiro, K. Kaneko, K. Fujiwara, K. Harada, K. Yokoi,
and H. Hirukawa. Biped walking pattern generation by using preview
control of zero-moment point. In IEEE International Conference on
Robotics and Automation, volume 2, pages 1620 – 1626 vol.2, sept.
2003.
[15] Yoshihiko Nakamura and Hideo Hanafusa. Inverse kinematic solutions
with singularity robustness for robot manipulator control. ASME,
Transactions, Journal of Dynamic Systems, Measurement, and Control,
108:163–171, 1986.
[16] Oussama Kanoun, Florent Lamiraux, and P-B Wieber. Kinematic con-
trol of redundant manipulators: Generalizing the task-priority frame-
work to inequality task. Robotics, IEEE Transactions on, 27(4):785–
792, 2011.
[17] Y . Choi, D. Kim, Y . Oh, and B.J. You. Posture/walking control for
humanoid robot based on kinematic resolution of com jacobian with
embedded motion. IEEE Transactions on Robotics, 23(6):1285–1293,
2007.
[18] H Ferreau. qpoases–an open-source implementation of the online
active set strategy for fast model predictive control. In Proceedings
of the Workshop on Nonlinear Model Based Control–Software and
Applications, Loughborough, pages 29–30, 2007.
[19] Fumio Kanehiro, Hirohisa Hirukawa, and Shuuji Kajita. Openhrp:
Open architecture humanoid robotics platform. The International
Journal of Robotics Research, 23(2):155–165, 2004.
3464
