Optimization of the Workspace of a MEMS Hexapod Nanopositioner
Using an Adaptive Genetic Algorithm
Hongliang Shi
1
, Xuechao Duan
2
and Hai-Jun Su
3
Abstract—This paper presents workspace optimization of a
MEMS ﬂexure-based hexapod nanopositioner previously built
by the National Institute of Standards and Technology (NIST).
Workspace is one of the most important quality criteria for
positioning devices. Given a lot of literature on workspace
optimizationofrigidbodyparallelrobots,thereisrelativelyless
workdoneintheircompliantcounterpartsduetothechallenges
in determining the workspace. In this paper, we present an
analytical formulation and a search algorithm to determine the
workspace of the ﬂexure based parallel mechanisms. A novel
adaptive genetic algorithm has been developed to conduct the
single and bi-objective optimization for maximum translational
and rotational workspace. These optimization results provide
a guidance for the designer to improve the device for speciﬁc
design requirements.
I. INTRODUCTION
A nanopositioner is a high precision positioning device
used in motion control with a nanometer precision. Most
nanopositioners are made of ﬂexure mechanisms [1], [2] that
are formed by multiple (often identical) ﬂexure pivots, leaf
springs or their chains that are designed to produce a deﬁned
motion upon the application of an appropriate load. These
mechanisms have the advantage of no backlash and an ultra-
highprecision.Nanopositioners[3]havebeenwidelyusedin
precisionengineering and play animportant role in emerging
nanotechnology and medicine [4].
The nanopositioner to be studied in this paper was built by
the National Institute of Standards and Technology (NIST),
shown in Figure 1. This hexapod nanopositioner has a par-
allel platform like mechanism for generating 6DOF motion
by actuating three X-Y positioning stages with six thermal
actuators [5].
Workspace is one of the most important quantitative
measurements of nanopositioners. Much work has been done
for the analysis and optimization of workspace of rigid body
parallel robots [6]. Typically workspace can be classiﬁed
into several types including constant orientation workspace
or translational workspace, rotational workspace, dextrous
*This material is based upon work supported by the National Science
Foundation under Grant No: CMMI-1144022 and CMMI-1161841. Any
opinions, ﬁndings, and conclusions or recommendations expressed in this
material are those of the author(s) and do not necessarily reﬂect the views
of the National Science Foundation.
1
Research Associate in Department of Mechanical and Aerospace
Engineering, The Ohio State University, Columbus, OH 43210, USA
shi.347@osu.edu
2
Associate professor in Institute on Mechatronics, Xidian University,
Xi’an, 710071, China xchduan@xidian.edu.cn
3
Assistant Professor in Department of Mechanical and Aerospace En-
gineering, The Ohio State University, Columbus, OH 43210, USA. Corre-
sponding author. su.298@osu.edu
workspace and so on. Shah et al. [7] applied CAD-enhanced
workspace optimization to parallel manipulators. Tao and An
[8] conducted workspace optimization for a 3-RRR parallel
mechanism. Li and Xu [9] designed a 2DOF micromanipu-
lator and optimized its workspace.
However,relativelyfewworkhasbeendoneforworkspace
study for compliant mechanisms. Badescu and Constantinos
[10] conducted a workspace optimization of a three-legged
parallel platform with joint constraints. Xu and Li [11] did
optimization of workspace and dexterity of a three-legged
compliant micromanipulator.
In this work, we will study the workspace of the MEMS
version of the hexapod nanopositioner. This workspace study
is especially important since its workspace is very much
limited by the parallel connection of three X-Y positioning
stages as well as the elastic deformation of ﬂexure joints.
Strut
The top Pla!orm XY posi"oning stage Flexure joints
Fig. 1. The NIST hexapod nanopositioner.
II. GEOMETRIC DESCRIPTION OF THE
POSITIONER
As shown in Fig. 1, the hexapod positioner studied in this
paperiscomposedofthreemainparts:threeX-Ypositioning
or actuation stages [5], six struts and one top platform. The
top platform is the load-carrying part or the end-effector of
the device. Three X-Y actuation stages, which can generate
two orthogonal motions, are symmetrically laid out on the
base plane. The moving plate of each X-Y stage supports
two struts, which are ﬁrmly attached to the plate at one end
B
i
and to the top platform at the other end A
i
both via the
wire ﬂexure joints as shown in Figure 2 (a).
The global coordinate system is placed at the home
(undeformed) position of the geometrical center of the top
platform. At the home position, the coordinates of the
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 4043
) (a ) (b
6
B
1
B
4
B
2
B
5
B
1
A
2
A
3
A
4
A
6
A
5
A
a
r
b
r
i
?
i
?
x
y
o
2
c
3
c
4
c
5
c
The top pla!orm
The bo"om stages
3
B
1
c
2
d
1
d
l
l
Fig. 2. Geometrical description of the hexapod mechanism. (a) the layout
of the top platform and the bottom stages. (b) the supporting strut.
conjunction points are given by
A
0
i
=[Z(?
i
)]
?
?
?
r
a
0
?t
?
?
?
; B
0
i
=[Z(?
i
)]
?
?
?
r
b
0
?h
?
?
?
; i=1;:::;6 (1)
where [Z(·)] is the 3 by 3 rotation matrix about the z axis,
r
A
and r
B
are the radii of the strut attachment points (bottom
plates in home position), h is the height of the hexapod
mechanism, t is the thickness of the top platform. Angles
?
i
and ?
i
are tabulated in Table I.
As shown in Fig. 2 (b), the struts have a total length c
1
and diameter d
2
, and have a short ﬂexure joint of length
l and diameter d
1
at each end (d
1
? l). The distance
between the neighboring intersecting points of the struts at
thetopplatformisc
4
.Thedistancebetweenthenon-neighbor
intersecting points of the struts at the top platform is c
5
.
For the base stages, the distance between the neighboring
intersecting points of the struts is c
2
. The distance between
the non-neighboring intersecting points of the struts at the
base is c
3
.
The workspace of the hexapod nanopositioner is de-
termined by the workspace of the X-Y actuation stages,
maximum deformation angles of the twelve wire ﬂexures
and the layout of the six struts. In this work, we deﬁne X =
(c
1
;c
2
;c
3
;c
4
;c
5
)
T
as the design variables to be optimized
while keeping all other geometric parameters constant. The
dimensions of the current design are given in Table I. Our
goal is to ﬁnd an optimal set of these design parameters for
a larger workspace of the top platform. In what follows, we
discuss each part in details.
III. WORKSPACE OF ACTUATION STAGES
The X-Y actuation stage is composed of three main
components: a thermal actuator, an ampliﬁer mechanism and
a guiding mechanism. As the thermal actuator can only
produce force in one direction by increasing temperature, the
workspace of the 2DOF X-Y positioning stage is a rectangle
with S
x
and S
y
. In order to obtain the workspace of the X-Y
TABLE I
ORIGINAL GEOMETRIC DIMENSIONS OF THE HEXAPOD MECHANISM
l=0.08 mm, d
1
=0.015 mm, d
2
=0.075 mm, t=0.432 mm
h=4.127 mm, r
a
=1.572 mm, r
b
=4.277 mm
?
1
=187:3
?
;?
2
=172:7
?
;?
3
=67:3
?
;?
4
=52:7
?
?
1
=237:3
?
;?
2
=122:7
?
;?
5
=?52:7
?
;?
6
=?67:3
?
?
3
=117:3
?
;?
4
=2:7
?
;?
5
=?2:7
?
;?
6
=?117:3
?
c
1
=5.4 mm, c
2
=0.4 mm, c
3
=7.2 mm, c
4
=0.4 mm, c
5
=2.5 mm
positioning stage, we build the FE model in Abaqus. A set
of concentrated forces is loaded on the thermal actuator and
we record the displacement of the stage center and the Von
Mises stress of the whole mechanism.
As shown in Fig. 3, when the von Mises stress reaches
the yield stress with a safety factor of 3.5, we record the
maximum displacement in x direction as S
x
= 59:69µm.
SimilarlyweobtainthevalueinydirectionasS
y
=59:94µm.
0≤?
x
≤S
x
; 0≤?
y
≤S
y
(2)
0.00 0.05 0.10 0.15 0.20 0.25
0.0
0.5
1.0
1.5
2.0
0.
10.
20.
30.
40.
50.
60.
? x
Von Mises
) ( m ?
(N) Force Applied
) (GPa
Fig. 3. The FE simulation result of the X actuation stage.
IV. WORKSPACE OF CIRCULAR WIRE FLEXURES
The wire ﬂexures of the six struts all have a circular cross
section of diameter d
1
and length of l. Since the length of
struts is much larger, i.e. c
1
? l, the load to wire ﬂexures
is dominated by bending and torsional moment. To ﬁnd the
workspace of these wire ﬂexures, we ﬁx one end and apply
an arbitrary bending moment M and torsion moment T to the
other. The range of motion of the end planes is determined
by the von Mises failure theory. See the details below.
The maximum normal and shear stresses occur on the
outer ﬁber of the cross section. They are calculated as
?
max
=
(d
1
=2)M
I
=
(d
1
=2)
I
?EI
l
=?
(
Ed
1
2l
)
(3)
?
max
=
(d
1
=2)T
J
=
(d
1
=2)
J
?GJ
l
=?
(
Gd
1
2l
)
(4)
where ? and ? are the bending and torsion angles of the
wire ﬂexures respectively. I =πd
4
1
=64 and J =πd
4
1
=32 are
the regular and polar moment of inertia of the cross section.
According to the von Mises failure theory, the wire ﬂexure
4044
will not fail when the following equation is satisﬁed
√
?
2
max
+3?
2
max
≤
?
Y
SF
; (5)
where ?
Y
is the material yield strength and SF is the safety
factor. Substituting Eq.(3) and (4) into (5) yields
?
2
+3
(
G
E
)
2
?
2
≤
(
2l
Ed
1
?
Y
SF
)
2
; (6)
All wire ﬂexures are made of tungsten material with a
Young’s modulus E =411GPa, yield strength?
Y
=550MPa,
and poisson’s ratio ? = 0:28. Submitting these material
properties, the geometrical parameters given in Table I and
a safety factor SF =1:5, we can derive the workspace of a
wire ﬂexure as
?
2
+0:46?
2
≤1:98?10
?4
rad
2
(7)
which represents an ellipse.
V. WORKSPACE OF THE HEXAPOD
A. Inverse kinematics
In the kinematic model of the positioner, the wire ﬂexures
aretreatedassphericaljointsofwhichthecentersarelocated
at the intersection points of the ﬂexures with the actuating
stages and the top platform. When the device is at the
home position, the coordinates of these joints are A
0
i
and
B
0
i
given in (1). When the positioner is deformed, their new
coordinates are denoted by A
i
and B
i
which are subject to
the following kinematic constraint equations,
(A
i
?B
i
)
T
(A
i
?B
i
)?c
2
1
=0; i=1;:::;6: (8)
0
5
A
0
6
A
0
3
A
0
4
A
0
1
A
0
2
A
0
6
B
0
1
B
0
2
B
0
3
B
0
4
B 0
5
B
0
x
0
z
0
y
z
x
i
A
i
B
] [T
Bi
?
i
u
i
?
0
i
u
'
i
B
Ai
?
0
i
u
0
i
u
Fig. 4. The kinematic model of the positioner.
SubstitutingEq.(1)anddisplacementoftheX-Yactuation
stages ?B
i
yields
([R]A
0
i
+d?B
0
i
??B
i
)
T
([R]A
0
i
+d?B
0
i
??B
i
)?c
2
1
=0;
(9)
where the 3 by 3 rotation matrix [R] and vector d give the
deformedorientationandpositionofthetopplatformrelative
to its home position. And ?B
i
are deﬁned by:
?B
1
=?B
6
=(?
1x
;?
1y
;0)
T
;
?B
2
=?B
3
=(?
2x
;?
2y
;0)
T
;
?B
4
=?B
5
=(?
3x
;?
3y
;0)
T
: (10)
Toobtainsixactuation?B
i
,wehavetosolveEq.(9)which
are mildly coupled quadratic equations. To ﬁnd the bending
angle ?
Ai
, ?
Bi
and torsion angle ?
Ai
, ?
Bi
of each individual
ﬂexure joint, we follow the derivation process of the NIST’s
MESO-scalehexapodnanopositionerpresentedin[12].First,
the bending angle ?
i
is deﬁned as the angle between the
undeﬂected limb A
0
i
B
0
i
and deﬂected limb A
i
B
i
. Second,
deﬁne two vectors u
i
, v
i
which are attached on the moving
platform and the bottom stages respectively. Third, calculate
the deﬂected vectors u
i
, v
i
and undeﬂected vectors u
0
i
, v
0
i
.
And the torsion angle ?
i
is determined by the change of the
angle formed by vectors u
i
and v
i
. See Fig. 4.
B. Kinematic constraints
For a given displacement [R;d] of the top platform, we
determine whether or not it is within workspace by check-
ing if both the actuation displacements and wire ﬂexures
are within their workspaces. More speciﬁcally, we use the
following steps.
1) Calculate the actuation of three X-Y positioning stages,
?
1x
, ?
1y
, ?
2x
, ?
2y
, ?
3x
, ?
3y
, and check if they satisfy the
constraints (2), i.e.
0≤?
1x
≤S
x
; 0≤?
1y
≤S
y
; 0≤?
2x
≤S
x
?S
y
≤?
2y
≤0; ?S
x
≤?
3x
≤0; ?S
y
≤?
3y
≤0 (11)
where the negative signs are due to the layout of the three
X-Y actuation stages.
2) Calculate the bending angle ?
Ai
, ?
Bi
and torsion angle
?
Ai
, ?
Bi
of each ﬂexure joint and check if they satisfy the
constraints (7), i.e.
?
2
Ai
+0:46?
2
Ai
≤1:98?10
?4
rad
2
; i=1;:::;6
?
2
Bi
+0:46?
2
Bi
≤1:98?10
?4
rad
2
; i=1;:::;6 (12)
Essentially,the6DOFworkspaceofthehexapodislimited
by the above eighteen constraint functions (11-12).
C. Workspace determination
We ﬁrst denote the three dimensional translational and
rotational workspace by ∆ and ? respectively. Here ∆ is
deﬁned as the volume enclosed by the boundaries of the top
platform displacement (?
x
;?
y
;?
z
) with a ﬁxed zero rotation.
Let us denote the gravity center of the workspace volume by
P
c
. And the rotational workspace ? is deﬁned as the volume
enclosed by the boundaries of three angles (?
x
;?
y
;?
z
) when
the position of the platform is ﬁxed at the gravity center P
c
.
To determine the volume of the workspace, the workspace
is ﬁrst sliced into a series of subspace by a series of equally
spaced planes parallel to XY plane. We then develop a rapid
polarsearchingalgorithm(RPSA)todetermineplanarareaof
the subspace and calculate the accumulated volume to obtain
4045
the whole workspace volume. The process for determining
∆ is detailed described as follows.
1) Start searching at the polar coordinate center towards
polar axis. Increase ? with step size ?
?
and check
whether the position meets constraint functions (11-
12). Until the point does not meet at least one of the
constraints, we denote the point as out of boundary
condition so that the previous point A
0
is denoted as
the workspace boundary point on the polar axis. And
we denote the radius and the position of A
0
as ?
0
and
A
0
(?
0
;0). See Fig.5(a).
2) Increase polar angle with a step size ?
?
with the same
polar radius, so that we obtain the test point T
1
(?
0
;?
?
).
3) Check whether any of the constraints takes effect at
the position of T
1
. If none of the constraints takes
effect, it indicates that T
1
is still within the workspace.
Therefore, we increase ?
0
with ?
?
until one of the
constraint functions is not satisﬁed. Thus, we can ﬁnd
the second boundary point A
1
(?
1
;?
?
).
4) Decrease the radius with ??, if the test point T
2
is
out of the workspace. Until the position meets all the
constraint functions, we can obtain A
2
(?
2
;2?
?
) as the
boundary point.
5) Conduct the searching so forth and ﬁnish the process
when ? =2π. The searching area is calculated as
A =
1
2
m
∑
i=1
?
2
i
?
?
: (13)
where m is deﬁned as 2π=?
?
. The steps 1-5 are deﬁned
as the process of RPSA.
6) Deﬁne the base plane at z=z
0
. Here, we choose z
0
=
20µm for ∆ and z
0
= 0 for ?. Choose n points and
deﬁne them as the candidate start points of workspace
searching. Do RPSA at the candidate points. Pick out
therobust(withmaximumsectionarea)andtherelated
candidate is denoted as the start pointC
0
. Calculate the
geometrical center of the area as P
1
7) Search the workspace upward and downward from the
base plane respectively with a step size ?
z
. Treat P
1
as
the new polar coordinate center for RPSA.
8) Continue the searching by updating the geometrical
center P
n
of the previous layer as the new polar frame
centerofthecurrentlayer.Untilthelayerareaequalsto
zero, the searching reaches the terminating condition.
The workspace volume is derived as
∆=
n
∑
i=1
A
i
?
z
: (14)
where n is the number of the layers.
Similarly we can determine the rotational workspace ?.
VI. OPTIMIZATION USING ADAPTIVE GENETIC
ALGORITHM
Genetic algorithm (GA) optimizers are stochastic opti-
mization techniques based on the concepts of natural se-
lection, which are especially effective for the combinatorial
 
1
T
? 
2
? 
?
?
 
T 1 
A 1 
T 2 
A 2 
O 
A 0 
?
?
 
1
? 
0
? 
?
?
 
X 
Y 
Z 
z
?
Base plane 
. p 0 
. 
. 
. 
. 
. 
. 
. p i
. 
. 
(a) 
(b) 
Fig. 5. Schematic of workspace slices and rapid polar searching algo-
rithm(RPSA)
optimization problems as in this research [13].
A. Real-coded scheme and ﬁtness function
Generally, there are two dominate coding schemes for
GAs: binary and real coding schemes[14]. For sake of
obtaining the shorter length of genetic code and making
the genetic operations easier, the real coding is preferred
in problems with a great number of variables [15]. The
candidate solutions of the optimization problem are encoded
into the real number genes of the chromosome directly.
Besides, in order to enhance the sensitivity of the ﬁtness
function concerning the design parameter, the workspace
function is constructed as follows
F(X)=k
0
?
i
(X);i=1;2;3: (15)
where k
0
> 1 and i indicates different type of workspace
volume.
B. Genetic operations
These following three operations are particularly designed
for the real-coded GA.
The tournament selection operator is used here in order
to avoid the premature phenomenon. In which two candidate
solutions are chosen from the population and just the one
with higher ﬁtness is copied to the new population each
time, which is repeated until the new temporary population
is formed.
Crossover is the course in which certain pairs of chromo-
somes are chosen according to the preset crossover proba-
bility from the newly-born population mentioned according
to the following arithmetical crossover operator [15], [16]
X
?
1
=?X
1
+(1??)X
2
; X
?
2
=?X
2
+(1??)X
1
(16)
where X
1
and X
2
are the two parents to be implemented the
crossover operation while X
?
1
and X
?
2
are the offspring after
crossover operation, crossover factor ? is a preset-constant
belonging to interval (0;1).
Mutation involves the modiﬁcation of the value of gene
in certain chromosomes chosen from the population. For
a given parent X, the stochastic number ? generated with
even probability in {0;1} determines the way to generate
the offspring chromosome
X
?
i
=
{
X
i
+∆(t;X
i
?X
i
);? =0
X
i
?∆(t;X
i
?X
i
);? =1
(17)
4046
where function∆(t;y)=y?(1?t=N)
k
,? is a random number
with the range of [0;1], t is the current generation, N is the
maximum generation of the genetic evolution, and k is a
preset parameter determining the degree of nonuiformity. X
i
and X
i
indicate the upper and lower boundaries of X
i
, the ith
component of X separately, where i = 1;2;:::;M. M is the
population size.
C. Adaptation of crossover and mutation probability
The crossover probability P
c
and mutation probability P
m
decides how many chromosomes will be chosen to take part
in the crossover and mutation, respectively. If P
c
and P
m
are
set a constant number either too small or too large, it will
lead to the premature of the GAs, i.e. the optimization result
will be trapped in local optima.
By extending methodology of adaptive probability of
crossover and mutation proposed by Srinivas [17], the fol-
lowing function is used to give the adaptive P
c
and P
m
,
P
c
=
1+e
?s
2
P
c0
; P
m
=
1+e
?s
2
P
m0
(18)
where s =
√
1
M
M
∑
i=1
[F(X(i))?
¯
F]
2
, and
¯
F is the average
ﬁtness of the ith generation population. P
c0
and P
m0
are
the initial value of the crossover and mutation probability
respectively.
Herein, at the initial stage, the random generated initial
population decides a large value of s of the algorithm,
and then a small crossover and mutation probability result
in relatively few chromosomes picked out to implement
crossover and mutation, which will preserve the elite chro-
mosomes farthest. In the ending generations, the ﬁtness of
the chromosomes becomes concentrated, thus decreasing the
value of s and increasing P
c
and P
m
, and more chromosomes
will participate the crossover and mutation operations. Con-
sequently, the diversity of the population is maintained from
beginning to end as the adaptive GA proceeds and the global
optima is obtained.
The elitist preserving strategy is also adopted in the algo-
rithmto guarantee nodecrease in ﬁtness from one generation
to the next. The maximum evolution generation is selected
as the termination criterion of the adaptive GAs.
VII. OPTIMIZATION RESULTS AND ANALYSIS
In this section, we apply the proposed adaptive GA to
optimize the workspace of the hexapod positioner.
A. Deﬁne the optimization problems
Design optimization parameter is donated as X =
(c
1
;c
2
;c
3
;c
4
;c
5
)
T
which are illustrated in Fig.2. The original
values, upper and lower boundaries conditions of design
parameters are shown in Table II.
The objective function for GA optimization is based on
the volume ∆ and ? obtained with our search algorithm
TABLE II
VARIABLES AND PARAMETERS OF THE OBJECTIVE FUNCTION
X c
1
(µm) c
2
(µm) c
3
(µm) c
4
(µm) c
5
(µm)
X
0
5400 400 7200 400 2500
X 7000 465 9333 600 2530
X 4000 180 5500 180 600
generation=100; M =60; ? =0:5;
P
c0
=0:8; P
m0
=0:8; k
0
=10
3
RPSA presented earlier. For the optimization of the rota-
tional workspace and translational workspace, the objective
function are deﬁned as
F
?
(X)=?; F
∆
(X)=∆=V (19)
whereV =πr
2
b
h is the packaging volume of the device. r
b
is
the radius of the circle in the base plane and h is the height
of the top platform, calculated by Eq. (9). Essentially we
would like to maximize the translational workspace per unit
packaging volume.
B. Single objective optimization
The computation parameter of the AGA is listed
in Table.II. After 100 iterations, optimal solutions
X
?
1
= (5257:85;307:50;5561:01;222:31;728:42)
T
and
X
?
2
=(6302:9;183:5;5603:6;205:4;1581:6)
T
fortranslational
and rotational workspace are obtained. With the 12 cores
parallel computation, the running time for translational
workspace optimization can be reduced form 671:40s to
44:77s on a Intel Xeon(R) CPU E7-4870 and Windows
Server 8 system.
For the single objective optimization, we start at initial
solution X
0
in Table II. The translational and rotational
workspace values for the initial and optimal solution is list in
TableIII.Thevaluesoforiginalandoptimal∆areveryclose,
and are also shown in Fig. 6 (a). However, the packaging
volume V is much smaller for the optimal solution. Thus,
F
∆
(X) is optimized 46%. Furthermore, F
?
(X) is optimized
72% and it is shown in Fig. 6 (b).
TABLE III
RESULT OF SINGLE OBJECTIVE OPTIMIZATION
Type Initial function Optimal function Improved
∆ 2:27?10
4
2:07?10
4
V 2:62?10
11
1:64?10
11
F
∆
(X) 8:65?10
?8
1:26?10
?7
46%
F
?
(X) 0.0445 0.0767 72%
C. Bi-objective optimization
For many applications, both translational and rotational
workspace are important. It makes sense that the following
weighted sum model of the bi-objective optimization is used
as the objective function,
F
∆?
(X)=?
2F
∆
(X)
F
∆
(X)+max(F
∆
)
+?
2F
?
(X)
F
?
(X)+max(F
?
)
(20)
4047
?20
?10
0
10
20
30
?20
?10
0
5
10
15
20
25
30
) ( m
x
? ?
) ( m
y
? ?
) ( m
z
? ?
?0.2
0
0.2
?0.2
0
0.2
?0.6
?0.5
?0.4
?0.3
?0.2
?0.1
0
0.1
0.2
0.3
( ) o
x
?
( ) o
y
?
( ) o
z
?
(a) 
(b) 
Fig. 6. The initial (blue) vs. the optimal (red) workspace. (a) Translational
workspace (b) Rotational workspace
where ?;? ? [0;1] and ? +? =1. max(F
∆
) and max(F
?
)
are respectively the maximum values of the translational and
rotational workspace given in Table III, which are obtained
by the single objective optimization.
850 900 950 1000 1050 1100 1150 1200 1250 1300
0.02
0.03
0.04
0.05
0.06
0.07
0.08
Relative positional workspace volume
Orientation workspace volume 
0
0.1 0.2
0.3
0.4
0.5
0.6
0.7
0.8
0.9
0.1 0.2
0.3
1
Fig. 7. Pareto front of the bi-objective optimization
The Pareto front is illustrated in Fig.7. The triangular
marks indicate the different optima obtained with different
coefﬁcients. The ﬁgures near each mark shows its involved
value of coefﬁcient ? in the weighted sum model mentioned
above. The Pareto front shows the dependence of the bi-
objective functions on the coefﬁcients, which is the measure
of the designers’ preference. Under the condition that one of
the two objectivesis preferred to maximal extent for instance
? = 0 or ? = 1, the bi-objective optimization degenerates
into a single objective optimization.
VIII. CONCLUSION
In this paper, we present a method for calculating the
workspace of the NIST’s MEMS hexapod nanopositioner,
which is based on the limits of the ﬂexure joints and the
workspace of the X-Y positioning stages. This method can
be applied to the workspace derivation of general parallel
platform mechanisms with ﬂexure joints. A rapid polar
searching algorithm has been developed to quantify the
volume of workspace. By adapting crossover and mutation
probability, a novel adaptive genetic algorithm has been
developed. As a result of the single objective optimization,
the translational and rotational workspace has been improved
by 46% and 72% respectively. Finally, we conducted a bi-
objective optimization based on the designer’s preference.
Theseresultsserveanimportantguidancefornextgeneration
design of this device. In the future work, a stiffness model
with loading and dynamic studies could be derived for
speciﬁc application of the hexapod nanopositioner. Besides,
Finite Element simulation could be did for validation of the
workspace derivation.
REFERENCES
[1] H. Soemers, Design Principles for Precision Mechanisms. Enschede:
T-Pointprint, 2010.
[2] H.-J. Su, H. Shi, and J. Yu, “A symbolic formulation for analytical
compliance analysis and synthesis of ﬂexure mechanisms,” ASME
Journal of Mechanical Design, vol. 134, no. 5, p. 051009, 2012.
[3] H.Shi,H.-J.Su,N.Dagalakis,andJ.A.Kramar,“Kinematicmodeling
and calibration of a ﬂexure based hexapod nanopositioner,” Precision
Engineering, vol. 37, no. 1, pp. 117 – 128, 2013.
[4] Q. Liang, D. Zhang, Q. Song, and Y. Ge, “Micromanipulator with
integrated force sensor based on compliant parallel mechanism,” in
2010 IEEE International Conference on Robotics and Biomimetics
(ROBIO). IEEE, Dec. 2010, pp. 709–714.
[5] Y.-S. Kim, J.-M. Yoo, S. H. Yang, Y.-M. Choi, N. G. Dagalakis, and
S. K. Gupta, “Design, fabrication and testing of a serial kinematic
MEMS XY stage for multiﬁnger manipulation,” Journal of Microme-
chanics and Microengineering, vol. 22, no. 8, p. 085029, 2012.
[6] J. Merlet, Parallel Robots, 2nd ed. Springer, Feb. 2006.
[7] H. Shah, M. Narayanan, and V. Krovi, “CAD-enhanced workspace
optimization for parallel manipulators: A case study,” in 2010 IEEE
Conference on Automation Science and Engineering (CASE), 2010,
pp. 816–821.
[8] Z. Tao and Q. An, “Interference analysis and workspace optimization
of 3-RRR spherical parallel mechanism,” Mechanism and Machine
Theory, vol. 69, pp. 62–72, Nov. 2013.
[9] Y. Li and Q. Xu, “A novel design and analysis of a 2-DOF compliant
parallel micromanipulator for nanomanipulation,” IEEE Transactions
on Automation Science and Engineering, vol. 3, no. 3, pp. 247–254,
2006.
[10] M. Badescu and C. Mavroidis, “Workspace optimization of 3-legged
UPU and UPS parallel platforms with joint constraints,” Journal of
Mechanical Design, vol. 126, no. 2, pp. 291–300, May 2004.
[11] Q. Xu and Y. Li, “Kinematic analysis and optimization of a new com-
pliant parallel micromanipulator,” International Journal of Advanced
Robotic Systems, vol. 3, no. 4, 2006.
[12] H. Shi and H.-J. Su, “An analytical model for calculating the
workspace of a ﬂexure hexapod nanopositioner,” ASME Journal of
Mechanisms and Robotics, vol. 5, no. 4, p. 041009, 2013.
[13] R. L. Haupt, “An introduction to genetic algorithms for electromag-
netics,” IEEE Antennas and Propagation Magazine, vol. 37, no. 2, pp.
7–15, 1995.
[14] C. H. Dai, Y. Zhu, and W. Chen, “Adaptive probabilities of crossover
and mutation in genetic algorithms based on cloud model,” in Pro-
ceeding of IEEE Information Theory Workshop. ITW ’06 Chengdu,
2006, pp. 710–713.
[15] H. Abbas and M. Bayoumi, “Volterra-system identiﬁcation using
adaptivereal-codedgeneticalgorithm,”IEEETransactionsonSystems,
Man and Cybernetics, Part A: Systems and Humans, vol. 36, no. 4,
pp. 671–684, 2006.
[16] R. Esmaelzadeh, “Rendezvous trajectory optimization using real ge-
neticalgorithmcombinedwithgradientmethod,” WSEAS Transactions
on Systems, vol. 5, no. 12, pp. 2875–2880, 2006.
[17] M. Srinivas and L. Patnaik, “Adaptive probabilities of crossover and
mutation in genetic algorithms,” IEEE Transactions on Systems, Man
and Cybernetics, vol. 24, no. 4, pp. 656–667, 1994.
4048
