An hp-adaptative pseudospectral method for collision avoidance with
multiple UA Vs in real-time applications
S. Vera, J. A. Cobano, G. Heredia and A. Ollero
Abstract— This paper proposes the application of an hp-
adaptive pseudospectral for trajectory generation in scenarios
with multiple aerial vehicles in order to avoid collisions. This
method computes an optimal solution numerically. The method
assigns a speed proﬁle to each aerial vehicle in real time such
that the separation between them is greater than a minimum
safety value and the total deviation from the initial trajectories
is minimized. The Estimated Time of Arrival (ETA) of each
aerial vehicle is also taken into account to solve the conﬂicts.
Its computational load and scalability depending on the main
parameters of the method are studied. Many simulations have
been performed to analyze the best parameters of the method.
Experiments have been also carried out in the multivehicle
aerial testbed of the Center for Advanced Aerospace Technolo-
gies (CATEC).
I. INTRODUCTION
Trajectory planning and collision avoidance is a critically
important aspect in real-time applications with multiple Un-
manned Aerial Vehicles (UA Vs) to successfully perform a
coordinated mission. Cooperation and coordination of many
mobile entities such as aerial vehicles are being performed in
the EC-SAFEMOBIL FP7 European Project (http://www.ec-
safemobil-project.eu/). This project is developing sufﬁciently
accurate common motion estimation and control methods
and technologies in order to reach levels of reliability and
safety to facilitate UA V deployment in a broad range of ap-
plications. The use of safe trajectory optimisation techniques
plays an important role in this project and it is addressed in
this work.
This paper addresses the problem of collision avoidance
with multiple UA Vs to ensure the safety and reliability
of the mission. The proposed method is based on speed
planning to solve collisions and to meet as much as possible
each initial trajectory. This approach has the advantage that
the probability of creating new conﬂicts with other UA Vs
is low.The proposed method computes an optimal solution
and uses an hp-adaptive pseudospectral method. This is
an analytical method which main characteristic is the low
computational load.
The direct collocation methods compute the solution
considering a ﬁxed degree polynomial state approximation
in each segment and dividing the problem into segments.
*This work was supported by the European Commission FP7 ICT
Programme under the EC-SAFEMOBIL project (288082) and the CLEAR
project (DPI2011-28937-C02-01) funded by the Ministerio de Ciencia e
Innovacion of the Spanish Government. The authors would like to thank
Mr. Jonathan Ruiz for their unselﬁsh help during the development of the
experiments in the testbed of CATEC (Seville).
S. Vera, J. A. Cobano, G. Heredia and A. Ollero are with the Robotics,
Vision and Control Group, Engineering School, University of Seville, 41092
Seville, Spain fsvera,jcobano,guiller,aollerog@us.es
Convergence of the numerical discretization is then achieved
by increasing the number of segments [1]. On the other
hand, pseudospectral methods have been also used in optimal
control problems [2]. In contrast to the direct collocation
method, a pseudospectral method uses a single segment,
and convergence is achieved by increasing the degree of
the polynomial. The collocation points are chosen based on
accurate quadrature rules and the basis functions are typically
Chebyshev or Lagrange polynomials. The more commonly
used pseudospectral methods are the Gauss pseudospectral
method (GPM) [3], the Radau pseudospectral method [4]
(RPM), and the Lobatto pseudospectral method [5] (LPM).
Limitations of the pseudospectral methods are presented in
[6]. In order to overcome these limitations, an hp-adaptive
pseudospectral method has been proposed [6]. This method
can increase the number of segments and the degree of the
polynomial within a segment to achieve an error less than
the tolerance error allowed.
The hp-adaptive pseudospectral method is a good can-
didate to apply in collision avoidance problems between
multiple UA Vs. The localisation of the segments and the
number of collocation points depend on where the conﬂicts
take place. This method is suitable because of the ﬂexibility
to increase segments and/or collocation points.
Pseudospectral and Direct Collocation methods have been
applied to compute aircraft trajectories [7] [8] [9]. However,
the selection of the numerical parameters that make the sys-
tem converge to an optimal solution has not been addressed.
Several of the parameters may have a strong inﬂuence on
the numerical convergence of the method and the real time
performance. Therefore, these parameters should be analyzed
to use the suitable ones depending on the scenario.
Most of published works related to Pseudospectral and
Direct Collocation methods consider trajectory generation
for a standalone UA V [7] [8]. Other novel aspect of this
paper is that trajectory generation for multiple UA Vs are
considered. Moreover, the solution computed is only valid
in the collocation points. That is, the minimum separation
among UA Vs is maintained in these points. Therefore, an
evaluation considering a model of UA V should be carried
out in order to ensure that the minimum separation is
not violated during the rest of the ﬂight. A study on the
separation constraint considered is done depending of the
scenario. Work presented in [9] considers three UA Vs but
error of tolerance, number of nodes or collocation points
and separation are not discussed.
The paper is organized into seven sections. Section II
presents some works done on this problem. Section III
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 4717
describes the problem formulation addressed. The proposed
method is explained in Section IV. Simulations and ex-
periments performed are showed in Section V and VI,
respectively. Finally, the conclusions are detailed in Section
VII.
II. STATE OF THE ART
UA V planning algorithms and collision avoidance methods
have been studied extensively. A detailed survey on the
former is presented in [10] and [11] reviews papers on the
latter.
Among the different methods can include non-linear pro-
gramming (NLP) [12], integer programming [13] and collo-
cation methods reducing the number of dimensions of the
problem [7] [8] [9] [14], graph search like A* [15] and
Rapidly-exploring Random Trees (RRT) [16], particle swarm
optimization [17], evolutionary computation methods [18],
ant colony optimization methods [19], among many others.
The method in [18] is based on the use of genetic
algorithms to solve conﬂicts by changing the heading. The
main drawback of genetic algorithms is that the computation
time is not predictable and the convergence to a solution is
not ensured in a ﬁnite time interval. On the other hand, a
stochastic method based on the Monte Carlo approach solves
conﬂicts in air trafﬁc control but the computation time is
high [20]. A CDR method based on a mixed-integer linear
program (MILP) optimizes the total ﬂight time by modifying
velocity or heading [13]. However, this method only allows
one speed change for each aircraft. Three different collision
detection and resolution methods based on speed planning
are presented in [21].
III. PROBLEM DESCRIPTION
The problem of collision avoidance of multiple UA Vs
to perform the coordinated missions proposed by the EC-
SAFEMOBIL project is considered in this paper. The project
considers a cooperative tracking and surveillance scenario.
This scenario considers a situation where a region is to be
observed, and multiple targets within that region tracked,
in the presence of obstacles. The scenario incorporates the
need for cooperative safe trajectory planning to perform the
coordinated missions, assuring that the aerial vehicles do not
collide with each other. The work presented is related to this
task.
The proposed conﬂict resolution method is based on
changing the speed proﬁle of the UA Vs involved in the
conﬂict. Note that changes of velocity direction are not
considered, so only the speed proﬁle is changed.
The trajectory of each UA V is given by an initial waypoint
and a ﬁnal waypoint. Each waypoint is deﬁned by: 2D
coordinates (x,y), speed from that waypoint (v), and the
Estimated Time of Arrival (ETA) to the waypoint, t. To meet
the ETA is important in many applications. It is assumed
that all UA V trajectories are known. We consider that the
UA Vs maintain the safety separation if they are separated by
a minimum distance, D.
The problem would be solved like an optimal control
problem where global criterion is the ﬂight cost. This cost
is deﬁned by the changes of velocity.
The inputs of the method are the following:
 Initial trajectory of each UA V
 Model of each UA V
 ETA of each UA V
The objective is to ﬁnd collision-free trajectories that min-
imize the probability of having a collision while minimizing
the changes of speed for each UA V . Moreover, the ETA will
be met.
Several deﬁnitions are needed to perform the study pre-
sented in Section V:
 Initial mesh: it is the initial distribution of segments.
The initial mesh in the studies will be a only segment
with twenty nodes.
 Tolerance error: it is the allowed error in each node
or collocation point.
 SplitMult: it is the index of segmentation of the mesh
and is related to the ease to increase the number
of segments in every iteration. It also inﬂuences the
convergence time of the method.
 Number of nodes per segment: it is also called
collocation points. This number deﬁnes the degree of
the polynomial of interpolation used in each segment.
The number is deﬁned between four and twelve nodes
per segment. Initially, each segment has four nodes. This
number can increase in each segment in order to meet
the tolerance error.
 Number of iterations: it is the number of times that
the method can iterate to obtain a solution. The number
considered is ﬁve.
Splitmult and tolerance error have been analyzed from
simulations performed in Section V to obtain the best values
that minimize computation time.
IV. HP-ADAPTIVE PSEUDOSPECTRAL METHOD
The hp-adaptive pseudospectral method numerically
solves optimal control problems. The basic approach is to
transform the optimal control problem into a sequence of
nonlinear constrained optimization problems by discretizing
the state and control variables.
This method determines the number of segments and the
degree of the polynomial in each segment that provides an
accurate approximation to the solution of the optimal control
problem.
The optimal control problem is considered in Bolza form.
The following cost function should be minimized:
J =(x( 1);t
0
;x(+1);t
f
)+
t
f
 t
0
2
Z
1
 1
L(x();u();)d
(1)
subject to the dynamic constraints:
dx
d
=
t
f
 t
0
2
f(x();u();) (2)
4718
Boundary conditions are considered:
(x( 1; );t
0
;x(+1);t
f
) = 0 (3)
and the inequality path constraints:
C(x();u();;t
0
;t
f
) 0 (4)
wherex() is the state,u() is the control, and is time.
The variable [ 1; 1] and t[t
0
;t
f
] are related as
t =
t
f
 t
0
2
 +
t
f
 t
0
2
(5)
The hp-adaptive pseudospectral method can increase the
number of segments and the degree of the polynomial within
a segment to achieve an error less than the tolerance error
allowed [6].
It is an iterative method and computes the solution until
a user-speciﬁed tolerance error is met. The solution is
determined by the number of segments, the width of each
segment and the polynomial degree (number of collocation
points) required in each segment.
Therefore, the method computes an accurate solution at the
collocation points. Moreover, it should compute an accurate
solution between the collocation points in order to ensure
that the constraints are met in the whole problem.
The main advantage of this method is that it leads to
higher accuracy solutions with less computational load than
is required in a global pseudospectral method.
The method could address the 3D problem but in order to
clarify the results, the 2D problem has been considered.
A. Implementation
A model of aerial vehicle is used in this application with
multiple UA Vs. The altitude is assumed to be constant. The
state vector is deﬁned by the position of the aerial vehicle
x
i
and the speed of the aerial vehicle v
i
. The input control
is the speed reference, u
vi
, and the heading reference, u
	i
.
The model considered is:
_ x
i
=v
i
cos(	
i
) (6)
_ v
i
=
 1

(v
i
 u
i
) (7)
where, 	
i
is the heading of the trajectory and  is the
time needed by the UA V to reach the speed reference u
i
.
A multi-UA V system can be deﬁned by concatenating the
state of all the UA Vs. Therefore, the state vector and control
vector are deﬁned as follows:
X = [x
1
;v
1
; x
2
;v
2
;::::;x
n
;v
n
] (8)
U = [u
v1
;u
	1
;u
v2
;u
	2
;::::;u
vn
;u
	n
] (9)
where n is the number of UA Vs.
The solution should satisfy constraints taking into account
the physical limitations of each UA V and the separation
between UA Vs. The UA V speed will be constrained:
v
min
<v
cruise
<v
max
(10)
and the separation betweenUAV
i
andUAV
j
should meet:
distance(UAV
i
;UAV
j
)D (11)
where D is the safety distance and y is obtained from x:
y
i
=tan(	
i
)x
i
+B
i
; with 	
i
6= 0 (12)
where B
i
is the y-intercept of the trajectory.
Moreover, the ETA should be met, so the ﬂight time should
be maintained. Finally, the speed in the ﬁnal waypoint should
be the cruise speed, v
cruise
.
V. SIMULATIONS
Many simulations have been carried out in two different
scenarios with two, three, four and ﬁve UA Vs to analyze
the best values of: splitmult (S), tolerance error (E
t
) and
separation between UA Vs (D). The problems have been
solved by using the open-source pseudospectral optimal
control software GPOPS [2]. The algorithms have been run
in a PC with a CPU Intel Core i7-3770 @ 3.4 Ghz and 16 GB
of RAM. The operating system used in the simulations was
Kubuntu Linux 12.10 OS and the code has been implemented
in Matlab.
The objective of the study is to ﬁnd which values of S,
E
t
andD provide less computation time and the dependency
on the number of UA Vs. This is a critically aspect in real-
time applications. The studies are performed in the scenarios
shown in Figure 1). It is relevant the study of D because,
although the minimum separation is 1 meter, maybe the value
ofD in equation (11) could be greater in order to ensure the
separation in the whole ﬂight and no only at the collocation
points.
Fig. 1. Scenarios considered in the simulations with ﬁve UA Vs: UA V1 in
blue, UA V2 in black, UA V3 in clear blue, UA V4 in red and UA V5 in green.
The considered values of each parameter are: S =
[1:0; 1:1; 1:2; 1:3], E
t
= [0:001; 0:005; 0:01; 0:05; 0:1] and
D = [1:0; 1:1; 1:2; 1:5; 2:0; 2:5]. Therefore, a hundred and
twenty possible combinations fS;E
t
;Dg are explored.
Moreover, ﬁfty simulations are performed in each combi-
nation. Tables I and II show the minimum computation time
obtained and the corresponding combination fS;E
t
;Dg.
4719
Note that the value of D is greater than 1 meter when
the number of UA Vs is greater than two. Therefore, the
separation constraint should consider a greater separation at
each collocation point to ensure the safety distance in the
whole ﬂight. The number of nodes,S andE
t
depend on the
number of UA Vs.
TABLE I
VALUES OBTAINED BY CONSIDERING THE SCENARIO S1.
UA Vs Time (s) Nodes S E
t
(m) D (m)
2 0.082 21 2 0.01 1.0
3 0.300 21 1.2 0.01 1.2
4 0.525 21 1.1 0.05 1.2
5 0.880 17 1.1 0.1 1.3
TABLE II
VALUES OBTAINED BY CONSIDERING THE SCENARIO S2.
UA Vs Time (s) Nodes S E
t
(m) D (m)
2 0.315 37 2.5 0.005 1.0
3 0.550 29 1.2 0.01 1.2
4 0.7301 21 1.1 0.1 1.2
5 1.1706 25 1.0 0.01 1.3
Two simulations are presented to illustrate the solutions
obtained in each scenario. First, scenario S1 with three UA Vs
is considered. Figure 2 shows the number and localisation
of each node or collocation point by considering the best
combination (see Table I). Figure 3 depicts the speed proﬁle
computed. Note that the initial and ﬁnal speed are equal,
v
cruise
= 0:65m=s. Moreover the ETA is met. Finally,
the separation between UA Vs is presented in Figure 4. The
trajectories are safe. For that, D = 1:2m is considered in
equation (11).
Fig. 2. Number of nodes considering three UA Vs in scenario S1: UA V1
in blue, UA V2 in black and UA V3 in clear blue.
Fig. 3. Speed proﬁle of each UA V considering three UA Vs in scenario S1:
UA V1 in blue, UA V2 in black and UA V3 in clear blue.
Fig. 4. Separation between UA Vs considering three UA Vs in scenario S1:
UA V1-UA V2 in black, UA V1-UA V3 in blue, UA V2-UA V3 in red and the
minimum separation in dashed black line.
Second simulation considers scenario S2 with ﬁve UA Vs.
Figure 5 shows the number and localisation of each node
by considering the best combination (see Table II), Figure
6 depicts the speed proﬁle computed, and the separation
between UA Vs is presented in Figure 7. The trajectories are
safe. For that, D = 1:3m is considered in equation (11).
VI. EXPERIMENTS
Two experiments have been carried out in the indoor
multi-UA V testbed of the CATEC with four Hummingbird
quadrotors with 200g payload and up to 20 minutes ﬂight
autonomy. The testbed has an indoor localization system
based on 20 VICON cameras. This system is able to
provide, in real time, the position and attitude of each
UA V with centimeter accuracy. The minimum separation
is 1.0m in the experiments. The parameters are: v
cruise
=
0:65m=s;v
min
= 0:1m=s;v
max
= 2m=s. The experiments
can be seen in the attached video.
In the ﬁrst experiment, a scenario as S1 with four UA Vs is
considered (see Figure 1). A conﬂict is detected in the center,
and then the hp-adaptive pseudospectral method computes
the speed proﬁle for each UA V . Figure 8 shows the UA V
4720
Fig. 5. Number of nodes considering ﬁve UA Vs in scenario S2: UA V1 in
blue, UA V2 in black, UA V3 in clear blue, UA V4 in red and UA V5 in green.
Fig. 6. Speed proﬁle of each UA V considering ﬁve UA Vs in scenario S2:
UA V1 in blue, UA V2 in black, UA V3 in clear blue, UA V4 in red and UA V5
in green.
real trajectories and Figure 9 shows the separation between
UA Vs. Each UA V maintains its initial trajectory and the
minimum separation, and fulﬁlls its ETA.
In the second experiment, a scenario similar to S2 with
four UA Vs is considered (see Figure 1). Now several con-
ﬂicts are detected. The hp-adaptive pseudospectral method
computes the speed proﬁle for each UA V . Figure 10 shows
the UA V real trajectories and Figure 11 shows the separation
between UA Vs. Again, each UA V maintains its initial trajec-
tory and the minimum separation (D = 1m), and fulﬁlls its
ETA.
VII. CONCLUSIONS
The hp-adaptive pseudospectral method presented ad-
dresses problems of collision avoidance with multiple UA Vs.
An optimal solution is computed and changes of speed are
considered to avoid the conﬂicts. The main advantage of the
method is its low computational load and, so its availability
to use in real time applications.
Fig. 7. Separation between UA Vs considering ﬁve UA Vs in scenario S2:
UA V1-UA V2 in black, UA V1-UA V3 in blue, UA V1-UA V4 in red, UA V1-
UA V5 in green, UA V2-UA V3 in clear blue, UA V2-UA V4 in dotted black,
UA V2-UA V5 in dotted blue, UA V3-UA V4 in dotted red, UA V3-UA V5 in
dotted green, UA V4-UA V5 in dotted clear blue and the minimum separation
in dashed black line.
Fig. 8. UA V trajectories in the experiment I: UA V1 in black, UA V2 in
blue, UA V3 in red and UA V4 in green.
Fig. 9. Separation between UA Vs in the experiment I: UA V1-UA V2 in
black, UA V1-UA V3 in blue, UA V1-UA V4 in red, UA V2-UA V3 in green,
UA V2-UA V4 in clear blue, UA V3-UA V4 in yellow and the minimum
separation in dashed black line.
The more novel aspects of the paper can be summarized
in these points:
 The method considers multiple UA Vs. Most of works
published on direct collocation for trajectory generation
consider one aerial vehicle [7] [8].
 The suitable parameters (splitmult, tolerance error and
separation constraint) have been studied to minimize the
4721
Fig. 10. UA V trajectories in the experiment II: UA V1 in black, UA V2 in
blue, UA V3 in red and UA V4 in green.
Fig. 11. Separation between UA Vs in the experiment II: UA V1-UA V2 in
black, UA V1-UA V3 in blue, UA V1-UA V4 in red, UA V2-UA V3 in green,
UA V2-UA V4 in clear blue, UA V3-UA V4 in yellow and the minimum
separation in dashed black line.
computation time. This study has been omitted in the
works published. In this paper it is demonstrated the
inﬂuence of these parameters on the computation time.
The study of the separation constraint, D in equation
(11), plays an important role because the method en-
sures the separation between UA Vs in the whole ﬂight
and not only at each collocation point computed by the
method.
 Several changes of speed can be carried out as in [21]
but the proposed method considerably improves the
computation time and ensures the optimal solution.
 Experiments to verify the solution computed by the
method and its real time application have been carried
out.
Maneuvers changing the heading and/or altitude of each
UA V will be considered in future works. Also, models to
deal with wind will be implemented.
REFERENCES
[1] J. T. Betts, Practical Methods for Optimal Control using Nonlinear
Programming. SIAM Press: Philadelphia, 2011.
[2] A. V . Rao, D. A. Benson, D. C. L., C. Francolin, M. Patterson,
I. Sanders, and G. T. Huntington, “Algorithm: GPOPS, a Matlab
software for solving multiple-phase optimal control problems using
the gauss pseudospectral method,” ACM Transactions on Mathematical
Software, vol. 41, no. 1, pp. 81–126, 2010.
[3] D. A. Benson, G. T. Huntington, T. Thorvaldsen, and A. V . Rao, “Di-
rect trajectory optimization and costate estimation via an orthogonal
collocation method,” Journal of Guidance, Control, and Dynamics,
vol. 29, no. 6, pp. 1435–1440, 2006.
[4] D. Garg, M. A. Patterson, W. W. Hager, A. V . Rao, D. A. Benson, and
G. T. Huntington, “A uniﬁed framework for the numerical solution of
optimal control problems using pseudospectral methods,” Automatica,
vol. 46, no. 11, pp. 1843–1851, 2010.
[5] G. Elnagar, M. Kazemi, and M. Razzaghi, “The pseudospectral
Legendre method for discretizing optimal control problems,” IEEE
Transactions on Automatic Control, vol. 40, no. 10, pp. 1793–1796,
1995.
[6] C. L. Darby, W. W. Hager, and A. V . Rao, “An hp-adaptive pseudospec-
tral method for solving optimal control problems,” Optimal Control
Applications and Methods, vol. 32, no. 4, pp. 476–502, 2010.
[7] B. R. Geiger, J. F. Horn, G. L. Sinsley, J. A. Ross, and L. N. Long,
“Flight testing a real time implementation of a UA V path planner using
direct collocation,” in Proceedings of the AIAA Guidance, Navigation
and Control Conference and Exhibit, South Carolina, USA, 20-23
August 2007.
[8] G. Basset, Y . Xua, and O. A. Yakimenkob, “Computing short time
aircraft maneuvers using direct methods,” Journal of Computer and
Systems Sciences International, vol. 49, no. 3, pp. 481–513, 2010.
[9] K. P. Bollino and L. R. Lewis, “Collision-free multi-UA V optimal
path planning and cooperative control for tactical applications,” in
AIAA Guidance, Navigation and Control Conference and Exhibit, 18-
21 August 2008, pp. 1–18.
[10] C. Goerzen, Z. Kong, and B. Mettler, “A survey of motion planning al-
gorithms from the perspective of autonomous UA V guidance,” Journal
of Intelligent Robot Systems, vol. 57, pp. 65–100, 2010.
[11] J. K. Kuchar and L. C. Yang, “A review of conﬂict detection and
resolution modeling methods,” IEEE Transactions on Intelligent Trans-
portation Systems, vol. 1, pp. 179–189, 2000.
[12] H. Prasanna, D. Ghosey, M. Bhat, C. Bhattacharyya, and J. Umakant,
“Interpolation-aware trajectory optimization for a hypersonic vehicle
using nonlinear programming,” in AIAA Guidance, Navigation, and
Control Conference and Exhibit, San Francisco, California (USA), 15-
18 August 2005.
[13] L. Pallottino, E. Feron, and A. Bicchi, “Conﬂict resolution problems
for air trafﬁc management systems solved with mixed integer pro-
gramming,” Intelligent Transportation Systems, IEEE Transactions on,
vol. 3, no. 1, pp. 3 –11, mar 2002.
[14] K. Mohan, M. A. Patterson, and A. V . Rao, “Optimal trajectory and
control generation for landing of multiple aircraft in the presence of
obstacles,” in AIAA Guidance, Navigation and Control Conference and
Exhibit, 13-16 August 2012, pp. 1–16.
[15] H. Cover, S. Choudhury, S. Scherer, and S. Singh, “Sparse tangential
network (spartan):motion planning for micro aerial vehicles,” in Pro-
ceedings of the 2013 IEEE International Conference on Robotics and
Automation (ICRA), Karlsruhe, (Germany), 6-10 May 2013.
[16] S. M. Lavalle, J. J. Kuffner, and Jr., “Rapidly-exploring random trees:
Progress and prospects,” in Algorithmic and Computational Robotics:
New Directions, 2000, pp. 293–308.
[17] D. Alejo, J. A. Cobano, G. Heredia, and A. Ollero, “Particle Swarm
Optimization for collision-free 4d trajectory planning in unmanned
aerial vehicles,” in Proceedings of the International Conference on
Unmanned Aircraft Systems (ICUAS), Atlanta, USA, 28-31 May 2013,
pp. 298–307.
[18] R. Conde, D. Alejo, J. A. Cobano, A. Viguria, and A. Ollero, “Conﬂict
detection and resolution method for cooperating unmanned aerial
vehicles,” Journal of Intelligent & Robotic Systems, vol. 65, pp. 495–
505, 2012, 10.1007/s10846-011-9564-6.
[19] N. Durand and J. Alliot, “Ant colony optimization for air trafﬁc
conﬂict resolution,” in Proceedings of the Eighth USA/Europe Air
Trafﬁc Management Research and Development Seminar (ATM2009),
Napa, (CA, USA), 2009.
[20] A. Lecchini, W. Glover, J. Lygeros, and J. Maciejowski, “Monte
carlo optimization for conﬂict resolution in air trafﬁc control,” IEEE
Transaction on Intelligent Transportation System, vol. 7, pp. 470–482,
2006.
[21] D. Alejo, J. M. D´ ıaz-B´ a˜ nez, J. A. Cobano, P. P´ erez-Lantero, and
A. Ollero, “The velocity assignment problem for conﬂict resolution
with multiple aerial vehicles sharing airspace,” Journal of Intelligent
and Robotic Systems, vol. 69, no. 1-4, pp. 331–346, 2013.
4722
