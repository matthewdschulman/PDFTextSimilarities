Grid Mapping in Dynamic Road Environments: Classiﬁcation of
Dynamic Cell Hypothesis via Tracking
Matthias Schreier, V olker Willert, J¨ urgen Adamy
Abstract— We propose a method capable of acquiring an
occupancy grid map-based representation of the local, static
driving environment around an intelligent vehicle in the
presence of dynamic objects. These corrupt the represen-
tation due to violating the underlying static-world assump-
tions of common grid mapping algorithms and are there-
fore detected and ﬁltered from the map. For this pur-
pose, a subsequent step is suggested that identiﬁes, clus-
ters and merges dynamic cell hypothesis in a novel way.
Thereafter, an Interacting-Multiple-Model-Unscented-Kalman-
Probabilistic-Data-Association (IMM-UK-PDA) tracker is used
to classify of whether cell movements behave consistently with
possible movement characteristics of real dynamic objects or
are just generated by noise or newly observed static environ-
ment. In opposition to many other approaches, the method
explicitly combines information of newly occupied and free
areas, completes the shape of only partly visible dynamic objects
and uses an advanced object tracking scheme to clean the grid
from dynamic object corruptions. The method is evaluated with
grids generated by an automotive radar and stereo camera in
real trafﬁc environments.
I. INTRODUCTION AND RELATED WORK
Nowadays, more and more occupancy grid maps are used
as a dense environment representation for Advanced Driver
Assistance Systems (ADAS) [1], [2] and intelligent vehicles
in order to fulﬁll tasks such as automated lateral vehicle guid-
ance with respect to elevated objects or collision avoidance
under consideration of drivable free space [3], [4]. These are,
however, normally based on mapping algorithms designed
for a static world, e.g. Binary Bayes Filters, so that dynamic
objects corrupt the representation in form of trails of slowly
declining occupancy probabilities.
1
Although, in principle,
occupancy grids can deal with dynamic environments, they
have an inherent drawback: To unlearn that a cell is free takes
as many observations as to learn its occupancy [6]. The aim
of the paper is to present a method that minimizes these
errors online to generate a local, static grid map valid at the
moment it is generated in general driving environments. This
facilitates higher-level environment recognition tasks that do
not have to deal with moving object corruptions any more
as well as extend available static free space for trajectory
planners.
Previous works that tackle the problem of mapping highly
dynamic environments can be subdivided into two categories.
First, algorithms that try to incorporate the scene dynamics
M. Schreier, V . Willert and J. Adamy are with the Institute of
Automatic Control and Mechatronics, Control Theory and Robotics
Lab, TU Darmstadt, Landgraf-Georg-Str. 4, 64283 Darmstadt, Germany
fschreier,vwillert,jadamyg@rtr.tu-darmstadt.de
1
A similar problem arises in computer vision algorithms that ﬁlter the
optical ﬂow [5].
directly in the mapping process and second, methods that
ﬁlter out measurements supposed to belong to dynamic
objects and subsequently use a standard mapping algorithm
suitable for a static world.
A representative of the ﬁrst category is the so-called
Bayesian Occupancy Filter [7] that generates a four-
dimensional grid representation of the environment – two
dimensions for the Cartesian coordinates and two for the
velocity components of each cell – in which each cell
movement is predicted with a constant velocity model. A
computationally less demanding modiﬁcation [8] produces
a two-dimensional occupancy grid representation with each
cell having an associated distribution over possible velocities.
Another approach is described in [9] where a particle ﬁlter-
based tracking is used to infer the velocity of each grid
cell. The raw occupancy grid serves as the measurement
vector and the particles additionally provide the building
blocks of the modeled world. Two grids are used in [10],
one for representing the occupancy probability of moving
and one of static objects, which are mapped with different
inverse sensor models. However, no physically interpretable
prediction models are applied. Hence, if a moving object
cannot be detected, the area is inevitably mapped into the
static grid, because detection fails cannot be bridged.
Apart from the necessary processing power, the disad-
vantage of these methods is that they cannot easily be
combined with existing systems that rely on a standard grid
representation, contrary to the works of the second category.
Representatives of this second group are the works of [11]
that bring up the general problem of SLAMMOT (Simultane-
ous Localization, Mapping and Moving Object Tracking) and
provide a computationally feasible solution by decomposing
the problem into two separate estimators that solve SLAM
(Simultaneous Localization And Mapping) and DATMO
(Detection And Tracking of Moving Objects) concurrently,
which results in separate moving object grids for each object
as well as a grid for the static world. Either a consistency-
based or a moving-object map-based detector is used to
classify measurements belonging to moving objects directly.
These are ﬁltered from the static map to get a better pose
estimation within SLAM. In [12], moving people are tracked
by means of a sample-based JPDA ﬁlter and measurement
beams resulting from moving objects are likewise excluded
to improve the map quality. In [13], new measurements are
compared with the local map to classify them as dynamic.
However, ambiguities occur if objects appear in unexplored
regions, because it is not possible to distinguish between
moving and newly appearing static environments. There-
2014 IEEE International Conference on Robotics & Automation (ICRA)
Hong Kong Convention and Exhibition Center
May 31 - June 7, 2014. Hong Kong, China
978-1-4799-3684-7/14/$31.00 ©2014 IEEE 3995
fore, a tracking step is used in [14] as an improvement
after initial dynamic cell hypothesis generation to separate
dynamic and static objects more robustly. Laser scanner
measurements are subsequently connected with the help of
box models of predeﬁned sizes for different classes such
as pedestrians or vehicles. A motion evidence score is
calculated in [15] to help ﬁltering out false moving object
hypothesis. This score is based on newly occupied and free
regions, but, in opposition to our approach, the information
is not used within the measurement vector generation for an
employed Rao-Blackwellized particle ﬁlter-based tracking. A
combination of object-based multi-target tracking and grid
mapping can further be found in [16], where grid cells are
associated to object states and predicted within the map.
A subsequent feedback from the map is used to preserve
consistency between the map content and the object list.
With this laser scanner-based system, trails of moving objects
can be suppressed and the tracking itself beneﬁts from the
grid mapping. In [17], the disparity image is classiﬁed into
regions of stationary and moving parts by generating object
hypotheses by segmenting object contours on a v-disparity
image that are tracked over time with additionally exploiting
optical ﬂow within the measurement equations. A classiﬁer
based on a sequential probability ratio test on the residuals
of a stationary and a moving process model is used to
distinguish moving from stationary parts of the environment,
whereupon only non-moving parts of the disparity image are
integrated into the grid. In [18], fuzzy rules are used for the
distinction between static and dynamic cells that take into
account criteria such as cluster size, correlation, grid resolu-
tion, etc. Once a cell is classiﬁed as dynamic, it is, however,
not updated in the standard way, but by taking the current
sensor measurement as the new occupancy probability. Due
to unconvincing results, the same authors propose a different
approach within [19]. The grid itself undergoes a hierarchical
segmentation based on a distance criterion, whereupon each
segment is tried to be associated with already tracked objects.
Segments associated with moving objects are used to update
an IMM tracking ﬁlter while only the ones associated with
stationary objects update an occupancy grid. The problem
of direct grid segmentation, as done here, is that adjacent
static and moving segments merge together, which limits the
approach in unstructured inner city environments with many
static segments in the vicinity of moving objects.
All in all, the main limitation of the methods of this second
category is that they can only be applied if measurements can
robustly be separated into measurements of stationary and
moving objects.
2
This is a challenging task even for high-
precision laser scanner sensors such as utilized in [11], [14],
[15], yet alone for less accurate distance sensors like stereo
cameras and radars (we use in our work) as already stated
in [19].
2
Some vision-based works, e.g. [20], circumvent this separation problem
by using trained image feature-based vehicle/people detectors and exclude
all emerging tracks from a simultaneously built static occupancy grid. This
is, however, neither possible with other environment sensors nor for non-
trained dynamic objects and would also exclude standing vehicles/people.
Our approach belongs to the second category, therefore
keeps the standard grid mapping algorithm, but differs
from the mentioned methods in a couple of ways. First,
we do not try to classify raw sensor measurements as
static or dynamic, but cells within temporally consecutive
maps after a traditional grid map update step. Therefore,
false, spurious measurements are ﬁltered out by the inverse
sensor model initially. Second, we explicitly make use of
a measurement of newly available free space and combine
this information with newly occupied areas for general
dynamic object hypothesis generation even in the vicinity
of static environment. With this novel approach, it is not
only possible to receive a unique object angle measurement
within each time step, but also to recombine even only
partly visible objects without the need of clustering
the original grid or measurement. Third, a nonlinear,
adaptive Interacting-Multiple-Model-Unscented-Kalman-
Probabilistic-Data-Association (IMM-UK-PDA) tracker
is used not merely to recursively estimate the states of
underlying motion models of extended objects, but rather
for checking the consistency of cell movements with
movement characteristics of real dynamic objects. This
helps in deciding between real dynamics, newly mapped
static environment and sensor noise. Its further possible to
ﬁlter out dynamic cells even if the motion detector fails by
using the prediction models.
II. THEORETICAL FOUNDATIONS – IMM-UK-PDA
This section provides the theoretical foundations of a
combination of an Interacting Multiple Model (IMM) multi-
target tracking ﬁlter with underlying Unscented Kalman
(UK) ﬁlters and additional Probabilistic Data Association
(PDA) used for the classiﬁcation. It is mainly based upon
a combination of [21]–[25] and provides a computationally
modest solution to the problem of recursively estimating
states and mode probabilities of targets, each described by a
jump Markov nonlinear system, in the presence of clutter.
3
We consider thej-th model of a model setM =fM
j
g
r
j=1
to be given by the nonlinear stochastic state space model
x
k+1
=f
j
(x
k
;u
k
) +w
j;k
; (1a)
z
k
=h
j
(x
k
;u
k
) +v
j;k
; (1b)
with input vectoru
k
2R
p
, state vectorx
k
2R
n
, measure-
ment vectorz
k
2R
q
, system functionf
j
and measurement
function h
j
at each time step k. The zero-mean, white,
Gaussian noise sequences w
j;k
2 R
n
and v
j;k
2 R
q
are
mutually independent with covariance matrices Q
j;k
and
R
j;k
, respectively. The evolution of the hybrid system among
the r models is considered a ﬁrst order Markov chain with
time-invariant Markovian model transition probability matrix
 =
0
B
@
p
11
 p
r1
.
.
.
.
.
.
.
.
.
p
1r
 p
rr
1
C
A2R
rr
; (2)
3
The term mode probability is used for the probability of the event that a
hypothesized model matches the true behavior pattern (or mode) of a target.
3996
in which p
ij
denotes the probability that a mode transition
occurs from model i to model j [21]. The explanation
of the tracking ﬁlter is subdivided into ﬁve main steps –
the interaction (or mixing) step, the state prediction and
measurement validation step, the data association and model-
speciﬁc ﬁltering step, the mode probability update step and
the combination step.
A. Interaction Step
In the interaction step, the individual state and covariance
estimates of the underlying ﬁlters of the last time step
^ x
j;k 1
;P
j;k 1
are probabilistically mixed to form a single
initial state ^ x
?
j;k 1
and covariance P
?
j;k 1
for each ﬁlter j
according to
^ x
?
j;k 1
=
r
X
i=1

(ijj);k 1
^ x
i;k 1
; (3a)
P
?
j;k 1
=
r
X
i=1

(ijj);k 1
[P
i;k 1
+
+ (^ x
i;k 1
  ^ x
?
j;k 1
)(^ x
i;k 1
  ^ x
?
j;k 1
)
T
]: (3b)
Herein, 
(ijj);k 1
are the conditional mode probabilities or
mixing probabilities, corresponding to the probability that
mode i has been in effect in the previous cycle given that
modej is active in the current time step. They are calculated
according to

(ijj);k 1
=
p
ij

i;k 1

 
j;k
(4)
with the help of the a priori mode probabilities

 
k
= (
 
1;k
;:::;
 
r;k
)
T
of the actual time step, which are
themselves given by the prediction of the mode probabilities
of the last time step with elements from as follows:

 
j;k
=
r
X
i=1
p
ij

i;k 1
: (5)
Consequently, the initial state vector of each ﬁlter results
from the state estimation of all ﬁlters of the last time step.
B. Prediction and Measurement Validation Step
Afterwards, these initial states and covariances are pre-
dicted to the actual time step k for each model individually
in order to get predicted measurements. Due to nonlinearities,
this is realized by means of an UK ﬁlter prediction [25]:
4
X
k 1
=
 
^ x
?
k 1

p
P
?
k 1
 ^ x
?
k 1
 
p
P
?
k 1
 ^ x
?
k 1

;
X

i;k
=f(X
i;k 1
;u
k 1
); i = 0;:::; 2n;
^ x
 
k
=
2n
X
i=0
w
(m)
i
X

i;k
;
P
 
k
=
2n
X
i=0
w
(c)
i
 
X

i;k
  ^ x
 
k
 
X

i;k
  ^ x
 
k

T
+Q
k 1
;
4
For shorter notation, the operation of adding a column vectorb to each
column of a matrixA is written asAb. Moreover, the index for each
model j is omitted.
X
k
=

^ x
 
k

q
P
 
k
 ^ x
 
k
 
q
P
 
k
 ^ x
 
k

;
Z
i;k
=h(X
i;k
;u
k
); i = 0;:::; 2n;
^ z
 
k
=
2n
X
i=0
w
(m)
i
Z
i;k
;
S
k
=
2n
X
i=0
w
(c)
i
 
Z
i;k
  ^ z
 
k
 
Z
i;k
  ^ z
 
k

T
+R
k
:
(6)
At ﬁrst, 2n + 1 sigma points X
i
with i 2 f0;:::; 2ng,
subsumed in the matrixX = (X
0
;:::;X
2n
)2R
n(2n+1)
,
are chosen based on a square-root decomposition of the
mixed initial covariance of each ﬁlter. Each sigma point has
two associated scalar weights w
(m)
i
and w
(c)
i
given by
w
(m)
0
=

n +
; w
(c)
0
=

n +
+ (1 
2
U
+
U
); (7a)
w
(m)
i
=w
(c)
i
=
1
2(n +)
; i = 1;:::; 2n; (7b)
 =
2
U
(n +
U
) n; (7c)
 =
p
n +; (7d)
with scaling parameters 
U
;
U
;
U
; and . These sigma
points are propagated through the system functionf without
approximation and the mean and variance are retrieved with
the calculated weights. With Q
k 1
, new sigma points are
chosen, propagated through the measurement function h
and the predicted, a priori measurement ^ z
 
k
with associated
innovation covariance matrix S
k
is ﬁnally recovered from
the propagated sigma pointsZ
i
for each model.
For validating a measurement for all models of a track, it
must lie within an elliptical validation gate
V
k
(
G
) =fz
k
j (z
k
 ^ z
 
jr;k
)
T
S
 1
jr;k
(z
k
 ^ z
 
jr;k
)
G
g; (8)
centered at ^ z
 
jr;k
, with gate threshold 
G
[21] and j
r
normally calculated as j
r
= arg max
j2M
jS
j;k
j [23].
The threshold 
G
is obtained from the inverse chi-
square cumulative distribution with a chosen gate prob-
ability P
G
=P (z
k
2V
k
(
G
)) and dim(z) =q degrees of
freedom. The volume of the validation region V
k
is
V
k
=c
q
j
G
S
jr;k
j
1
2
with the volume of the q-dimensional
unit hypersphere c
q
=

1
2
q
 (
1
2
q+1)
and gamma function
  [21]. Consequently, we get one validated measurement set
Z
v;k
=fz
m;k
g
Nv
m=1
for all models of a track.
C. Data Association and Model-Speciﬁc Filtering Step
This is followed by a model-speciﬁc ﬁltering by updating
each track with the r UK-PDA ﬁlters that yield a posteriori
state and covariance estimates ^ x
j;k
andP
j;k
for each model
by incorporating the actual validated measurement set:
5
C
x
k
;z
k
=
2n
X
i=0
w
(c)
i
 
X
i;k
  ^ x
 
k
 
Z
i;k
  ^ z
 
k

T
;
K
k
=C
x
k
;z
k
S
 1
k
;
5
The index for each model j is omitted here for brevity.
3997
^ x
k
= ^ x
 
k
+K
k
v
k
= ^ x
 
k
+K
k
Nv
X
m=1

m;k
(z
m;k
  ^ z
 
k
)
| {z }
v
m;k
| {z }
v
k
;
P
k
=
0;k
P
 
k
+ (1 
0;k
)(P
 
k
 K
k
S
k
K
T
k
)+
+K
k
 
Nv
X
m=1

m;k
v
m;k
v
T
m;k
 v
k
v
T
k
!
K
T
k
:
(9)
First, the cross covariance matrixC
x
k
;z
k
between predicted
measurements and states are used together with innovation
covariance S
k
to calculate the optimal Kalman gain K
k
for each model such as within the normal UK ﬁlter. The
state and covariance update step then equals the conven-
tional PDA ﬁlter update [21] that weights the inﬂuence
of a measurement z
m;k
with associated innovation v
m;k
,
according to its association probability 
m;k
. We consider
a nonparametric, uniform, diffuse prior clutter model that
uses the number of returns in the track gate to estimate
the clutter density and that is suitable for heterogeneous
clutter environments as any number of false measurements
is considered equiprobable [23]. Under these considerations,
the association probability 
m;k
for z
m;k
being the correct
measurement given a target detection probability P
D
is
calculated according to

m;k
=
8
<
:
em
b+
P
Nv
i=1
ei
; m = 1;:::;N
v
;
b
b+
P
Nv
i=1
ei
; m = 0;
e
m
=e
 
1
2
v
T
m;k
S
 1
k
v
m;k
;
b =

2


q
2
N
v
(1 P
D
P
G
)
c
q
P
D
;
(10)
while
0;k
is the probability that no measurements within the
gate are correctly belonging to the track and model under
consideration [21].
D. Mode Probability Update Step
With the Gaussian-uniform mixture model likelihoods

j;k
=
1  (P
D
P
G
)
(V
k
)
Nv
+
P
D
V
(1 Nv )
k
N
v
p
j2S
j;k
j
Nv
X
m=1
e
j;m
; (11)
the mode probabilities can now be updated based on how
well the measurements ﬁt to the model as follows [21]:

j;k
=

 
j;k

j;k
r
X
i=1

 
i;k

i;k
: (12)
E. Combination Step
Just for ﬁnal output purpose, the individual updated ﬁlter
states are combined to a ﬁnal state and covariance estimate
^ x
k
=
r
X
j=1

j;k
^ x
j;k
; (13a)
P
k
=
r
X
j=1

j;k
[P
j;k
+ (^ x
j;k
  ^ x
k
)(^ x
j;k
  ^ x
k
)
T
]: (13b)
In the next section, it will be made clear, why this ﬁlter
combination is suited to robustly classify the dynamic status
of grid cells online.
III. ALGORITHM
A complete overview of the proposed algorithm is given
in Fig. 1. It consists of three main steps: The generation
IMM-UK-PDA tracking
m
k
m
k?1
Temporal backward di?erence quotient
Thresholding
u
k?1
?
k
Newly free cells Newly occupied cells
Classiﬁcation
Bresenham rasterization
ˆ x
k
Flood ﬁll
m
opt,k
Z
k
Rectangle ﬁtting Rectangle ﬁtting
Clustering (DBSCAN) Clustering (DBSCAN)
Rectangle merging
Rectangle shortening
M,?
P
d
,P
g
Dynamic cell hypothesis generation Classiﬁcation and
postprocessing
r
DB
N
DB
?
3,th
q
th
A
th
,?
th
d
th
,p
th
Fig. 1. Overview of one time step of the proposed algorithm.
of dynamic cell hypothesis (blue), the subsequent tracking
(orange) as well as the classiﬁcation and grid post processing
(yellow), which are described in detail in the following
subsections and further illustrated in the running example in
Fig. 2. The actual grid mapm
k
, the map of the last time step
m
k 1
as well as the ego motion vectoru
k 1
are the inputs
of the algorithm that outputs an optimized gridm
opt;k
, free
of dynamic object corruptions. The grid maps themselves are
supposed to be the result of standard individual Binary Bayes
Filter updates [26] for each cell m
i
. The set of environment
sensor measurements is generated by a stereo camera and an
automotive radar sensor with individual appropriate inverse
sensor models in our case, the set of ego vehicle poses
is known precisely due to the ego vehicles’ ESP sensors.
As this common kind of mapping assumes a static world,
dynamic objects show trails of slowly declining occupancy
probabilities (Fig. 2(a,b)).
A. Dynamic Cell Hypothesis Generation
The ﬁrst step within the grid-based dynamic cell hypothe-
sis generation is the calculation of the ego-motion compen-
sated temporal backward difference quotient (Fig. 2c) of the
occupied probability for each grid cell to highlight changing
3998
x (cells)
y (cells)
0 100 200 300 400 500
0
100
200
300
400
500
?e
ve
(a) (b)
x (cells)
y (cells)
0 100 200 300 400 500
200
300
400
500
(c)
x (cells)
y (cells)
?1,k = 356.9 ?
?2,k = 156.9 ?
?1,k = 356.9
?
?2,k = 156.9
?
0 100 200 300 400 500
200
300
400
500
(d)
0 100 200 300 400 500
300
400
500
x (cells)
y (cells)
(e)
0 100 200 300 400 500
300
400
500
x (cells)
y (cells)
(f)
x (cells)
y (cells)
0 100 200 300 400 500
0
100
200
300
400
500
0 20 40
0
0.5
1
k
 
 
?1 (CV)
?2 (CTRV)
?3 (Random)
(g)
x (cells)
y (cells)
0 100 200 300 400 500
0
100
200
300
400
500
(h)
Fig. 2. The exemplary driving scene (a) contains a dynamic object in
front of the ego vehicle and construction walls at the side. The unoptimized
occupancy grid map m
k
(b) is acquired from an automotive radar and
a stereo camera. The darker a cell, the higher its occupancy probability
p(m
i
). The map is of ﬁxed size (80m80m) and shifted with the ego
vehicle’s motion, whose orientation in the map is given by the yaw angle e .
The temporal difference quotient with corresponding individual rectangles
(newly free: green; newly occupied: red) is visualized in (c), the combined
rectangle (blue) and reconstructed dynamic object hypothesis (orange) in
(d), clustering results of newly free/occupied areas in (e/f) and tracks in (g).
The random mode probability of the real dynamic object rapidly decreases
towards zero, which is therefore classiﬁed as dynamic in opposition to the
false hypothesis at lower left. The ﬁnal, optimized map m
opt;k
(h) only
contains the static world.
regions, which could stem from real dynamic objects, but
also from newly mapped static environment or noise. Frame
differencing is a common approach for movement detection
in the image analysis domain, the problem, however, is
that the main parts of moving objects are suppressed and
invisible in this representation. This is due to the fact that
the occupancy probability changes only marginally in areas,
where the dynamic objects really are, but much stronger in
areas that the objects just entered and just passed. Conse-
quently, dynamic objects have to be reconstructed. Therefore,
two new binary grids are generated by segmenting the
temporal difference grid with two thresholdsq
th
, so that
one contains only cells of rising free probability (newly
free cells) and the other only cells of rising occupancy
probability (newly occupied cells). These new grids are
clustered separately (Fig. 2(e,f)) by means of a Density Based
Spatial Clustering for Applications with Noise (DBSCAN)
with neighborhood radius r
DB
and minimal point number
N
DB
[27], followed by a calculation of oriented rectangles
for each individual cluster (Fig. 2c). This is made more
robust by ﬁrst extracting the error ellipse of each cluster by
scaling its covariance matrix and generating the bounding
rectangle for each ellipse. Afterwards, rectangles of newly
free clusters are tried to be merged with rectangles of newly
occupied clusters in order to bridge invisible object areas.
This rectangle shape model assumption is reasonable for
vehicles, bicycles or pedestrians and makes a completion of
only partially visible objects possible, e.g. if only two edges
are visible. The merging criteria are deduced from consider-
ations that hold in perfectly mapped bird’s eye view grids.
First, newly occupied and newly free rectangles belonging to
the same object must have the same area as dynamic objects
are supposed to be non-deforming. Second, their orientation
must be equal. Third, cells that lie in between have to be
occupied in the original grid and fourth, their distance must
lie within certain bounds corresponding to real object sizes.
Based on a relaxed fulﬁllment of these criteria, rectangles are
merged by calculating the combined rectangle of newly free
and newly occupied areas of an object. These are, however,
too large as the areas of newly free cells do not correspond
to the real object and therefore have to be shortened by the
newly free rectangle in order to generate a ﬁnal dynamic
object hypothesis (Fig. 2d). The steps are further elaborated
in Fig. 3. For each ﬁnal object rectangle, the centerx;y, the
A
f
A
o
?
f
?
o
d
x
k?1
x
k
(a)
(b)
(c)
(d)
x
y
y
k
x
k
x
y
y
k
?
k
x
y
x
y
l
k
w
k
Fig. 3. The position of a dynamic object moving to the right (yellow arrow)
is visualized in (a) within two consecutive time steps in a grid map ﬁxed co-
ordinate system. The corresponding temporal backward difference quotient
grid is shown in (b). Newly free cells are depicted in green, newly occupied
cells in red. The merging criteria are similar areas A
f
;Ao , checked by
1
A
th
<
A
f
Ao
<A
th
with threshold A
th
; similar angles 
f
;o , checked
by
 
min
 
(
f
 o)mod(

=2);

=2 ((
f
 o)mod(

=2))

<
th
to
account for the fact that the angles at this stage are ambiguous with respect
to the quadrant and a merging can occur via the length or width of the
rectangle; maximal distance d, checked by d < d
th
; and a minimal
percentage p of occupied cells within the connection line of the center
of masses of the two rectangles, checked by p > p
th
. The result of the
merging in form of the blue, combined rectangle is shown in (c) while the
ﬁnal, orange rectangle that has been shortened by the newly free cells and
that corresponds to the reconstruction of the original object is visualized in
(d).
3999
orientation in the direction of newly occupied cells as well
as length l and width w are measured and subsumed in the
measurement vector z = (z
1
;:::;z
5
)
T
= (x;y; ;l;w)
T
.
The set of all N
z
measurements in time step k is given
byZ
k
=fz
i;k
g
Nz
i=1
, which are subsequently ﬁltered by an
IMM-UK-PDA tracker in order to reason about whether their
movements are consistent with movement characteristics of
real dynamic objects.
B. IMM-UK-PDA Tracking
For this purpose, we consider a model setM =fM
i
g
r
i=1
of r = 3 models within the tracking ﬁlter that share a
common state vectorx = (x;y; ;v;!;l;w)
T
consisting of
object center position within the grid map-ﬁxed coordinate
system x;y, heading angle , velocity magnitude in driving
direction v, turn rate ! as well as object length l and width
w. Two of them model physically consistent motion behavior
of real objects in form of a (nearly) Constant Velocity
(CV) model M
1
given by the discrete-time stochastic state
equation
x
k+1
=
0
B
B
B
B
B
B
B
B
@
x
k
+
v
k
T sin 
k
c
y
k
+
v
k
T cos 
k
c
 
k
v
k
0
l
k
w
k
1
C
C
C
C
C
C
C
C
A
+u
k
+w
k
; (14)
and for turning objects in form of a (nearly) Constant Turn
Rate and Velocity (CTRV) model M
2
given by
x
k+1
=
0
B
B
B
B
B
B
B
B
@
x
k
+
v
k
c!
k
(cos 
k
  cos(!
k
T + 
k
))
y
k
+
v
k
c!
k
(sin(!
k
T + 
k
)  sin 
k
)
 
k
+!
k
T
v
k
!
k
l
k
w
k
1
C
C
C
C
C
C
C
C
A
+u
k
+w
k
:
(15)
considering a grid cell length c. Each share a common
artiﬁcial input vector u
k
that models the purely trans-
lational, deterministic grid map shift due to ego motion
and have individual zero-mean, white, Gaussian noise se-
quencesw
1;k
;w
2;k
with corresponding covariance matrices
Q
1;k
;Q
2;k
. These models are common within maneuvering
multi-target tracking applications and are extensions of the
ones found for example in [28]. We now supplement the
models with a third model M
3
that corresponds to random
movements, in fact being a stationary model, given by
x
k+1
= (x
k
;y
k
; 
k
; 0; 0;l
k
;w
k
)
T
+u
k
+w
k
(16)
with much larger process noise covarianceQ
3;k
. The com-
mon measurement equation is given by
z
k
=
0
B
B
B
B
@
1 0 0 0 0 0 0
0 1 0 0 0 0 0
0 0 1 0 0 0 0
0 0 0 0 0 1 0
0 0 0 0 0 0 1
1
C
C
C
C
A
x
k
+v
k
: (17)
The aim now is to estimate the probabilities that temporally
consecutive measurements correspond to real dynamic ob-
jects, therefore behaving according to a CV/CTRV model,
or whether they are rather generated by random noise or
static environment false positives and therefore better ﬁtting
the random movement model. The reason why the chosen
model set allows this classiﬁcation is further explained in
Fig. 4 in a one-dimensional example.
p(z
?
k
|x
k?1
,M
1
)
p(z
?
k
|x
k?1
,M
3
)
z
ˆ z
?
3,k
ˆ z
?
1,k
z
k?1
p(z
?
k
|x
k?1
,M
2
)
ˆ z
?
2,k
r
Fig. 4. We suppose the dynamic object is moving to the right. Its last
position is given by z
k 1
and the corresponding states x
k 1
include a
positive velocity. The measurement prediction densities for this scenario
p(z
 
k
jx
k 1
;M
j
) are qualitatively visualized. All of the three models can
describe any kind of movement theoretically. The difference is that they
can do this to a different extent. The models M
1
and M
2
make sharper
predictions centered at the predicted position further to the right whileM
3
spreads its predicted probability over a much wider measurement space
with minor overlap on the consistent models and remains centered at the old
position. If a new measurement at time stepk now falls in the measurement
space r, the consistent models explain the measurement much better. This
results in a higher mode probability forM
1
andM
2
. The fact that the ﬁlter
favors the model that ﬁts better to the measurement sequence (higher mode
probability) allows a classiﬁcation of consistent and inconsistent movement
behavior with negligible degradation of tracking performance. The more
speciﬁc the prediction models, the better the discrimination capabilities.
Due to nonlinearities and clutter, the ﬁltering is performed
as explained in section II, so that states and mode probabili-
ties are recursively estimated (Fig. 2g). However, instead of
using the predicted measurement with the largest – in terms
of determinant – innovation covarianceS, we only consider
the model subsetM
s
=fM
1
;M
2
g, so that j
r
in (8) equals
j
r
= arg max
j2Ms
jS
j;k
j. Otherwise, the large innovation
covariance of the random movement model would amplify
the track coalescence effect stemming from the associated
large gates within a probabilistic data association. To prevent
the problem of the discontinuity at the zero and 2 angle
crossing within the tracking, the angle state is unbounded and
measured angles with 2 [0; 2[ are artiﬁcially increased
by multiples of 2 to best ﬁt the state prediction. This
modiﬁcation also solves the problem within the interaction
step (3a) if one model already crossed the discontinuity and
the others did not.
C. Classiﬁcation and Grid Post Processing
For the decision if a cell within a dynamic rectangle
object hypothesis can be classiﬁed as dynamic, the random
movement mode probability 
3
is compared to a threshold

3;th
as soon as a track is conﬁrmed. All cells that belong
to tracks classiﬁed as dynamic are then artiﬁcially set to free
in the actual grid map as the map shall contain only the
static world and areas that other dynamic objects passed are
considered static free space. For this purpose, bounding rect-
angles are calculated for each track with their actual reﬁned
4000
length and width estimations and rasterized on the grid by
means of the Bresenham algorithm and under consideration
of the past ego motion. A subsequent ﬂood ﬁll procedure is
performed for clearing dynamic object mapping errors and
the ﬁnal, optimized grid mapm
opt;k
is generated (Fig. 2h).
If the online classiﬁcation decision of a cell being dynamic
is not supported any more by a sufﬁciently low random
movement mode probability, its actual occupancy probability
is reinserted into the grid, which is considered a further
advantage.
IV. EVALUATION
The system is evaluated in 17 real trafﬁc scenarios (2766
grid maps, 500000 cells per grid) that comprise 10 vehicle
following and 7 crossroad scenarios in inner cities and
freeways. Fig. 5 shows an excerpt of four scenes to get
a better idea of the scenarios and achievable results. All
scenarios contain a large amount of static environment to
be mapped simultaneously such as parking cars, guardrails,
trees that are partly in direct vicinity of dynamic vehicles.
The parameters used within the evaluation can be found
in Table I. The evaluation is performed on track level as
TABLE I
PARAMETERS USED IN THE EXPERIMENTAL VALIDATION
Parameter Value
c;T;q
th
0.16 m; 0.065 s; 0.9
1
/s
N
DB
;r
DB
12; 3cells
A
th
;
th
3; 40

d
th
;p
th
12 m; 20%
Q
1
diag
 
0;0;(5

=s)
2
;(2
m
=s
2
)
2
;0;(1
m
=s)
2
;(0:5
m
=s)
2

T
2
Q
2
diag
 
0;0;0;(2
m
=s
2
)
2
;(50

=s
2
)
2
;:::
(1
m
=s)
2
;(0:5
m
=s)
2

T
2
Q
3
diag
 
(
40
c
m
=s)
2
;(
40
c
m
=s)
2
;(40

=s)
2
;0;0;:::
(2
m
=s)
2
;(1
m
=s)
2

T
2
R diag
 
(
1
c
m)
2
;(
1
c
m)
2
;(10

)
2
;(0:34m)
2
;(0:2m)
2

 p
ij
= 0:968i =j; p
ij
= 0:028i6=j
P
f1;2;3g;0
diag
 
(
1
c
m)
2
;(
1
c
m)
2
;(10

)
2
;(10
m
=s)
2
;(25

=s)
2
;:::
(0:34m)
2
;(0:2m)
2


0
;x
0
(
1
3
;
1
3
;
1
3
)
T
; (z
1;0
;z
2;0
;z
3;0
;0;0;z
4;0
;z
5;0
)
T

U
;
U
;
U
0.001; 2; 0
P
D
;P
G
0.7; 0.9

3;th
0.05
well as on cell level. On track level, the system is in fact a
pattern recognition system trying to classify emerging tracks
as originating from real dynamic objects or not. Deﬁning
a True Positive (TP) classiﬁcation as “Real dynamic object
correctly classiﬁed as real dynamic object” and a False
Positive (FP) as “Non-dynamic object misclassiﬁed as real
dynamic object”, it is obvious that FP’s can have severe
consequences for collision avoidance systems due to the
fact that static environment cells would falsely be cleared
from the grid. Therefore, a track already counts as FP, if
it is misclassiﬁed as a real dynamic object at least once.
6
In contrast, a False Negative (FN) is not as severe, because
in this case a real dynamic object and its cell corruptions
6
Same for TP’s. A track counts as TP, if correctly classiﬁed as dynamic at
least once. If a TP result is falsely withdrawn over time, it will not alter the
classiﬁcation statistics, but have negative effects on the cell level evaluation.
will remain present in the grid as static obstacles. 518 tracks
have been initialized in total. The classiﬁcation results are
33 TP, 7 FP, 475 TN and 3 FN, resulting in a precision of
0.83, recall of 0.92 and a balanced accuracy of 0.95. The
mean decision time for classifying a TP starting with the
initial detection is (3:3 0:57) time steps. This is equal to
the timespan after which the grid cleaning procedure begins.
The mean timespan for which the seldom FP classiﬁcations
persist until falsely cleared cells are reinserted into the grid
lies at only (3:5 0:18) times steps. Consequently, each FP
has only a very short-term negative effect. For the cell level
classiﬁcation, we examine how many grid cells are correctly
cleared from dynamic object corruptions. For this purpose,
all grids were manually labeled by marking areas that are
completely free in reality, but not in the grid due to dynamic
object corruptions. All cells in these areas (> 2 10
6
in
total) are checked of whether being successfully cleared
by the algorithm or not. Fig. 6 shows the ﬁnal result in
form of a distribution of the number of remaining dynamic
cell corruptions for different occupancy probability intervals
compared to the standard grid mapping (left) as well as the
percentage of successfully cleaned cells within each interval
(right). In total, 75:5% of dynamic object cell corruptions
0 0.2 0.4 0.6 0.8 1
0
1
2
3
4
5
6
7
8
x 10
5
p(m
i
)
Dynamic object corruptions (cells)
 
 
Standard grid mapping
Proposed method
0 0.2 0.4 0.6 0.8 1
0
10
20
30
40
50
60
70
80
90
p(m
i
)
Successfully cleaned cells (%)
Fig. 6. Left: Number of dynamic object corruptions. Right: Percentage of
successfully cleaned cells.
were successfully removed with the proposed algorithm.
ACKNOWLEDGMENTS
We kindly thank the Continental AG for cooperation and
funding within the PRORETA 3 project, which aims at
the development of future concepts for integrated driver
assistance systems.
REFERENCES
[1] R. Grewe, A. Hohm, S. Hegemann, S. Lueke et al., “Towards a Generic
and Efﬁcient Environment Model for ADAS,” in Proc. of the IEEE
Intelligent Vehicles Symposium, Alcal´ a de Henares, Spain, Jun. 2012,
pp. 316–321.
[2] M. Schreier, V . Willert, and J. Adamy, “From Grid Maps to Para-
metric Free Space Maps - A Highly Compact, Generic Environment
Representation for ADAS,” in Proc. of the IEEE Intelligent Vehicles
Symposium, Gold Coast, Australia, Jun. 2013, pp. 938–944.
[3] E. Bauer, F. Lotz, M. Pfromm, M. Schreier et al., “PRORETA 3: An
Integrated Approach to Collision Avoidance and Vehicle Automation,”
at - Automatisierungstechnik, vol. 60, no. 12, pp. 755–765, Dec. 2012.
4001
x (cells)
y (cells)
0 100 200 300 400 500
0
100
200
300
400
500
(a)
x (cells)
y (cells)
0 100 200 300 400 500
0
100
200
300
400
500
(b)
x (cells)
y (cells)
0 100 200 300 400 500
0
100
200
300
400
500
(c)
x (cells)
y (cells)
0 100 200 300 400 500
0
100
200
300
400
500
(d)
?m = 72.6
?
T11
x (cells)
y (cells)
?m = 258.3
?
T1
?m = 259.0
?
T12
0 100 200 300 400 500
0
100
200
300
400
500
x (cells)
y (cells)
?m = 264.16
?
T9
?m = 270.51
?
?m = 263.27
? T2
T16
0 100 200 300 400 500
0
100
200
300
400
500
?m = 97.4
?
T2
x (cells)
y (cells)
0 100 200 300 400 500
0
100
200
300
400
500
T1
?m = 108.6
?
T3
x (cells)
y (cells)
?m = 107.1
?
100 200 300 400 500
0
100
200
300
400
500
Fig. 5. Top: Original gridm
k
. Bottom: Optimized gridm
opt;k
with tracks. Only tracks classiﬁed as consistently moving are cleared fromm
k
.
[4] M. Schreier and V . Willert, “Robust Free Space Detection in Oc-
cupancy Grid Maps by Methods of Image Analysis and Dynamic
B-Spline Contour Tracking,” in Proc. of the IEEE International
Conference on Intelligent Transportation Systems, Anchorage, USA,
Sep. 2012, pp. 514–521.
[5] V . Willert and J. Eggert, “A Stochastic Dynamical System for Optical
Flow Estimation,” in Proc. of the 12th IEEE International Conference
on Computer Vision, 4th Workshop on Dynamical Vision, Kyoto, Japan,
Sep. 2009, pp. 711–718.
[6] W. Burgard and M. Hebert, “World Modeling,” in Springer Handbook
of Robotics, B. Siciliano and O. Khatib, Eds. Berlin: Springer-Verlag,
2008, ch. 36, pp. 853–869.
[7] C. Cou´ e, C. Pradalier, C. Laugier, T. Fraichard et al., “Bayesian Occu-
pancy Filtering for Multitarget Tracking: An Automotive Application,”
The International Journal of Robotics Research, vol. 25, no. 1, pp. 19–
30, Jan. 2006.
[8] C. Chen, C. Tay, C. Laugier, and K. Mekhnacha, “Dynamic Environ-
ment Modeling with Gridmap: A Multiple-Object Tracking Applica-
tion,” in Proc. of the International Conference on Control, Automation,
Robotics and Vision, Singapore, Dec. 2006, pp. 1–6.
[9] R. Danescu, F. Oniga, and S. Nedevschi, “Particle Grid Tracking
System for Stereo Based Environment Perception,” in Proc. of the
IEEE Intelligent Vehicles Symposium, San Diego, CA, USA, Jun. 2010,
pp. 987–992.
[10] D. F. Wolf and G. S. Sukhatme, “Mobile Robot Simultaneous Local-
ization and Mapping in Dynamic Environments,” Autonomous Robots,
vol. 19, no. 1, pp. 53–65, Jul. 2005.
[11] C.-C. Wang, C. Thorpe, S. Thrun, M. Hebert et al., “Simultaneous Lo-
calization, Mapping and Moving Object Tracking,” The International
Journal of Robotics Research, vol. 26, no. 9, pp. 889–916, Sep. 2007.
[12] D. H¨ ahnel, D. Schulz, and W. Burgard, “Map Building with Mobile
Robots in Populated Environments,” in Proc. of the IEEE/RSJ Interna-
tional Conference on Intelligent Robots and Systems, vol. 1, Lausanne,
Switzerland, Oct. 2002, pp. 496–501.
[13] T.-D. Vu, O. Aycard, and N. Appenrodt, “Online Localization and
Mapping with Moving Object Tracking in Dynamic Outdoor Environ-
ments,” in Proc. of the IEEE Intelligent Vehicles Symposium, Istanbul,
Turkey, Jun. 2007, pp. 190–195.
[14] T.-D. Vu and O. Aycard, “Laser-based Detection and Tracking Moving
Objects using Data-Driven Markov Chain Monte Carlo,” in Proc. of
the IEEE International Conference on Robotics and Automation, Kobe,
Japan, May 2009, pp. 3800–3806.
[15] A. Petrovskaya and S. Thrun, “Model Based Vehicle Detection
and Tracking for Autonomous Urban Driving,” Autonomous Robots,
vol. 26, no. 2-3, pp. 123–139, Apr. 2009.
[16] M. E. Bouzouraa and U. Hofmann, “Fusion of Occupancy Grid
Mapping and Model Based Object Tracking for Driver Assistance
Systems using Laser and Radar Sensors,” in Proc. of the IEEE
Intelligent Vehicles Symposium, San Diego, CA, USA, Jun. 2010, pp.
294–300.
[17] H. Lategahn, T. Graf, C. Hasberg, B. Kitt et al., “Mapping in Dynamic
Environments Using Stereo Vision,” in Proc. of the IEEE Intelligent
Vehicles Symposium, Baden-Baden, Germany, Jun. 2011, pp. 150–156.
[18] T.-N. Nguyen, M.-M. Meinecke, M. Tornow, and B. Michaelis, “Opti-
mized Grid-Based Environment Perception in Advanced Driver Assis-
tance Systems,” in Proc. of the IEEE Intelligent Vehicles Symposium,
Xi’an, Shaanxi, China, Jun. 2009, pp. 425–430.
[19] T.-N. Nguyen, B. Michaelis, A. Al-Hamadi, M. Tornow et al., “Stereo-
Camera-Based Urban Environment Perception Using Occupancy Grid
and Object Tracking,” IEEE Transactions on Intelligent Transportation
Systems, vol. 13, no. 1, pp. 154–165, Mar. 2012.
[20] A. Ess, K. Schindler, B. Leibe, and L. Van Gool, “Object Detection
and Tracking for Autonomous Navigation in Dynamic Environments,”
International Journal of Robotics Research, vol. 29, no. 14, pp. 1707–
1725, Dec. 2010.
[21] Y . Bar-Shalom and X.-R. Li, Multitarget-Multisensor Tracking: Prin-
ciples and Techniques. Storrs, CT: Yaakov Bar-Shalom, 1995.
[22] Y . Bar-Shalom, X.-R. Li, and T. Kirubarajan, Estimation with Appli-
cations to Tracking and Navigation. Theory, Algorithms and Software.
New York: Wiley-Interscience, 2001.
[23] S. Blackman and R. Popoli, Design and Analysis of Modern Tracking
Systems. Boston: Artech House, 1999.
[24] X.-R. Li and V . P. Jilkov, “Survey of Maneuvering Target Tracking.
Part V: Multiple-Model Methods,” IEEE Transactions on Aerospace
and Electronic Systems, vol. 41, no. 4, pp. 1255–1321, Oct. 2005.
[25] S. J. Julier and J. K. Uhlmann, “A New Extension of the Kalman
Filter to Nonlinear Systems,” in Proc. of SPIE3068: Signal Processing,
Sensor Fusion, and Target Recognition VI, vol. 3068, Orlando, FL,
USA, Jul. 1997, pp. 182–193.
[26] S. Thrun, W. Burgard, and D. Fox, Probabilistic Robotics, ser. Intelli-
gent Robotics and Autonomous Agents. Cambridge, Massachusetts:
The MIT Press, 2006.
[27] M. Ester, H.-P. Kriegel, J. Sander, and X. Xu, “A Density-Based Algo-
rithm for Discovering Clusters in Large Spatial Databases with Noise,”
in Proc. of the International Conference on Knowledge Discovery and
Data Mining, Portland, Oregon, USA, Aug. 1996, pp. 226–231.
[28] X.-R. Li and V . P. Jilkov, “Survey of Maneuvering Target Tracking.
Part I: Dynamic Models,” IEEE Transactions on Aerospace and
Electronic Systems, vol. 39, no. 4, pp. 1333–1364, Oct. 2003.
4002
